Pin: pin-3.11-97998-7ecce2dac
Copyright 2002-2019 Intel Corporation.
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146825]
 Invalid RTN lea rax, ptr [rip+0x1b69e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fb91be9e6a0
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fb91be9e6a8
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fb91be9e680
 Invalid RTN test byte ptr [rdx+0x71], 0x2
 Invalid RTN jz 0x7fb91be9e6d0
 Invalid RTN test cl, 0x20
 Invalid RTN jnz 0x7fb91be9e6d0
 Invalid RTN and ecx, 0x8
 Invalid RTN lea rax, ptr [rip+0xc869b]
 Invalid RTN lea rdx, ptr [rip+0xcdd34]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147525]
 Invalid RTN lea rax, ptr [rip+0xeab1e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91be9d988
 Invalid RTN lea rax, ptr [rip+0x17967]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fb91be9d988
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x9723]
 Invalid RTN lea rdx, ptr [rip+0xd73ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1464f5]
 Invalid RTN lea rax, ptr [rip+0xe4bee]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7fb91be9e9ab
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7fb91be9e996
 Invalid RTN lea rax, ptr [rip+0xdf7d3]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7fb91be9e9ab
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xc3d0]
 Invalid RTN lea rdx, ptr [rip+0xd0549]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147c05]
 Invalid RTN lea rax, ptr [rip+0xe9dee]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91be9d2a8
 Invalid RTN lea rax, ptr [rip+0x1aa67]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fb91be9d2a8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x1a893]
 Invalid RTN lea rdx, ptr [rip+0x12e7c]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1474c5]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe9000]
 Invalid RTN lea rax, ptr [rip+0x12099]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN sub rsp, 0x28
 Invalid RTN mov edx, 0x5f
 Invalid RTN mov eax, 0x50e3a8
 Invalid RTN lea rcx, ptr [rip+0xe1ed4]
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7fb91becefb9
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7fb91becf02d
 Invalid RTN lea rax, ptr [rip+0xe1e99]
 Invalid RTN mov rsi, rsp
 Invalid RTN lea rdi, ptr [rip+0xe393d]
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN call 0x7fb91bf5ee10
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7fb91becefb9
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7fb91becf02d
 Invalid RTN lea rax, ptr [rip+0xe1e99]
 Invalid RTN mov rsi, rsp
 Invalid RTN lea rdi, ptr [rip+0xe393d]
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN call 0x7fb91bf5ee10
 Invalid RTN nop edx, edi
 Invalid RTN sub rsp, 0x38
 Invalid RTN mov r10, qword ptr [rip+0x86041]
 Invalid RTN mov rax, qword ptr fs:[0x28]
 Invalid RTN mov qword ptr [rsp+0x28], rax
 Invalid RTN xor eax, eax
 Invalid RTN mov rax, qword ptr [r10+0x198]
 Invalid RTN test rax, rax
 Invalid RTN jz 0x7fb91bf5eea1
 Invalid RTN lea rdx, ptr [rsp+0x10]
 Invalid RTN pxor xmm0, xmm0
 Invalid RTN mov r8, rsi
 Invalid RTN xor r9d, r9d
 Invalid RTN mov qword ptr [rsp+0x8], rdx
 Invalid RTN mov rsi, rax
 Invalid RTN lea rdx, ptr [rsp+0x8]
 Invalid RTN lea rcx, ptr [rax+0x390]
 Invalid RTN movaps xmmword ptr [rsp+0x10], xmm0
 Invalid RTN mov qword ptr [rsp+0x20], 0x0
 Invalid RTN mov byte ptr [rsp+0x14], 0x20
 Invalid RTN push 0x0
 Invalid RTN push 0x0
 Invalid RTN call qword ptr [r10+0x1b8]
 Invalid RTN mov rdx, rax
 Invalid RTN mov rax, qword ptr [rsp+0x18]
 Invalid RTN pop rcx
 Invalid RTN pop rsi
 Invalid RTN test rax, rax
 Invalid RTN jz 0x7fb91bf5eea1
 Invalid RTN cmp word ptr [rax+0x6], 0xfff1
 Invalid RTN jz 0x7fb91bf5eec0
 Invalid RTN test rdx, rdx
 Invalid RTN jz 0x7fb91bf5eec0
 Invalid RTN mov rdx, qword ptr [rdx]
 Invalid RTN add rdx, qword ptr [rax+0x8]
 Invalid RTN mov rax, rdx
 Invalid RTN mov rcx, qword ptr [rsp+0x28]
 Invalid RTN xor rcx, qword ptr fs:[0x28]
 Invalid RTN jnz 0x7fb91bf5eec4
 Invalid RTN add rsp, 0x38
 Invalid RTN ret 
 Invalid RTN lea rdx, ptr [rip-0x91]
 Invalid RTN test rax, rax
 Invalid RTN cmovz rax, rdx
 Invalid RTN add rsp, 0x28
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x145055]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe2e90]
 Invalid RTN lea rax, ptr [rip+0xa559]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x129fc5]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xcf5e0]
 Invalid RTN lea rax, ptr [rip+0x113a9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x12a485]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xcfd70]
 Invalid RTN lea rax, ptr [rip+0x11b99]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1466c5]
 Invalid RTN lea rax, ptr [rip+0x1b50e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fb91be9e800
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fb91be9e808
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fb91be9e7e0
 Invalid RTN test byte ptr [rdx+0x71], 0x2
 Invalid RTN jz 0x7fb91be9e830
 Invalid RTN test cl, 0x20
 Invalid RTN jnz 0x7fb91be9e830
 Invalid RTN and ecx, 0x8
 Invalid RTN lea rax, ptr [rip+0xc5b3b]
 Invalid RTN lea rdx, ptr [rip+0xcb0c4]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146895]
 Invalid RTN mov rax, 0x80000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN cmp rax, 0x2
 Invalid RTN jz 0x7fb91be9e610
 Invalid RTN lea rax, ptr [rip+0xed424]
 Invalid RTN test ecx, 0x80000
 Invalid RTN jnz 0x7fb91be9e609
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xc372]
 Invalid RTN lea rdx, ptr [rip+0xf0d2b]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147595]
 Invalid RTN lea rax, ptr [rip+0xe4bfe]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91be9d922
 Invalid RTN mov edx, dword ptr [rcx+0x70]
 Invalid RTN test edx, 0x100000
 Invalid RTN jz 0x7fb91be9d90d
 Invalid RTN lea rax, ptr [rip+0xdf87c]
 Invalid RTN test byte ptr [rcx+0xcc], 0x80
 Invalid RTN jz 0x7fb91be9d922
 Invalid RTN and dh, 0x2
 Invalid RTN lea rax, ptr [rip+0xaee9]
 Invalid RTN lea rdx, ptr [rip+0xc5292]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147b55]
 Invalid RTN lea rax, ptr [rip+0xe4d7e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91be9d358
 Invalid RTN lea rax, ptr [rip+0xb217]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fb91be9d358
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x9db3]
 Invalid RTN lea rdx, ptr [rip+0xc45ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146765]
 Invalid RTN lea rax, ptr [rip+0x1b9ee]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x10
 Invalid RTN jnz 0x7fb91be9e764
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fb91be9e768
 Invalid RTN mov eax, dword ptr [rdx+0x7c]
 Invalid RTN and eax, 0x200
 Invalid RTN test byte ptr [rdx+0xc8], 0x2
 Invalid RTN jz 0x7fb91be9e750
 Invalid RTN test eax, eax
 Invalid RTN lea rdx, ptr [rip+0x1b9c7]
 Invalid RTN lea rax, ptr [rip+0x1b940]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x12a4c5]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xd0720]
 Invalid RTN lea rax, ptr [rip+0x129e9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x147635]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe94e0]
 Invalid RTN lea rax, ptr [rip+0x126a9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x147a75]
 Invalid RTN lea rdx, ptr [rip+0xe48ee]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1c633]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1464a5]
 Invalid RTN lea rax, ptr [rip+0xe621e]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7fb91be9e9fb
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7fb91be9e9e6
 Invalid RTN lea rax, ptr [rip+0xe1333]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7fb91be9e9fb
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xe5d0]
 Invalid RTN lea rdx, ptr [rip+0xd2659]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147ad5]
 Invalid RTN lea rax, ptr [rip+0xead3e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91be9d3d8
 Invalid RTN lea rax, ptr [rip+0x178e7]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fb91be9d3d8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x176f3]
 Invalid RTN lea rdx, ptr [rip+0xd61ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146355]
 Invalid RTN lea rax, ptr [rip+0x1b1ce]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fb91be9eb70
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fb91be9eb78
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fb91be9eb50
 Invalid RTN test byte ptr [rdx+0x71], 0x2
 Invalid RTN jz 0x7fb91be9eba0
 Invalid RTN test cl, 0x20
 Invalid RTN jnz 0x7fb91be9eba0
 Invalid RTN and ecx, 0x8
 Invalid RTN lea rax, ptr [rip+0xc57eb]
 Invalid RTN lea rdx, ptr [rip+0xcad74]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x128d55]
 Invalid RTN lea rax, ptr [rip+0xcf5ae]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91bebc148
 Invalid RTN test byte ptr [rcx+0x72], 0x8
 Invalid RTN lea rax, ptr [rip+0x11943]
 Invalid RTN lea rdx, ptr [rip+0x1171c]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x129ef5]
 Invalid RTN lea r8, ptr [rip-0xf02]
 Invalid RTN mov rcx, 0x10000000002
 Invalid RTN mov rdx, qword ptr [rax+0xc8]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, rdx
 Invalid RTN cmp rax, rcx
 Invalid RTN jnz 0x7fb91bebafb8
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN lea r8, ptr [rip+0xd3e6a]
 Invalid RTN and rdx, rax
 Invalid RTN lea rax, ptr [rip+0xcefe0]
 Invalid RTN cmp rdx, 0x4
 Invalid RTN cmovnz r8, rax
 Invalid RTN mov rax, r8
 Invalid RTN ret 
 Invalid RTN mov rax, r8
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x12a445]
 Invalid RTN lea rdx, ptr [rip+0xc132e]
 Invalid RTN test byte ptr [rax+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x12953]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x147485]
 Invalid RTN lea rdx, ptr [rip+0xe443e]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1c0f3]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147ba5]
 Invalid RTN lea rax, ptr [rip+0xe92de]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91be9d2fb
 Invalid RTN test byte ptr [rcx+0xcc], 0x40
 Invalid RTN lea rax, ptr [rip+0x12330]
 Invalid RTN lea rdx, ptr [rip+0xf1d19]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x147675]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe9380]
 Invalid RTN lea rax, ptr [rip+0x12549]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x13e105]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xdc090]
 Invalid RTN lea rax, ptr [rip+0x3819]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146455]
 Invalid RTN lea rax, ptr [rip+0xe4b62]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7fb91be9ea4b
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7fb91be9ea36
 Invalid RTN lea rax, ptr [rip+0xdf747]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7fb91be9ea4b
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xc350]
 Invalid RTN lea rdx, ptr [rip+0xd04c9]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1468d5]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe4440]
 Invalid RTN lea rax, ptr [rip+0xbaa9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x12a375]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xd09f0]
 Invalid RTN lea rax, ptr [rip+0x12fa9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x1471c5]
 Invalid RTN lea rdx, ptr [rip+0xe42be]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1bee3]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x146555]
 Invalid RTN lea rax, ptr [rip+0xea85e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91be9e958
 Invalid RTN lea rax, ptr [rip+0x18067]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fb91be9e958
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x86e3]
 Invalid RTN lea rdx, ptr [rip+0xda7ac]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x1465b5]
 Invalid RTN lea rax, ptr [rip+0xea50e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91be9e8f8
 Invalid RTN lea rax, ptr [rip+0x17a07]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fb91be9e8f8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x162c3]
 Invalid RTN lea rdx, ptr [rip+0xd8ffc]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x129f85]
 Invalid RTN mov rax, 0x80000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN cmp rax, 0x2
 Invalid RTN jz 0x7fb91bebaf20
 Invalid RTN lea rax, ptr [rip+0xd2154]
 Invalid RTN test ecx, 0x80000
 Invalid RTN jnz 0x7fb91bebaf19
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0x112e2]
 Invalid RTN lea rdx, ptr [rip+0xd5b8b]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x145015]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe6960]
 Invalid RTN lea rax, ptr [rip+0xf9d9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146405]
 Invalid RTN lea rax, ptr [rip+0xe6192]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7fb91be9ea9b
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7fb91be9ea86
 Invalid RTN lea rax, ptr [rip+0xe12a7]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7fb91be9ea9b
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xe550]
 Invalid RTN lea rdx, ptr [rip+0xd25d9]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN sub rsp, 0x28
 Invalid RTN mov edx, 0x5f
 Invalid RTN mov eax, 0x50e3a8
 Invalid RTN lea rcx, ptr [rip+0xe1df4]
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7fb91becf099
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7fb91becf10d
 Invalid RTN lea rax, ptr [rip+0xe1db9]
 Invalid RTN mov rsi, rsp
 Invalid RTN lea rdi, ptr [rip+0xe3869]
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN call 0x7fb91bf5ee10
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7fb91becf099
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7fb91becf10d
 Invalid RTN lea rax, ptr [rip+0xe1db9]
 Invalid RTN mov rsi, rsp
 Invalid RTN lea rdi, ptr [rip+0xe3869]
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN call 0x7fb91bf5ee10
 Invalid RTN lea rdx, ptr [rip-0xb1]
 Invalid RTN test rax, rax
 Invalid RTN cmovz rax, rdx
 Invalid RTN add rsp, 0x28
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146825]
 Invalid RTN lea rax, ptr [rip+0x1b69e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fb91be9e6a0
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fb91be9e6a8
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fb91be9e680
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x1469b5]
 Invalid RTN lea rdx, ptr [rip-0x362]
 Invalid RTN test byte ptr [rax+0xcc], 0x10
 Invalid RTN lea rax, ptr [rip+0x1b0d0]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1464f5]
 Invalid RTN lea rax, ptr [rip+0xe4bee]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7fb91be9e9ab
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7fb91be9e996
 Invalid RTN lea rax, ptr [rip+0xdf7d3]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7fb91be9e9ab
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147ad5]
 Invalid RTN lea rax, ptr [rip+0xead3e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91be9d3d8
 Invalid RTN lea rax, ptr [rip+0x178e7]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fb91be9d3d8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x176f3]
 Invalid RTN lea rdx, ptr [rip+0xd61ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x145015]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe6960]
 Invalid RTN lea rax, ptr [rip+0xf9d9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x1465b5]
 Invalid RTN lea rax, ptr [rip+0xea50e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91be9e8f8
 Invalid RTN lea rax, ptr [rip+0x17a07]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fb91be9e8f8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x162c3]
 Invalid RTN lea rdx, ptr [rip+0xd8ffc]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x147675]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe9380]
 Invalid RTN lea rax, ptr [rip+0x12549]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147ba5]
 Invalid RTN lea rax, ptr [rip+0xe92de]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91be9d2fb
 Invalid RTN test byte ptr [rcx+0xcc], 0x40
 Invalid RTN lea rax, ptr [rip+0x12330]
 Invalid RTN lea rdx, ptr [rip+0xf1d19]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146765]
 Invalid RTN lea rax, ptr [rip+0x1b9ee]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x10
 Invalid RTN jnz 0x7fb91be9e764
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fb91be9e768
 Invalid RTN mov eax, dword ptr [rdx+0x7c]
 Invalid RTN and eax, 0x200
 Invalid RTN test byte ptr [rdx+0xc8], 0x2
 Invalid RTN jz 0x7fb91be9e750
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x1471c5]
 Invalid RTN lea rdx, ptr [rip+0xe42be]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1bee3]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x147a75]
 Invalid RTN lea rdx, ptr [rip+0xe48ee]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1c633]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147b55]
 Invalid RTN lea rax, ptr [rip+0xe4d7e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91be9d358
 Invalid RTN lea rax, ptr [rip+0xb217]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fb91be9d358
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x9db3]
 Invalid RTN lea rdx, ptr [rip+0xc45ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146355]
 Invalid RTN lea rax, ptr [rip+0x1b1ce]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fb91be9eb70
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fb91be9eb78
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fb91be9eb50
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x147485]
 Invalid RTN lea rdx, ptr [rip+0xe443e]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1c0f3]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x146555]
 Invalid RTN lea rax, ptr [rip+0xea85e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fb91be9e958
 Invalid RTN lea rax, ptr [rip+0x18067]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fb91be9e958
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x86e3]
 Invalid RTN lea rdx, ptr [rip+0xda7ac]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1466c5]
 Invalid RTN lea rax, ptr [rip+0x1b50e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fb91be9e800
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fb91be9e808
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fb91be9e7e0
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146825]
 Invalid RTN lea rax, ptr [rip+0x1b69e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fb91be9e6a0
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fb91be9e6a8
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fb91be9e680
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdx
 ins:mov r9, rdx
 reg:r9
 Exe .text
 INSTSELECTOR: instruction to be included pop rsi
 ins:pop rsi
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rsp
 ins:mov rdx, rsp
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included and rsp, 0xfffffffffffffff0
 ins:and rsp, 0xfffffffffffffff0
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rax
 ins:push rax
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rsp
 ins:push rsp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [rip+0x11af6]
 ins:lea r8, ptr [rip+0x11af6]
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x11a7f]
 ins:lea rcx, ptr [rip+0x11a7f]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip-0x208]
 ins:lea rdi, ptr [rip-0x208]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rdx
 ins:mov r15, rdx
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsi
 ins:mov r14, rsi
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 ins:mov r13d, edi
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x77a4]
 ins:lea r12, ptr [rip+0x77a4]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0x77a4]
 ins:lea rbp, ptr [rip+0x77a4]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rbp, r12
 ins:sub rbp, r12
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sar rbp, 0x3
 ins:sar rbp, 0x3
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 ins:xor ebx, ebx
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r15
 ins:mov rdx, r15
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 ins:mov rsi, r14
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r13d
 ins:mov edi, r13d
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x1a509]
 ins:lea rdi, ptr [rip+0x1a509]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x1a502]
 ins:lea rsi, ptr [rip+0x1a502]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsi, rdi
 ins:sub rsi, rdi
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rsi
 ins:mov rax, rsi
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr rsi, 0x3f
 ins:shr rsi, 0x3f
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included sar rax, 0x3
 ins:sar rax, 0x3
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rsi, rax
 ins:add rsi, rax
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included sar rsi, 0x1
 ins:sar rsi, 0x1
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1a275]
 ins:mov rax, qword ptr [rip+0x1a275]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 ins:add rbx, 0x1
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rbx
 ins:cmp rbp, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x110
 ins:sub rsp, 0x110
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x40]
 ins:lea rdi, ptr [rsp+0x40]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x40]
 ins:lea rax, ptr [rsp+0x40]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x11
 ins:mov edi, 0x11
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x138
 ins:sub rsp, 0x138
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x99a4]
 ins:lea rax, ptr [rip+0x99a4]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, edi
 ins:movsxd rdx, edi
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdx
 ins:mov rbp, rdx
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xa0
 ins:sub rsp, 0xa0
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xc7dd]
 ins:lea rax, ptr [rip+0xc7dd]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+rdx*8]
 ins:mov rax, qword ptr [rax+rdx*8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 ins:xor ebx, ebx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 ins:cmp byte ptr [rax], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rax], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included setz bl
 ins:setz bl
 reg:bl
 Exe .text
 INSTSELECTOR: instruction to be included add ebx, 0x2
 ins:add ebx, 0x2
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x11
 ins:cmp ebp, 0x11
 reg:rflags
 NORMAL FLAG REG: inst cmp ebp, 0x11
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x2
 ins:mov eax, 0x2
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, eax
 ins:cmovz ebx, eax
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 ins:lea r12d, ptr [rbp-0x1]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0xf08f]
 ins:lea r13, ptr [rip+0xf08f]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 ins:movsxd r12, r12d
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 ins:movsx eax, byte ptr [r13+r12*1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 ins:cmp al, 0x4
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xecc2]
 ins:mov eax, dword ptr [rip+0xecc2]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0x16
 ins:cmp edx, 0x16
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x5312]
 ins:lea rcx, ptr [rip+0x5312]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, edx
 ins:mov edx, edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rcx+rdx*4]
 ins:movsxd rax, dword ptr [rcx+rdx*4]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rcx
 ins:add rax, rcx
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 ins:mov ebx, 0x1
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x11
 ins:cmp ebp, 0x11
 reg:rflags
 NORMAL FLAG REG: inst cmp ebp, 0x11
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x2
 ins:mov eax, 0x2
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, eax
 ins:cmovz ebx, eax
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 ins:lea r12d, ptr [rbp-0x1]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0xf08f]
 ins:lea r13, ptr [rip+0xf08f]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 ins:movsxd r12, r12d
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 ins:movsx eax, byte ptr [r13+r12*1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 ins:cmp al, 0x4
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsp
 ins:mov r14, rsp
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, eax
 ins:cmp ebx, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 ins:cmp ebx, 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x3
 ins:cmp ebx, 0x3
 reg:rflags
 NORMAL FLAG REG: inst cmp ebx, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x8]
 ins:lea rdi, ptr [rsp+0x8]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip-0x1f7]
 ins:lea rax, ptr [rip-0x1f7]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x8]
 ins:lea rdi, ptr [rsp+0x8]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 ins:mov rsi, r14
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebp
 ins:mov edi, ebp
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x98]
 ins:mov rax, qword ptr [rsp+0x98]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xa0
 ins:add rsp, 0xa0
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x9e35]
 ins:lea rdi, ptr [rip+0x9e35]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [rip+0xa42a]
 ins:lea r8, ptr [rip+0xa42a]
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included mov r9d, 0xa41a41a5
 ins:mov r9d, 0xa41a41a5
 reg:r9d
 Exe .text
 INSTSELECTOR: instruction to be included lea r10, ptr [rdi+0x100]
 ins:lea r10, ptr [rdi+0x100]
 reg:r10
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi+0x10]
 ins:mov rdx, qword ptr [rdi+0x10]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdx]
 ins:movzx esi, byte ptr [rdx]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 ins:mov ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 ins:shl ecx, 0x4
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included cmp sil, 0x3d
 ins:cmp sil, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 ins:movzx eax, byte ptr [rdx+0x1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 ins:add ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 ins:cmp al, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, r9
 ins:imul rax, r9
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 ins:add eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 ins:imul eax, eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8+rcx*8]
 ins:mov rax, qword ptr [r8+rcx*8]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x20
 ins:add rdi, 0x20
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r10
 ins:cmp rdi, r10
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, al
 ins:movzx esi, al
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 ins:movzx eax, byte ptr [rdx+0x1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 ins:add ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 ins:cmp al, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, r9
 ins:imul rax, r9
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 ins:add eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 ins:imul eax, eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8+rcx*8]
 ins:mov rax, qword ptr [r8+rcx*8]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x20
 ins:add rdi, 0x20
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r10
 ins:cmp rdi, r10
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi+0x10]
 ins:mov rdx, qword ptr [rdi+0x10]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdx]
 ins:movzx esi, byte ptr [rdx]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 ins:mov ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 ins:shl ecx, 0x4
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included cmp sil, 0x3d
 ins:cmp sil, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, r9
 ins:imul rax, r9
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 ins:add eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 ins:imul eax, eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8+rcx*8]
 ins:mov rax, qword ptr [r8+rcx*8]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x20
 ins:add rdi, 0x20
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r10
 ins:cmp rdi, r10
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x325c]
 ins:lea rdx, ptr [rip+0x325c]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x324c]
 ins:lea rax, ptr [rip+0x324c]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz rax, rdx
 ins:cmovnz rax, rdx
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x9114]
 ins:mov rbx, qword ptr [rip+0x9114]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 ins:mov rdi, qword ptr [rbx]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included movzx r12d, byte ptr [rdi]
 ins:movzx r12d, byte ptr [rdi]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12b, 0x5f
 ins:cmp r12b, 0x5f
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rax
 ins:mov r8, rax
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, r12b
 ins:movzx eax, r12b
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rbx
 ins:mov r12, rbx
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r8]
 ins:mov rdx, qword ptr [r8]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rdx+rax*2+0x1], 0x4
 ins:test byte ptr [rdx+rax*2+0x1], 0x4
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rbx+0x1]
 ins:lea r12, ptr [rbx+0x1]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rbx+0x1]
 ins:movzx ebx, byte ptr [rbx+0x1]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 ins:test bl, bl
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 ins:cmp bl, 0x5f
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+rbx*2], 0x8
 ins:test byte ptr [rax+rbx*2], 0x8
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [r12+0x1]
 ins:movzx ebx, byte ptr [r12+0x1]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 ins:add r12, 0x1
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 ins:test bl, bl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 ins:cmp bl, 0x5f
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 ins:mov rdi, qword ptr [rbx]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 ins:cmp rdi, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x3d
 ins:cmp byte ptr [rax], 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x9
 ins:mov esi, 0x9
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x8
 ins:add rbx, 0x8
 reg:rbx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included movzx edi, byte ptr [rdi]
 ins:movzx edi, byte ptr [rdi]
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, edi
 ins:mov ecx, edi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 ins:shl ecx, 0x4
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included cmp dil, 0x3d
 ins:cmp dil, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test dil, dil
 ins:test dil, dil
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rbp
 ins:mov rdx, rbp
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 ins:movzx eax, byte ptr [rdx+0x1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, edi
 ins:add ecx, edi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 ins:cmp al, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rip+0xc8c9]
 ins:movsx ebx, byte ptr [rip+0xc8c9]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 ins:imul rax, rdx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 ins:and ebx, 0x1
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, esi
 ins:or ebx, esi
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebx
 ins:mov r12d, ebx
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 ins:add eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 ins:imul eax, eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xa2d0]
 ins:lea rax, ptr [rip+0xa2d0]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 ins:lea rdi, ptr [rax+rcx*8]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx edi, al
 ins:movzx edi, al
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 ins:movzx eax, byte ptr [rdx+0x1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, edi
 ins:add ecx, edi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 ins:cmp al, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rip+0xc8c9]
 ins:movsx ebx, byte ptr [rip+0xc8c9]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 ins:imul rax, rdx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 ins:and ebx, 0x1
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, esi
 ins:or ebx, esi
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebx
 ins:mov r12d, ebx
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 ins:add eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 ins:imul eax, eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xa2d0]
 ins:lea rax, ptr [rip+0xa2d0]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 ins:lea rdi, ptr [rax+rcx*8]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rdi]
 ins:mov r8, qword ptr [rdi]
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdi
 ins:mov r9, rdi
 reg:r9
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 ins:test r8, r8
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx r10d, byte ptr [rsi]
 ins:movsx r10d, byte ptr [rsi]
 reg:r10d
 Exe .text
 INSTSELECTOR: instruction to be included xor r11d, r11d
 ins:xor r11d, r11d
 reg:r11d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r8+0x10]
 ins:mov rdi, qword ptr [r8+0x10]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi]
 ins:movsx eax, byte ptr [rdi]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, r10d
 ins:cmp eax, r10d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r9
 ins:mov rax, r9
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rax]
 ins:mov r13, qword ptr [rax]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [r13+0x8]
 ins:mov r12d, dword ptr [r13+0x8]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x2
 ins:test r12b, 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x80
 ins:test bl, 0x80
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x80
 ins:test bl, 0x80
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 ins:and eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 ins:cmp eax, 0x20
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 ins:mov edi, 0x20
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r14]
 ins:mov rax, qword ptr [r14]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, 0x118
 ins:test r12d, 0x118
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 ins:mov rdi, qword ptr [rbx]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x8
 ins:mov esi, 0x8
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x8f74]
 ins:lea rdi, ptr [rip+0x8f74]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [r12+0x1]
 ins:movzx ebx, byte ptr [r12+0x1]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 ins:add r12, 0x1
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 ins:test bl, bl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, r10d
 ins:mov ecx, r10d
 reg:ecx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 ins:cmp eax, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0x3d
 ins:cmp ecx, 0x3d
 reg:rflags
 NORMAL FLAG REG: inst cmp ecx, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ecx, r11d
 ins:cmovz ecx, r11d
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 ins:cmp eax, ecx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, r8
 ins:mov r9, r8
 reg:r9
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [r8]
 ins:mov r8, qword ptr [r8]
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 ins:test r8, r8
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 ins:cmp eax, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi+rdx*1]
 ins:movsx eax, byte ptr [rdi+rdx*1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included movsx ecx, byte ptr [rsi+rdx*1]
 ins:movsx ecx, byte ptr [rsi+rdx*1]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 ins:cmp eax, ecx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 ins:cmp eax, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0x3d
 ins:cmp ecx, 0x3d
 reg:rflags
 NORMAL FLAG REG: inst cmp ecx, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ecx, r11d
 ins:cmovz ecx, r11d
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 ins:cmp eax, ecx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, r8
 ins:mov r9, r8
 reg:r9
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [r8]
 ins:mov r8, qword ptr [r8]
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 ins:test r8, r8
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r9
 ins:mov rax, r9
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r8+0x10]
 ins:mov rdi, qword ptr [r8+0x10]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi]
 ins:movsx eax, byte ptr [rdi]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, r10d
 ins:cmp eax, r10d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 ins:cmp eax, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 ins:cmp eax, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi+rdx*1]
 ins:movsx eax, byte ptr [rdi+rdx*1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included movsx ecx, byte ptr [rsi+rdx*1]
 ins:movsx ecx, byte ptr [rsi+rdx*1]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 ins:cmp eax, ecx
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rip+0xc8c9]
 ins:movsx ebx, byte ptr [rip+0xc8c9]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 ins:imul rax, rdx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 ins:and ebx, 0x1
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, esi
 ins:or ebx, esi
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebx
 ins:mov r12d, ebx
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 ins:add eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 ins:imul eax, eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xa2d0]
 ins:lea rax, ptr [rip+0xa2d0]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 ins:lea rdi, ptr [rax+rcx*8]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, qword ptr [r13+0x18]
 ins:mov r15, qword ptr [r13+0x18]
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included test r15, r15
 ins:test r15, r15
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x40
 ins:test bl, 0x40
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x18
 ins:test r12b, 0x18
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3d
 ins:mov esi, 0x3d
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x1]
 ins:lea rdi, ptr [rax+0x1]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x16435]
 ins:mov rax, qword ptr [rip+0x16435]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, 0x270f
 ins:mov r14d, 0x270f
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, 0xffffffff
 ins:mov r13d, 0xffffffff
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rax+0x5]
 ins:lea rbp, ptr [rax+0x5]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbp]
 ins:movzx edx, byte ptr [rbp]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbx]
 ins:movzx eax, byte ptr [rbx]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, al
 ins:cmp dl, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 ins:test dl, dl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 ins:cmp al, 0x3a
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 ins:add rbx, 0x1
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 ins:cmp r13d, 0xffffffff
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x25
 ins:cmp al, 0x25
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 ins:cmp al, 0x3a
 reg:rflags
 NORMAL FLAG REG: inst cmp al, 0x3a
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 ins:add rbp, 0x1
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, al
 ins:movzx eax, al
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add r12d, eax
 ins:add r12d, eax
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbp]
 ins:movzx edx, byte ptr [rbp]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbx]
 ins:movzx eax, byte ptr [rbx]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, al
 ins:cmp dl, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 ins:test dl, dl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 ins:cmp al, 0x3a
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r14d, ptr [r12+0x1]
 ins:lea r14d, ptr [r12+0x1]
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rbx
 ins:mov rbp, rbx
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1624f]
 ins:mov eax, dword ptr [rip+0x1624f]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 ins:cmp r13d, 0xffffffff
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 ins:add rbx, 0x1
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 ins:cmp r13d, 0xffffffff
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x25
 ins:cmp al, 0x25
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 ins:cmp al, 0x3a
 reg:rflags
 NORMAL FLAG REG: inst cmp al, 0x3a
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 ins:add rbp, 0x1
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, al
 ins:movzx eax, al
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add r12d, eax
 ins:add r12d, eax
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbp]
 ins:movzx edx, byte ptr [rbp]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbx]
 ins:movzx eax, byte ptr [rbx]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, al
 ins:cmp dl, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1624f]
 ins:mov eax, dword ptr [rip+0x1624f]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 ins:cmp r13d, 0xffffffff
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 ins:cmp r13d, 0xffffffff
 reg:rflags
 NORMAL FLAG REG: inst cmp r13d, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmovz r14d, eax
 ins:cmovz r14d, eax
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r14d
 ins:mov edi, r14d
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r14d
 ins:mov edi, r14d
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edi
 ins:mov ebp, edi
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x17a95], 0x1
 ins:add dword ptr [rip+0x17a95], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x17a95], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x17366]
 ins:lea r12, ptr [rip+0x17366]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [r12+0xf8]
 ins:lea r13, ptr [r12+0xf8]
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r12]
 ins:mov rdi, qword ptr [r12]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, r12
 ins:mov rbx, r12
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x8
 ins:add r12, 0x8
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12, r13
 ins:cmp r12, r13
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x17a1e], 0x1
 ins:sub dword ptr [rip+0x17a1e], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x17a26]
 ins:mov eax, dword ptr [rip+0x17a26]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r12]
 ins:mov rdi, qword ptr [r12]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, r12
 ins:mov rbx, r12
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [r13+0x8]
 ins:mov r12d, dword ptr [r13+0x8]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x18
 ins:test r12b, 0x18
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r13+0x10]
 ins:mov rdi, qword ptr [r13+0x10]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r12d
 ins:mov edx, r12d
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0xfffffec7
 ins:and r12d, 0xfffffec7
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 ins:and eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and edx, 0x4
 ins:and edx, 0x4
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included or r12d, ebx
 ins:or r12d, ebx
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included or eax, edx
 ins:or eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 ins:cmp eax, 0x20
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, 0x118
 ins:test r12d, 0x118
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rbx+0x1]
 ins:lea r12, ptr [rbx+0x1]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rbx+0x1]
 ins:movzx ebx, byte ptr [rbx+0x1]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 ins:test bl, bl
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 ins:cmp bl, 0x5f
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0xa
 ins:mov esi, 0xa
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, esi
 ins:mov r12d, esi
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rsp
 ins:mov rsi, rsp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r12d
 ins:mov edx, r12d
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rbx], 0x22
 ins:cmp dword ptr [rbx], 0x22
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rsp]
 ins:mov rbx, qword ptr [rsp]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, r12d
 ins:test r12d, r12d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 ins:cmp rbx, rbp
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rax]
 ins:mov rsi, qword ptr [rax]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rax]
 ins:movzx ecx, byte ptr [rax]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rsi+rcx*2+0x1], 0x20
 ins:test byte ptr [rsi+rcx*2+0x1], 0x20
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test cl, cl
 ins:test cl, cl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 ins:mov rax, qword ptr [rsp+0x8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, 0x7fffffff
 ins:cmp rax, 0x7fffffff
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmovz eax, edx
 ins:cmovz eax, edx
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x13a8]
 ins:lea rdx, ptr [rip+0x13a8]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1b
 ins:mov esi, 0x1b
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x9084]
 ins:lea rdi, ptr [rip+0x9084]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rcx, eax
 ins:movsxd rcx, eax
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xd8
 ins:sub rsp, 0xd8
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 ins:lea rax, ptr [rsp+0xe0]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, rsp
 ins:mov rcx, rsp
 reg:rcx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 ins:lea rax, ptr [rsp+0x20]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 ins:lea rax, ptr [rsp+0xe0]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, rsp
 ins:mov rcx, rsp
 reg:rcx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 ins:lea rax, ptr [rsp+0x20]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rdx
 ins:mov r8, rdx
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rcx
 ins:mov r9, rcx
 reg:r9
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xc607], 0x1
 ins:add dword ptr [rip+0xc607], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0xc607], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, 0xffffffffffffffff
 ins:mov rcx, 0xffffffffffffffff
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0xc5ef], 0x1
 ins:sub dword ptr [rip+0xc5ef], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0xc5f7]
 ins:mov edx, dword ptr [rip+0xc5f7]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x18]
 ins:mov rcx, qword ptr [rsp+0x18]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included xor rcx, qword ptr fs:[0x28]
 ins:xor rcx, qword ptr fs:[0x28]
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xd8
 ins:add rsp, 0xd8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x8
 ins:mov esi, 0x8
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x9069]
 ins:lea rdi, ptr [rip+0x9069]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x11ac]
 ins:lea rdi, ptr [rip+0x11ac]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included movzx r8d, byte ptr [rdi]
 ins:movzx r8d, byte ptr [rdi]
 reg:r8d
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, r8d
 ins:mov ecx, r8d
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 ins:shl ecx, 0x4
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r8b, 0x3d
 ins:cmp r8b, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r8b, r8b
 ins:test r8b, r8b
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rdi
 ins:mov rdx, rdi
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 ins:movzx eax, byte ptr [rdx+0x1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, r8d
 ins:add ecx, r8d
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 ins:cmp al, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 ins:imul rax, rdx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 ins:add eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 ins:imul eax, eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x9ee8]
 ins:lea rax, ptr [rip+0x9ee8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 ins:lea rdi, ptr [rax+rcx*8]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx r8d, al
 ins:movzx r8d, al
 reg:r8d
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 ins:movzx eax, byte ptr [rdx+0x1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, r8d
 ins:add ecx, r8d
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 ins:cmp al, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 ins:imul rax, rdx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 ins:add eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 ins:imul eax, eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x9ee8]
 ins:lea rax, ptr [rip+0x9ee8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 ins:lea rdi, ptr [rax+rcx*8]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 ins:imul rax, rdx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 ins:add eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 ins:imul eax, eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x9ee8]
 ins:lea rax, ptr [rip+0x9ee8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 ins:lea rdi, ptr [rax+rcx*8]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0x3d
 ins:cmp ecx, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 ins:cmp eax, ecx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, r8
 ins:mov r9, r8
 reg:r9
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [r8]
 ins:mov r8, qword ptr [r8]
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 ins:test r8, r8
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r9
 ins:mov rax, r9
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+0x8], 0x20
 ins:test byte ptr [rax+0x8], 0x20
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rax+0x10]
 ins:mov rdi, qword ptr [rax+0x10]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3d
 ins:mov esi, 0x3d
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rax
 ins:mov rbp, rax
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x2f
 ins:cmp byte ptr [rax], 0x2f
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rsp
 ins:mov rdx, rsp
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x90]
 ins:lea rdx, ptr [rsp+0x90]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x14eb]
 ins:lea rsi, ptr [rip+0x14eb]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x90]
 ins:mov rax, qword ptr [rsp+0x90]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp], rax
 ins:cmp qword ptr [rsp], rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x98]
 ins:mov rax, qword ptr [rsp+0x98]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp+0x8], rax
 ins:cmp qword ptr [rsp+0x8], rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rdi
 ins:mov r12, rdi
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rip+0x19410]
 ins:mov r13, qword ptr [rip+0x19410]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x19d91], 0x1
 ins:add dword ptr [rip+0x19d91], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x19d91], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x193f2]
 ins:mov rdi, qword ptr [rip+0x193f2]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x1c09b]
 ins:lea rbx, ptr [rip+0x1c09b]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rbx
 ins:cmp rdi, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r13
 ins:cmp rdi, r13
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, r12
 ins:cmp r13, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rax
 ins:mov rbp, rax
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r13
 ins:cmp rbp, r13
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, rbx
 ins:cmp r13, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x19d38], 0x1
 ins:sub dword ptr [rip+0x19d38], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x19d40]
 ins:mov eax, dword ptr [rip+0x19d40]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x116df]
 ins:lea rdi, ptr [rip+0x116df]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 ins:mov r12, rsi
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 ins:mov ebx, edx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3d
 ins:mov esi, 0x3d
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rax
 ins:mov r15, rax
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included sub r15, rbp
 ins:sub r15, rbp
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, rax
 ins:cmp r13, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xa37d], 0x1
 ins:add dword ptr [rip+0xa37d], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0xa37d], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [r14+r15*1+0x2]
 ins:lea rdi, ptr [r14+r15*1+0x2]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r15
 ins:mov rdx, r15
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x1]
 ins:lea rdi, ptr [rax+0x1]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 ins:mov rdx, r14
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 ins:mov rsi, r12
 reg:rsi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or bh, 0x1
 ins:or bh, 0x1
 reg:bh
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, ebx
 ins:mov esi, ebx
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x18
 ins:test r12b, 0x18
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r12d
 ins:mov edx, r12d
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0xfffffec7
 ins:and r12d, 0xfffffec7
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 ins:and eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and edx, 0x4
 ins:and edx, 0x4
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included or r12d, ebx
 ins:or r12d, ebx
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included or eax, edx
 ins:or eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 ins:cmp eax, 0x20
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, 0x118
 ins:test r12d, 0x118
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0xa334], 0x1
 ins:sub dword ptr [rip+0xa334], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0xa33c]
 ins:mov edx, dword ptr [rip+0xa33c]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x128]
 ins:mov rax, qword ptr [rsp+0x128]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x138
 ins:add rsp, 0x138
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 ins:lea rdi, ptr [rsp+0x20]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x11145]
 ins:mov rax, qword ptr [rip+0x11145]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x11126]
 ins:mov rcx, qword ptr [rip+0x11126]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x1112f]
 ins:mov rdx, qword ptr [rip+0x1112f]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x8]
 ins:lea rcx, ptr [rax+0x8]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdx, rcx
 ins:cmp rdx, rcx
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, rcx
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x13b95]
 ins:lea rcx, ptr [rip+0x13b95]
 reg:rcx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rcx
 ins:cmp rax, rcx
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, rcx
 Exe .text
 INSTSELECTOR: instruction to be included setnz dil
 ins:setnz dil
 reg:dil
 Exe .text
 INSTSELECTOR: instruction to be included and rdi, rdx
 ins:and rdi, rdx
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rdi+0x7]
 ins:lea rbx, ptr [rdi+0x7]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included and rbx, 0xfffffffffffffff8
 ins:and rbx, 0xfffffffffffffff8
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1124f]
 ins:mov rax, qword ptr [rip+0x1124f]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbx
 ins:cmp rax, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, 0x1f8
 ins:cmp rbx, 0x1f8
 reg:rflags
 NORMAL FLAG REG: inst cmp rbx, 0x1f8
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, 0x1f8
 ins:mov ebp, 0x1f8
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included cmovnb rbp, rbx
 ins:cmovnb rbp, rbx
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x11b96], 0x1
 ins:add dword ptr [rip+0x11b96], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x11b96], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rip+0x111de]
 ins:mov r8, qword ptr [rip+0x111de]
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rbx
 ins:sub rax, rbx
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [r8+rbx*1]
 ins:lea rdx, ptr [r8+rbx*1]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r8
 ins:mov rax, r8
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp+0x8]
 ins:mov rsi, qword ptr [rsp+0x8]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rsp+0x4]
 ins:mov edi, dword ptr [rsp+0x4]
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 ins:xor r13d, r13d
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsi]
 ins:mov rax, qword ptr [rsi]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 ins:xor r13d, r13d
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x2d
 ins:cmp byte ptr [rax], 0x2d
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rax], 0x2d
 Exe .text
 INSTSELECTOR: instruction to be included setz r13b
 ins:setz r13b
 reg:r13b
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x127f8]
 ins:lea rbx, ptr [rip+0x127f8]
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 NORMAL FLAG REG: inst test edi, edi
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsi+0x8]
 ins:lea rax, ptr [rsi+0x8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmovnle rsi, rax
 ins:cmovnle rsi, rax
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+0x12]
 ins:lea rbp, ptr [rbx+0x12]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbp
 ins:cmp rax, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbp
 ins:cmp rax, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x28
 ins:sub rsp, 0x28
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x12b90]
 ins:mov rax, qword ptr [rip+0x12b90]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rip+0x8c29]
 ins:lea r15, ptr [rip+0x8c29]
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax]
 ins:mov rcx, qword ptr [rax]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included test rcx, rcx
 ins:test rcx, rcx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x8]
 ins:lea rdi, ptr [rax+0x8]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx esi, byte ptr [rcx]
 ins:movsx esi, byte ptr [rcx]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x2d
 ins:cmp esi, 0x2d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x2b
 ins:cmp esi, 0x2b
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rcx+0x1]
 ins:movzx edx, byte ptr [rcx+0x1]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsx esi, dl
 ins:movsx esi, dl
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rsp+0x10]
 ins:movzx ebx, byte ptr [rsp+0x10]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rcx+0x2]
 ins:lea rbp, ptr [rcx+0x2]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 ins:and ebx, 0x1
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x63
 ins:cmp esi, 0x63
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0xc]
 ins:mov eax, dword ptr [rsp+0xc]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x28
 ins:add rsp, 0x28
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rip+0x127d4]
 ins:mov r12, qword ptr [rip+0x127d4]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0x127fd]
 ins:mov r14, qword ptr [rip+0x127fd]
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included or r13d, eax
 ins:or r13d, eax
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [r12], 0x0
 ins:cmp qword ptr [r12], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x127a3], 0x2
 ins:cmp byte ptr [rip+0x127a3], 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x12797], 0x2
 ins:cmp byte ptr [rip+0x12797], 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x126df], 0x1
 ins:cmp byte ptr [rip+0x126df], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x12797], 0x2
 ins:cmp byte ptr [rip+0x12797], 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rip+0x1278d]
 ins:movzx eax, byte ptr [rip+0x1278d]
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbx], 0x2
 ins:cmp byte ptr [rbx], 0x2
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 ins:add rbx, 0x1
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 ins:cmp rbx, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbx], 0x2
 ins:cmp byte ptr [rbx], 0x2
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 ins:add rbx, 0x1
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 ins:cmp rbx, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r12]
 ins:mov rdi, qword ptr [r12]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included test r14, r14
 ins:test r14, r14
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1269f], 0x0
 ins:cmp byte ptr [rip+0x1269f], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdi
 ins:mov r13, rdi
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x14306], 0x1
 ins:add dword ptr [rip+0x14306], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x14306], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 ins:mov ebx, esi
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 ins:mov r12d, eax
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x9
 ins:cmp eax, 0x9
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 ins:and ebx, 0x1
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, eax
 ins:mov esi, eax
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 ins:mov edi, eax
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa
 ins:mov edx, 0xa
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, esi
 ins:mov r13d, esi
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edi
 ins:mov ebp, edi
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 ins:mov r12d, eax
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xf5b0]
 ins:mov rax, qword ptr [rip+0xf5b0]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rax]
 ins:mov r14d, dword ptr [rax]
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14d, 0x9
 ins:cmp r14d, 0x9
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r13d
 ins:mov edi, r13d
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r13d
 ins:mov edi, r13d
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x2
 ins:mov esi, 0x2
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r12d
 ins:mov edi, r12d
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 ins:and ebx, 0x1
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 ins:mov r12d, eax
 reg:r12d
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x1395e]
 ins:mov rbx, qword ptr [rip+0x1395e]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbx+0x20], 0x0
 ins:cmp qword ptr [rbx+0x20], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rbx+0x20], 0x0
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x142bd], 0x1
 ins:sub dword ptr [rip+0x142bd], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x142c5]
 ins:mov eax, dword ptr [rip+0x142c5]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r12]
 ins:mov rax, qword ptr [r12]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdx+0x8]
 ins:mov rdi, qword ptr [rdx+0x8]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rdx+0x8]
 ins:lea r12, ptr [rdx+0x8]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, 0xffffffff00000001
 ins:mov rax, 0xffffffff00000001
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x12746]
 ins:mov eax, dword ptr [rip+0x12746]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x8
 ins:add r12, 0x8
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [r12], 0x0
 ins:cmp qword ptr [r12], 0x0
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x8
 ins:add r12, 0x8
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [r12], 0x0
 ins:cmp qword ptr [r12], 0x0
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included movsx edi, byte ptr [rip+0x12ca0]
 ins:movsx edi, byte ptr [rip+0x12ca0]
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0xcc9e], edi
 ins:cmp dword ptr [rip+0xcc9e], edi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0xf99d]
 ins:mov edi, dword ptr [rip+0xf99d]
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, edi
 ins:cmp eax, edi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, dword ptr [rip+0xf96d]
 ins:cmp eax, dword ptr [rip+0xf96d]
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0xf969]
 ins:mov edi, dword ptr [rip+0xf969]
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx edi, byte ptr [rip+0x12c88]
 ins:movsx edi, byte ptr [rip+0x12c88]
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add edi, 0x1
 ins:add edi, 0x1
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0xc423], edi
 ins:cmp dword ptr [rip+0xc423], edi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x2
 ins:mov edi, 0x2
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0xee98], 0x0
 ins:cmp byte ptr [rip+0xee98], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rip+0xee98], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, ebp
 ins:mov ebx, ebp
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0xeecd], 0x0
 ins:cmp qword ptr [rip+0xeecd], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0xee7e], 0x0
 ins:cmp byte ptr [rip+0xee7e], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rip+0xee7e], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 ins:mov ebx, 0x1
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, ebp
 ins:cmovz ebx, ebp
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 ins:lea r12d, ptr [rbp-0x1]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0xf08f]
 ins:lea r13, ptr [rip+0xf08f]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 ins:movsxd r12, r12d
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 ins:movsx eax, byte ptr [r13+r12*1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 ins:cmp al, 0x4
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsp
 ins:mov r14, rsp
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, eax
 ins:cmp ebx, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsp
 ins:mov r14, rsp
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebp
 ins:mov edi, ebp
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 ins:mov rdx, r14
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffffff
 ins:cmp eax, 0xffffffff
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp], 0x1
 ins:cmp qword ptr [rsp], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0xef0e], 0x0
 ins:cmp byte ptr [rip+0xef0e], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x3
 ins:mov edi, 0x3
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0xee67], 0x1
 ins:cmp byte ptr [rip+0xee67], 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rip+0xee67], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included sbb ebx, ebx
 ins:sbb ebx, ebx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0xfffffffe
 ins:and ebx, 0xfffffffe
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included add ebx, 0x3
 ins:add ebx, 0x3
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0xf
 ins:mov edi, 0xf
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx edi, byte ptr [rip+0x12c7d]
 ins:movsx edi, byte ptr [rip+0x12c7d]
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x1517e], edi
 ins:cmp dword ptr [rip+0x1517e], edi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rip+0x1517d]
 ins:mov r13d, dword ptr [rip+0x1517d]
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 ins:test r13d, r13d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, edi
 ins:mov r12d, edi
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r13d
 ins:mov eax, r13d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1d148], 0x0
 ins:cmp byte ptr [rip+0x1d148], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rip+0x1d148], 0x0
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x12e5b]
 ins:lea rdi, ptr [rip+0x12e5b]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 ins:lea rdi, ptr [rsp+0x20]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x11a49], 0x1
 ins:add dword ptr [rip+0x11a49], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x11a49], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x110ea]
 ins:mov rdi, qword ptr [rip+0x110ea]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rbx]
 ins:cmp rdi, qword ptr [rbx]
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi]
 ins:mov rax, qword ptr [rdi]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x8]
 ins:mov rax, qword ptr [rbx+0x8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x10]
 ins:mov rdx, qword ptr [rbx+0x10]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x119f6], 0x1
 ins:sub dword ptr [rip+0x119f6], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x119fe]
 ins:mov eax, dword ptr [rip+0x119fe]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x1d158]
 ins:mov rdi, qword ptr [rip+0x1d158]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 ins:xor r15d, r15d
 reg:r15d
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, edi
 ins:mov r14d, edi
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 ins:mov r13d, edi
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included and r14d, 0x1
 ins:and r14d, 0x1
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, 0x1
 ins:xor r13d, 0x1
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x14360]
 ins:lea r12, ptr [rip+0x14360]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x38
 ins:sub rsp, 0x38
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r13d
 ins:mov eax, r13d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rsp+0x10]
 ins:lea rbx, ptr [rsp+0x10]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x1
 ins:and eax, 0x1
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1409a]
 ins:mov eax, dword ptr [rip+0x1409a]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x142c6], 0x0
 ins:cmp byte ptr [rip+0x142c6], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r14b, r14b
 ins:test r14b, r14b
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x7c63]
 ins:lea r13, ptr [rip+0x7c63]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edi
 ins:mov ebp, edi
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, dword ptr [rip+0x11b4a]
 ins:mov ebx, dword ptr [rip+0x11b4a]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, ebx
 ins:mov ebp, ebx
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x2
 ins:and ebx, 0x2
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included and ebp, 0x4
 ins:and ebp, 0x4
 reg:ebp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x11b32]
 ins:mov ecx, dword ptr [rip+0x11b32]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11d1a]
 ins:mov eax, dword ptr [rip+0x11d1a]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x7f0a]
 ins:lea rbx, ptr [rip+0x7f0a]
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13c6d]
 ins:mov rdx, qword ptr [rip+0x13c6d]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdx+0x70]
 ins:mov eax, dword ptr [rdx+0x70]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdx+0x10]
 ins:mov eax, dword ptr [rdx+0x10]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x1
 ins:sub eax, 0x1
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x18]
 ins:mov rax, qword ptr [rdx+0x18]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x1]
 ins:lea rcx, ptr [rax+0x1]
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rdx+0x68]
 ins:mov ecx, dword ptr [rdx+0x68]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rax]
 ins:movsx eax, byte ptr [rax]
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rdx+0x28]
 ins:mov rcx, qword ptr [rdx+0x28]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included test rcx, rcx
 ins:test rcx, rcx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff9d
 ins:cmp eax, 0xffffff9d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rdx+0x20], 0x0
 ins:cmp qword ptr [rdx+0x20], 0x0
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0xb9a5]
 ins:lea rdi, ptr [rip+0xb9a5]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rdi+0x10]
 ins:mov rsi, qword ptr [rdi+0x10]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi]
 ins:mov rdx, qword ptr [rdi]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included sub rdx, rsi
 ins:sub rdx, rsi
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rdi+0x20]
 ins:mov edi, dword ptr [rdi+0x20]
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13bf7]
 ins:mov rdx, qword ptr [rip+0x13bf7]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, dword ptr [rdx+0x14]
 ins:mov ebp, dword ptr [rdx+0x14]
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 ins:test ebp, ebp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, ebp
 ins:movsxd r12, ebp
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rdx+0x18]
 ins:mov rbx, qword ptr [rdx+0x18]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub r12, 0x1
 ins:sub r12, 0x1
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rdx+0x20]
 ins:mov rbx, qword ptr [rdx+0x20]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xc126]
 ins:lea r12, ptr [rip+0xc126]
 reg:r12
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rdx+0xc]
 ins:mov edi, dword ptr [rdx+0xc]
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbx
 ins:mov rsi, rbx
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x2000
 ins:mov edx, 0x2000
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, eax
 ins:mov ebp, eax
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1657f]
 ins:mov rax, qword ptr [rip+0x1657f]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13af0]
 ins:mov rdx, qword ptr [rip+0x13af0]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rax]
 ins:mov eax, dword ptr [rax]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x4
 ins:cmp eax, 0x4
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rdx+0xc]
 ins:mov ecx, dword ptr [rdx+0xc]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13a55]
 ins:mov rdx, qword ptr [rip+0x13a55]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, 0xffffff9dffffff9d
 ins:mov rax, 0xffffff9dffffff9d
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0xffffff7e
 ins:mov eax, 0xffffff7e
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, ebp
 ins:movsxd r12, ebp
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rdx+0x18]
 ins:mov rbx, qword ptr [rdx+0x18]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub r12, 0x1
 ins:sub r12, 0x1
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbx]
 ins:movsx eax, byte ptr [rbx]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ebp, 0x1
 ins:sub ebp, 0x1
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rbx+0x1]
 ins:lea rsi, ptr [rbx+0x1]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xa
 ins:cmp eax, 0xa
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rsi
 ins:mov rbx, rsi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub r12, 0x1
 ins:sub r12, 0x1
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 ins:test ebp, ebp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbx]
 ins:movsx eax, byte ptr [rbx]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ebp, 0x1
 ins:sub ebp, 0x1
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rbx+0x1]
 ins:lea rsi, ptr [rbx+0x1]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13b49]
 ins:mov rdx, qword ptr [rip+0x13b49]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rsi
 ins:mov rax, rsi
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rsi
 ins:mov rbx, rsi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, qword ptr [rdx+0x18]
 ins:sub rax, qword ptr [rdx+0x18]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x1
 ins:sub eax, 0x1
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebp, byte ptr [rbx]
 ins:movzx ebp, byte ptr [rbx]
 reg:ebp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x16842], 0x0
 ins:cmp byte ptr [rip+0x16842], 0x0
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13b72]
 ins:mov rdx, qword ptr [rip+0x13b72]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x18]
 ins:mov rax, qword ptr [rdx+0x18]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x1]
 ins:lea rcx, ptr [rax+0x1]
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rax]
 ins:movsx eax, byte ptr [rax]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rdx+0x68]
 ins:mov ecx, dword ptr [rdx+0x68]
 reg:ecx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 ins:mov r12d, eax
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x5c
 ins:cmp eax, 0x5c
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 ins:mov edi, eax
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3b
 ins:cmp eax, 0x3b
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x8
 ins:cmp eax, 0x8
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rax-0x9]
 ins:lea eax, ptr [rax-0x9]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x32
 ins:cmp eax, 0x32
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rbx+rax*4]
 ins:movsxd rax, dword ptr [rbx+rax*4]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbx
 ins:add rax, rbx
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff7e
 ins:cmp eax, 0xffffff7e
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xa
 ins:cmp eax, 0xa
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x13e2d]
 ins:mov rax, qword ptr [rip+0x13e2d]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rax+0x70], 0x1
 ins:add dword ptr [rax+0x70], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rax+0x70], 0x1
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x1
 ins:sub eax, 0x1
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdx+rax*4+0x68]
 ins:mov eax, dword ptr [rdx+rax*4+0x68]
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 ins:mov edi, eax
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3b
 ins:cmp eax, 0x3b
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x7c
 ins:cmp eax, 0x7c
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x8
 ins:cmp eax, 0x8
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rax-0x9]
 ins:lea eax, ptr [rax-0x9]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x32
 ins:cmp eax, 0x32
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rbx+rax*4]
 ins:movsxd rax, dword ptr [rbx+rax*4]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbx
 ins:add rax, rbx
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xeefe]
 ins:mov rax, qword ptr [rip+0xeefe]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rax+0x8], 0x1
 ins:add dword ptr [rax+0x8], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rax+0x8], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11c06]
 ins:mov eax, dword ptr [rip+0x11c06]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 ins:mov r12d, eax
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 ins:test ebp, ebp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12d, 0xc
 ins:cmp r12d, 0xc
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11b26]
 ins:mov eax, dword ptr [rip+0x11b26]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x118ca], 0x1
 ins:add dword ptr [rip+0x118ca], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x118ca], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 ins:cmp eax, 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test bpl, 0x1
 ins:test bpl, 0x1
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x10367]
 ins:mov rbx, qword ptr [rip+0x10367]
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0x7396]
 ins:lea rbp, ptr [rip+0x7396]
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, r12
 ins:cmp rax, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x142ab], 0x0
 ins:cmp byte ptr [rip+0x142ab], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x13f9b], 0x2
 ins:cmp dword ptr [rip+0x13f9b], 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rip+0x13f9b], 0x2
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 ins:mov ebx, esi
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xee16]
 ins:mov eax, dword ptr [rip+0xee16]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rip+0xc085]
 ins:mov r14d, dword ptr [rip+0xc085]
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included test r14d, r14d
 ins:test r14d, r14d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rip+0xca1f]
 ins:mov r13d, dword ptr [rip+0xca1f]
 reg:r13d
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 ins:mov ebx, 0x1
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0xc4d1]
 ins:lea rbp, ptr [rip+0xc4d1]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xc50b]
 ins:lea r12, ptr [rip+0xc50b]
 reg:r12
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 ins:and ebx, 0x1
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x19307]
 ins:mov eax, dword ptr [rip+0x19307]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 NORMAL FLAG REG: inst test r13, r13
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz r15d, eax
 ins:cmovnz r15d, eax
 reg:r15d
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11f86]
 ins:mov eax, dword ptr [rip+0x11f86]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0xfffffff3
 ins:and eax, 0xfffffff3
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x28]
 ins:mov rax, qword ptr [rsp+0x28]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x38
 ins:add rsp, 0x38
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r15d
 ins:mov eax, r15d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xeefe]
 ins:mov rax, qword ptr [rip+0xeefe]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rax+0x8], 0x1
 ins:add dword ptr [rax+0x8], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rax+0x8], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11c06]
 ins:mov eax, dword ptr [rip+0x11c06]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x8ddc]
 ins:lea rsi, ptr [rip+0x8ddc]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 ins:pxor xmm0, xmm0
 reg:xmm0
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 ins:mov r13d, edi
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x98
 ins:sub rsp, 0x98
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x8724]
 ins:lea rax, ptr [rip+0x8724]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rsi, rax
 ins:cmp rsi, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0xe9a6]
 ins:mov r14, qword ptr [rip+0xe9a6]
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rbp-0x70]
 ins:lea rbx, ptr [rbp-0x70]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x88], 0x1
 ins:cmp qword ptr [rbp-0x88], 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rbp-0x88], 0x1
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x7945]
 ins:lea r12, ptr [rip+0x7945]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, r14
 ins:mov r15, r14
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xe969]
 ins:mov rax, qword ptr [rip+0xe969]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, r15
 ins:sub rax, r15
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, 0x3
 ins:cmp rax, 0x3
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 ins:mov rax, qword ptr [rbx]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, r13d
 ins:movsxd rdx, r13d
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax+rdx*1], 0xe
 ins:cmp byte ptr [rax+rdx*1], 0xe
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rax+rdx*1]
 ins:movzx edx, byte ptr [rax+rdx*1]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, dword ptr [r12+rdx*4]
 ins:movsxd rdx, dword ptr [r12+rdx*4]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, r12
 ins:add rdx, r12
 reg:rdx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 ins:mov rax, qword ptr [rbx]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x8413]
 ins:lea rdx, ptr [rip+0x8413]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x1
 ins:add r15, 0x1
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 ins:mov r12d, eax
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x5c
 ins:cmp eax, 0x5c
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, eax
 ins:mov r13d, eax
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xe825]
 ins:mov rax, qword ptr [rip+0xe825]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, r15
 ins:sub rax, r15
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, 0x3
 ins:cmp rax, 0x3
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 ins:mov rsi, r15
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x4
 ins:mov edi, 0x4
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rbx+0x24]
 ins:mov r14d, dword ptr [rbx+0x24]
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included test r14d, r14d
 ins:test r14d, r14d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffff7f
 ins:cmp r13d, 0xffffff7f
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 ins:mov rax, qword ptr [rbx]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x8413]
 ins:lea rdx, ptr [rip+0x8413]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x1
 ins:add r15, 0x1
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x82d3]
 ins:lea rdx, ptr [rip+0x82d3]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, r15
 ins:mov r14, r15
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x8620]
 ins:lea rdx, ptr [rip+0x8620]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x88], 0x0
 ins:cmp qword ptr [rbp-0x88], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r11d, dword ptr [rbx+0x24]
 ins:mov r11d, dword ptr [rbx+0x24]
 reg:r11d
 Exe .text
 INSTSELECTOR: instruction to be included test r11d, r11d
 ins:test r11d, r11d
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0xe018]
 ins:mov rbx, qword ptr [rip+0xe018]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included add r14, 0x1
 ins:add r14, 0x1
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included sub r14, rbx
 ins:sub r14, rbx
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x88], 0x0
 ins:cmp qword ptr [rbp-0x88], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r13d
 ins:mov eax, r13d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0xfffffffd
 ins:and eax, 0xfffffffd
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3c
 ins:cmp eax, 0x3c
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x8c]
 ins:mov eax, dword ptr [rbp-0x8c]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x78]
 ins:mov rax, qword ptr [rbp-0x78]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0xc
 ins:mov eax, 0xc
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x38]
 ins:mov rdi, qword ptr [rbp-0x38]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included xor rdi, qword ptr fs:[0x28]
 ins:xor rdi, qword ptr fs:[0x28]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rsp, ptr [rbp-0x28]
 ins:lea rsp, ptr [rbp-0x28]
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 ins:test ebx, ebx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x11afb], 0x1
 ins:test byte ptr [rip+0x11afb], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x11b1a]
 ins:mov rdi, qword ptr [rip+0x11b1a]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x2
 ins:cmp ebp, 0x2
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [rip+0x11adf]
 ins:mov r12d, dword ptr [rip+0x11adf]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 ins:test ebp, ebp
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12d, 0x1
 ins:cmp r12d, 0x1
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12d, 0xc
 ins:cmp r12d, 0xc
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11b26]
 ins:mov eax, dword ptr [rip+0x11b26]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 ins:test ebx, ebx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x11a79]
 ins:mov rdi, qword ptr [rip+0x11a79]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x10
 ins:mov edx, 0x10
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0xde2d]
 ins:lea rsi, ptr [rip+0xde2d]
 reg:rsi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor r14d, r14d
 ins:xor r14d, r14d
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdi
 ins:mov r13, rdi
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 ins:mov r12, rsi
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdx
 ins:mov rbp, rdx
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r14
 ins:cmp rbp, r14
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rbp+r14*1]
 ins:lea rbx, ptr [rbp+r14*1]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included shr rbx, 0x1
 ins:shr rbx, 0x1
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [r12+rbx*8]
 ins:lea r15, ptr [r12+rbx*8]
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [r15]
 ins:mov rsi, qword ptr [r15]
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rbx+0x1]
 ins:lea r14, ptr [rbx+0x1]
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r14
 ins:cmp rbp, r14
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rbx
 ins:mov rbp, rbx
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r14
 ins:cmp rbp, r14
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rbp+r14*1]
 ins:lea rbx, ptr [rbp+r14*1]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included shr rbx, 0x1
 ins:shr rbx, 0x1
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [r12+rbx*8]
 ins:lea r15, ptr [r12+rbx*8]
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [r15]
 ins:mov rsi, qword ptr [r15]
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 ins:xor r15d, r15d
 reg:r15d
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r15
 ins:mov rax, r15
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0xde18]
 ins:lea rdx, ptr [rip+0xde18]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rdx
 ins:sub rax, rdx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included sar r12, 0x3
 ins:sar r12, 0x3
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included add r12d, 0xd
 ins:add r12d, 0xd
 reg:r12d
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x11afb], 0x1
 ins:test byte ptr [rip+0x11afb], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x11b1a]
 ins:mov rdi, qword ptr [rip+0x11b1a]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 ins:mov ebx, esi
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdi]
 ins:movzx esi, byte ptr [rdi]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 ins:mov ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 ins:shl ecx, 0x4
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 ins:add ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rax]
 ins:movzx esi, byte ptr [rax]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 ins:imul rax, rdx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 ins:add eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 ins:imul eax, eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x1aa49]
 ins:lea rax, ptr [rip+0x1aa49]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rax+rcx*8]
 ins:mov rbx, qword ptr [rax+rcx*8]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+rcx*8]
 ins:lea r12, ptr [rax+rcx*8]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 ins:add ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rax]
 ins:movzx esi, byte ptr [rax]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 ins:imul rax, rdx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 ins:shr rax, 0x20
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 ins:add eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 ins:shr eax, 0x5
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 ins:imul eax, eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 ins:sub ecx, eax
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x1aa49]
 ins:lea rax, ptr [rip+0x1aa49]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rax+rcx*8]
 ins:mov rbx, qword ptr [rax+rcx*8]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+rcx*8]
 ins:lea r12, ptr [rax+rcx*8]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 ins:test ebx, ebx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+0x18], 0x1
 ins:test byte ptr [rax+0x18], 0x1
 reg:rflags
 NORMAL FLAG REG: inst test byte ptr [rax+0x18], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x0
 ins:mov edx, 0x0
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz rax, rdx
 ins:cmovnz rax, rdx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rax+0x10]
 ins:mov rdi, qword ptr [rax+0x10]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x0
 ins:cmp byte ptr [rdi], 0x0
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xd
 ins:cmp eax, 0xd
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xfb05], 0x1
 ins:add dword ptr [rip+0xfb05], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0xfb05], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x48
 ins:sub rsp, 0x48
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xd543]
 ins:mov rax, qword ptr [rip+0xd543]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rax+0x8]
 ins:mov r14d, dword ptr [rax+0x8]
 reg:r14d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x7
 ins:sub eax, 0x7
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x14
 ins:cmp eax, 0x14
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x653e]
 ins:lea rdx, ptr [rip+0x653e]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rdx+rax*4]
 ins:movsxd rax, dword ptr [rdx+rax*4]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xd50d]
 ins:mov rax, qword ptr [rip+0xd50d]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x1020e], 0x1
 ins:add dword ptr [rip+0x1020e], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x1020e], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 ins:mov ebx, 0x1
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x30]
 ins:lea rbp, ptr [rsp+0x30]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rsp+0x28]
 ins:lea r14, ptr [rsp+0x28]
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 ins:xor r13d, r13d
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rsp+0x20]
 ins:lea r12, ptr [rsp+0x20]
 reg:r12
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, dword ptr [rax+0x8]
 ins:mov r15d, dword ptr [rax+0x8]
 reg:r15d
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xb
 ins:cmp eax, 0xb
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xc
 ins:cmp eax, 0xc
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x7
 ins:cmp eax, 0x7
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 ins:mov edi, 0x20
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0xfc47]
 ins:mov rdx, qword ptr [rip+0xfc47]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xfc23]
 ins:mov rax, qword ptr [rip+0xfc23]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [r13+0x8]
 ins:lea rcx, ptr [r13+0x8]
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 ins:test ebx, ebx
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 ins:xor ebx, ebx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rcx
 ins:mov r12, rcx
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rdx
 ins:mov rdi, rdx
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp]
 ins:mov rdx, qword ptr [rsp]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x8]
 ins:mov rcx, qword ptr [rsp+0x8]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x3d
 ins:cmp byte ptr [rax], 0x3d
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rcx
 ins:mov r14, rcx
 reg:r14
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 ins:xor ebx, ebx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rcx
 ins:mov r12, rcx
 reg:r12
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 ins:mov edi, eax
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3b
 ins:cmp eax, 0x3b
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x8
 ins:cmp eax, 0x8
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rax-0x9]
 ins:lea eax, ptr [rax-0x9]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x32
 ins:cmp eax, 0x32
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x7c
 ins:cmp eax, 0x7c
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x8ddc]
 ins:lea rsi, ptr [rip+0x8ddc]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x831b]
 ins:lea rdx, ptr [rip+0x831b]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r9d, dword ptr [rbx+0x24]
 ins:mov r9d, dword ptr [rbx+0x24]
 reg:r9d
 Exe .text
 INSTSELECTOR: instruction to be included test r9d, r9d
 ins:test r9d, r9d
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [r15+0x1]
 ins:lea r14, ptr [r15+0x1]
 reg:r14
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x73d0]
 ins:lea rdx, ptr [rip+0x73d0]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, r15
 ins:mov r14, r15
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x6657]
 ins:lea rdi, ptr [rip+0x6657]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0xe018]
 ins:mov rbx, qword ptr [rip+0xe018]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included add r14, 0x1
 ins:add r14, 0x1
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included sub r14, rbx
 ins:sub r14, rbx
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x88], 0x0
 ins:cmp qword ptr [rbp-0x88], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r13d
 ins:mov eax, r13d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0xfffffffd
 ins:and eax, 0xfffffffd
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3c
 ins:cmp eax, 0x3c
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r10d, dword ptr [rbp-0x8c]
 ins:mov r10d, dword ptr [rbp-0x8c]
 reg:r10d
 Exe .text
 INSTSELECTOR: instruction to be included test r10d, r10d
 ins:test r10d, r10d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x101ab], 0x1
 ins:add dword ptr [rip+0x101ab], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x101ab], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 ins:mov edi, 0x20
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x20]
 ins:mov rax, qword ptr [rsp+0x20]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x28]
 ins:mov rax, qword ptr [rsp+0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x30]
 ins:mov rax, qword ptr [rsp+0x30]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x38]
 ins:mov rax, qword ptr [rsp+0x38]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, r12
 ins:mov r13, r12
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x6
 ins:cmp eax, 0x6
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xfae7], 0x1
 ins:add dword ptr [rip+0xfae7], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0xfae7], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x4
 ins:cmp eax, 0x4
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, 0x5
 ins:mov r15d, 0x5
 reg:r15d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x5
 ins:cmp eax, 0x5
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, 0x6
 ins:mov r15d, 0x6
 reg:r15d
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x11839], 0x1
 ins:add dword ptr [rip+0x11839], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x11839], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, eax
 ins:mov r14d, eax
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3
 ins:cmp eax, 0x3
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x18
 ins:mov edi, 0x18
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rbx
 ins:mov r12, rbx
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14d, 0x1
 ins:cmp r14d, 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r14d, r14d
 ins:test r14d, r14d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebp, 0x1
 ins:and ebp, 0x1
 reg:ebp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x11799], 0x1
 ins:add dword ptr [rip+0x11799], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x11799], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included or ebp, 0x2
 ins:or ebp, 0x2
 reg:ebp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x117c7], 0x1
 ins:add dword ptr [rip+0x117c7], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x117c7], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 ins:cmp eax, 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test bpl, 0x1
 ins:test bpl, 0x1
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x2
 ins:cmp ebp, 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rbp]
 ins:mov ecx, dword ptr [rbp]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0xe
 ins:cmp ecx, 0xe
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x10d86]
 ins:lea rsi, ptr [rip+0x10d86]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, ecx
 ins:mov edx, ecx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rsi+rdx*4]
 ins:movsxd rax, dword ptr [rsi+rdx*4]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rsi
 ins:add rax, rsi
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0xb79]
 ins:lea rdx, ptr [rip+0xb79]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1b582], 0x0
 ins:cmp byte ptr [rip+0x1b582], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x2
 ins:test bl, 0x2
 reg:rflags
 NORMAL FLAG REG: inst test bl, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included setz r12b
 ins:setz r12b
 reg:r12b
 Exe .text
 INSTSELECTOR: instruction to be included neg r12d
 ins:neg r12d
 reg:r12d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, ebx
 ins:mov esi, ebx
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rdi
 ins:mov r15, rdi
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x98
 ins:sub rsp, 0x98
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rdi+0x4]
 ins:mov edx, dword ptr [rdi+0x4]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x17e73]
 ins:mov ecx, dword ptr [rip+0x17e73]
 reg:ecx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rsp+0x40]
 ins:lea r12, ptr [rsp+0x40]
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 ins:mov ebx, edx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rcx-0x1]
 ins:lea eax, ptr [rcx-0x1]
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub ebx, eax
 ins:sub ebx, eax
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 NORMAL FLAG REG: inst test ecx, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rsp+0x50]
 ins:lea rbx, ptr [rsp+0x50]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmovz eax, edx
 ins:cmovz eax, edx
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x70]
 ins:lea rax, ptr [rsp+0x70]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x9a5d], 0x1
 ins:add dword ptr [rip+0x9a5d], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x9a5d], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x10
 ins:mov edi, 0x10
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xbee8]
 ins:mov rax, qword ptr [rip+0xbee8]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x9a2f], 0x1
 ins:sub dword ptr [rip+0x9a2f], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x9a37]
 ins:mov eax, dword ptr [rip+0x9a37]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 ins:mov rax, qword ptr [rbx]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [r15+0x10]
 ins:mov r14, qword ptr [r15+0x10]
 reg:r14
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x17bcb]
 ins:mov rax, qword ptr [rip+0x17bcb]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x172bd]
 ins:lea rax, ptr [rip+0x172bd]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r14, r14
 ins:test r14, r14
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, r12
 ins:mov rbp, r12
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 ins:xor r13d, r13d
 reg:r13d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x3
 ins:mov edx, 0x3
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 ins:mov rsi, r12
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 ins:mov r12, rsi
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, edx
 ins:mov esi, edx
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edx
 ins:mov ebp, edx
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+0x18]
 ins:mov rax, qword ptr [rdi+0x18]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdi+0x10]
 ins:mov rdi, qword ptr [rdi+0x10]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x141b9]
 ins:mov rax, qword ptr [rip+0x141b9]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdi
 ins:mov r13, rdi
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xcdd0]
 ins:lea r12, ptr [rip+0xcdd0]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 ins:mov ebx, esi
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x108
 ins:sub rsp, 0x108
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, esi
 ins:mov eax, esi
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x180
 ins:and eax, 0x180
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x80
 ins:cmp eax, 0x80
 reg:rflags
 NORMAL FLAG REG: inst cmp eax, 0x80
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and esi, 0x4
 ins:and esi, 0x4
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [r12-0x1]
 ins:lea rax, ptr [r12-0x1]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x40
 ins:test bl, 0x40
 reg:rflags
 NORMAL FLAG REG: inst test bl, 0x40
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [r12-0x2]
 ins:lea r12, ptr [r12-0x2]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz r12, rax
 ins:cmovnz r12, rax
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x2
 ins:and eax, 0x2
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0xfffffffd
 ins:and ebx, 0xfffffffd
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [r13], 0x7e
 ins:cmp byte ptr [r13], 0x7e
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [r13], 0x7e
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x2
 ins:and eax, 0x2
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0xfffffffd
 ins:and ebx, 0xfffffffd
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [r13], 0x7e
 ins:cmp byte ptr [r13], 0x7e
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [r13], 0x7e
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0x14b0d]
 ins:mov r14, qword ptr [rip+0x14b0d]
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1477e]
 ins:mov rax, qword ptr [rip+0x1477e]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0xcd23]
 ins:lea rbp, ptr [rip+0xcd23]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, r13
 ins:mov rbx, r13
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub r14d, eax
 ins:sub r14d, eax
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 ins:xor r15d, r15d
 reg:r15d
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbx+r15*1]
 ins:lea rdi, ptr [rbx+r15*1]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 ins:mov rsi, r12
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rax+r15*1]
 ins:lea r13, ptr [rax+r15*1]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbx+r13*1]
 ins:movsx eax, byte ptr [rbx+r13*1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [r13+0x1]
 ins:lea r8, ptr [r13+0x1]
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, eax
 ins:mov r15d, eax
 reg:r15d
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff87
 ins:cmp eax, 0xffffff87
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r8, rbx
 ins:add r8, rbx
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3a
 ins:cmp r15b, 0x3a
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3d
 ins:cmp r15b, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x14a49]
 ins:mov rdx, qword ptr [rip+0x14a49]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r13
 ins:mov rsi, r13
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x10edd]
 ins:mov rax, qword ptr [rip+0x10edd]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 ins:mov r12, rsi
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdx
 ins:mov rbx, rdx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rbx, qword ptr [rip+0x10ed9]
 ins:sub rbx, qword ptr [rip+0x10ed9]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rbx
 ins:sub rax, rbx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rsi, rax
 ins:cmp rsi, rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rdx
 ins:mov rdi, rdx
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rsp+0x14]
 ins:mov esi, dword ptr [rsp+0x14]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsp+0x18]
 ins:mov r8, qword ptr [rsp+0x18]
 reg:r8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, qword ptr [rip+0x1469a]
 ins:sub rax, qword ptr [rip+0x1469a]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 NORMAL FLAG REG: inst test esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rsp+0x2b], dl
 ins:test byte ptr [rsp+0x2b], dl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14d, eax
 ins:cmp r14d, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, eax
 ins:mov r14d, eax
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included add r8, rbx
 ins:add r8, rbx
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3a
 ins:cmp r15b, 0x3a
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, eax
 ins:mov r14d, eax
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included add r8, rbx
 ins:add r8, rbx
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3a
 ins:cmp r15b, 0x3a
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, r13
 ins:add rbx, r13
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [r8-0x1], 0x7e
 ins:cmp byte ptr [r8-0x1], 0x7e
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rbx
 ins:mov r8, rbx
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 ins:xor r15d, r15d
 reg:r15d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3d
 ins:cmp r15b, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r15b, r15b
 ins:test r15b, r15b
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r15d, 0x7f
 ins:add r15d, 0x7f
 reg:r15d
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x7
 ins:cmp r15b, 0x7
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xf8]
 ins:mov rax, qword ptr [rsp+0xf8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x108
 ins:add rsp, 0x108
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1452e]
 ins:mov rax, qword ptr [rip+0x1452e]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rip+0x14197]
 ins:cmp rax, qword ptr [rip+0x14197]
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x1]
 ins:lea rdi, ptr [rax+0x1]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rdi, qword ptr [rip+0x1417b]
 ins:sub rdi, qword ptr [rip+0x1417b]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x144bc]
 ins:lea rbx, ptr [rip+0x144bc]
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebp, 0x1
 ins:and ebp, 0x1
 reg:ebp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rbx
 ins:mov rdx, rbx
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0xffffffff
 ins:mov esi, 0xffffffff
 reg:esi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x48
 ins:sub rsp, 0x48
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x15986], 0x0
 ins:cmp qword ptr [rip+0x15986], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rip+0x15986], 0x0
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xebb3]
 ins:lea rax, ptr [rip+0xebb3]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, esi
 ins:mov ebp, esi
 reg:ebp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x156e9], 0x20
 ins:test byte ptr [rip+0x156e9], 0x20
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 ins:mov rax, qword ptr [rsp+0x8]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x15949]
 ins:lea rax, ptr [rip+0x15949]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x20]
 ins:mov rax, qword ptr [rsp+0x20]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x8]
 ins:mov rdi, qword ptr [rsp+0x8]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rip+0x1823f]
 ins:lea r15, ptr [rip+0x1823f]
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsp+0x2c]
 ins:mov ecx, dword ptr [rsp+0x2c]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, dword ptr [rax+0x8]
 ins:movsxd rdx, dword ptr [rax+0x8]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rdi+rdx*1]
 ins:lea r14, ptr [rdi+rdx*1]
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rax+0x10]
 ins:mov edx, dword ptr [rax+0x10]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rax+0xc]
 ins:movsxd rax, dword ptr [rax+0xc]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 NORMAL FLAG REG: inst test edx, edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmovz r15, qword ptr [rsp+0x30]
 ins:cmovz r15, qword ptr [rsp+0x30]
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rdi
 ins:add rax, rdi
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14, rax
 ins:cmp r14, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 ins:mov rax, qword ptr [rsp+0x8]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x18]
 ins:mov rax, qword ptr [rsp+0x18]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 ins:cmp byte ptr [rax], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x10
 ins:mov edi, 0x10
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x18]
 ins:mov rdx, qword ptr [rsp+0x18]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x38]
 ins:mov rcx, qword ptr [rsp+0x38]
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rcx+0x8]
 ins:mov rdx, qword ptr [rcx+0x8]
 reg:rdx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x14495]
 ins:mov rax, qword ptr [rip+0x14495]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x1447f]
 ins:mov rbp, qword ptr [rip+0x1447f]
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rip+0xc6f0]
 ins:lea r14, ptr [rip+0xc6f0]
 reg:r14
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x16d82], 0x0
 ins:cmp byte ptr [rip+0x16d82], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rip+0x16d82], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp+0x8]
 ins:mov r13, qword ptr [rbp+0x8]
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 ins:mov rsi, r14
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x14a2c], 0x1
 ins:add dword ptr [rip+0x14a2c], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x14a2c], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp+0x8]
 ins:mov rdi, qword ptr [rbp+0x8]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x13
 ins:mov esi, 0x13
 reg:esi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rbp
 ins:mov rbx, rbp
 reg:rbx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rdi
 ins:mov r15, rdi
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, esi
 ins:mov ebp, esi
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0xdeaa]
 ins:lea rsi, ptr [rip+0xdeaa]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebp
 ins:mov r12d, ebp
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0x8
 ins:and r12d, 0x8
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included test bpl, 0x1
 ins:test bpl, 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, r15
 ins:mov r13, r15
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbx]
 ins:movzx edx, byte ptr [rbx]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, ebp
 ins:mov esi, ebp
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included and esi, 0x2
 ins:and esi, 0x2
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 ins:test dl, dl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, r15
 ins:mov r13, r15
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbp]
 ins:mov rbp, qword ptr [rbp]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x16d82], 0x0
 ins:cmp byte ptr [rip+0x16d82], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rip+0x16d82], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp+0x8]
 ins:mov r13, qword ptr [rbp+0x8]
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 ins:mov rsi, r14
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x14310]
 ins:mov rax, qword ptr [rip+0x14310]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r12+0x8]
 ins:mov rdx, qword ptr [r12+0x8]
 reg:rdx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x156e4]
 ins:mov rbx, qword ptr [rip+0x156e4]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x15cd0], 0x1
 ins:add dword ptr [rip+0x15cd0], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x15cd0], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx]
 ins:mov rbx, qword ptr [rbx]
 reg:rbx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp]
 ins:mov rax, qword ptr [rbp]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add r13d, 0x1
 ins:add r13d, 0x1
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [r14+0x8]
 ins:mov r14, qword ptr [r14+0x8]
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included test r14, r14
 ins:test r14, r14
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rsp+0x48]
 ins:mov rbp, qword ptr [rsp+0x48]
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x3
 ins:mov edx, 0x3
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 ins:mov rsi, r12
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x1122d]
 ins:mov rdx, qword ptr [rip+0x1122d]
 reg:rdx
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, rdx
 ins:add rbp, rdx
 reg:rbp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x11b58], 0x1
 ins:sub dword ptr [rip+0x11b58], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11b60]
 ins:mov eax, dword ptr [rip+0x11b60]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x111d5]
 ins:mov rax, qword ptr [rip+0x111d5]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rip+0x111de]
 ins:mov r8, qword ptr [rip+0x111de]
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rbx
 ins:sub rax, rbx
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [r8+rbx*1]
 ins:lea rdx, ptr [r8+rbx*1]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r8
 ins:mov rax, r8
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x18]
 ins:mov rdx, qword ptr [rsp+0x18]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x38]
 ins:mov rcx, qword ptr [rsp+0x38]
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rcx+0x8]
 ins:mov rdx, qword ptr [rcx+0x8]
 reg:rdx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea edi, ptr [r13+0x2]
 ins:lea edi, ptr [r13+0x2]
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdi, edi
 ins:movsxd rdi, edi
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included shl rdi, 0x3
 ins:shl rdi, 0x3
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+0x8]
 ins:lea r12, ptr [rax+0x8]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x40]
 ins:mov rax, qword ptr [rsp+0x40]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+0x8]
 ins:mov rcx, qword ptr [rax+0x8]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x8
 ins:add rdx, 0x8
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1a7a9], 0x0
 ins:cmp byte ptr [rip+0x1a7a9], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rip+0x1a7a9], 0x0
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+0x8]
 ins:mov rcx, qword ptr [rax+0x8]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x8
 ins:add rdx, 0x8
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1a7a9], 0x0
 ins:cmp byte ptr [rip+0x1a7a9], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rip+0x1a7a9], 0x0
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x17d19]
 ins:mov ecx, dword ptr [rip+0x17d19]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rsp+0x8]
 ins:mov r15, qword ptr [rsp+0x8]
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r15+0x18]
 ins:mov rdi, qword ptr [r15+0x18]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x28
 ins:sub rsp, 0x28
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x18]
 ins:mov rax, qword ptr [rsp+0x18]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x28
 ins:add rsp, 0x28
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r15+0x18]
 ins:mov rdi, qword ptr [r15+0x18]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rip+0xf1d3]
 ins:mov r12, qword ptr [rip+0xf1d3]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x30
 ins:mov edi, 0x30
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r15+0x18]
 ins:mov rdi, qword ptr [r15+0x18]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3
 ins:mov esi, 0x3
 reg:esi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xf0
 ins:sub rsp, 0xf0
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 ins:lea rdi, ptr [rsp+0x20]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xcf1c]
 ins:mov rax, qword ptr [rip+0xcf1c]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xcf09]
 ins:mov eax, dword ptr [rip+0xcf09]
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add eax, eax
 ins:add eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 ins:mov r12d, eax
 reg:r12d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x18]
 ins:mov rdi, qword ptr [rsp+0x18]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0xcf01], 0x1
 ins:cmp dword ptr [rip+0xcf01], 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rip+0xcf01], 0x1
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsp+0x14]
 ins:mov edx, dword ptr [rsp+0x14]
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rsp+0xc]
 ins:mov esi, dword ptr [rsp+0xc]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp]
 ins:mov rdi, qword ptr [rsp]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x20]
 ins:lea rdx, ptr [rsp+0x20]
 reg:rdx
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xb8
 ins:sub rsp, 0xb8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, esi
 ins:mov r13d, esi
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xd3fa], 0x1
 ins:add dword ptr [rip+0xd3fa], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0xd3fa], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, 0x0
 ins:mov r12d, 0x0
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included test sil, 0x1
 ins:test sil, 0x1
 reg:rflags
 NORMAL FLAG REG: inst test sil, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz r12, qword ptr [rip+0xf7c0]
 ins:cmovnz r12, qword ptr [rip+0xf7c0]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0x5b35]
 ins:lea rbp, ptr [rip+0x5b35]
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx]
 ins:mov eax, dword ptr [rbx]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x10
 ins:sub eax, 0x10
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x6
 ins:cmp eax, 0x6
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rbp+rax*4]
 ins:movsxd rax, dword ptr [rbp+rax*4]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbp
 ins:add rax, rbp
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xa8]
 ins:mov rax, qword ptr [rsp+0xa8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xb8
 ins:add rsp, 0xb8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x18]
 ins:mov rdx, qword ptr [rsp+0x18]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsp+0x14]
 ins:mov edx, dword ptr [rsp+0x14]
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0xceb2]
 ins:mov edx, dword ptr [rip+0xceb2]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xe8]
 ins:mov rax, qword ptr [rsp+0xe8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xf0
 ins:add rsp, 0xf0
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, qword ptr [r15+0x8]
 ins:mov r15, qword ptr [r15+0x8]
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x17bf0]
 ins:mov rbp, qword ptr [rip+0x17bf0]
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r15, r15
 ins:test r15, r15
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rsp+0x58]
 ins:mov r14, qword ptr [rsp+0x58]
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x4
 ins:mov edx, 0x4
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbx
 ins:mov rsi, rbx
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r15
 ins:mov rdi, r15
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1a6ee], 0x0
 ins:cmp byte ptr [rip+0x1a6ee], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 ins:test r13d, r13d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rsp+0x38], 0x0
 ins:cmp dword ptr [rsp+0x38], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp+0x5]
 ins:lea rax, ptr [rbp+0x5]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0xffffffff
 ins:mov ebx, 0xffffffff
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rax
 ins:mov rbp, rax
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rsp+0x60]
 ins:lea r15, ptr [rsp+0x60]
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r12]
 ins:mov rdi, qword ptr [r12]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, rbp
 ins:mov rcx, rbp
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 ins:mov rsi, r15
 reg:rsi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 ins:mov r12, rsi
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x2f
 ins:mov esi, 0x2f
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 ins:mov ebx, edx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xd8
 ins:sub rsp, 0xd8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x2
 ins:and ebx, 0x2
 reg:ebx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xc8]
 ins:mov rax, qword ptr [rsp+0xc8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xd8
 ins:add rsp, 0xd8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0x60]
 ins:mov eax, dword ptr [rsp+0x60]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffffff
 ins:cmp eax, 0xffffffff
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x2
 ins:cmp eax, 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x68]
 ins:mov rdi, qword ptr [rsp+0x68]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0xffffffff
 ins:cmp ebx, 0xffffffff
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rsp+0x38], 0x0
 ins:cmp dword ptr [rsp+0x38], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rsp+0x60], 0x1
 ins:cmp dword ptr [rsp+0x60], 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rsp+0x60], 0x1
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rsp+0x3c], 0x1
 ins:test byte ptr [rsp+0x3c], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x1a47c]
 ins:mov edx, dword ptr [rip+0x1a47c]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x18015], 0x1
 ins:add dword ptr [rip+0x18015], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x18015], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rsp+0x8]
 ins:mov rbx, qword ptr [rsp+0x8]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x18015], 0x1
 ins:add dword ptr [rip+0x18015], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x18015], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rsp+0x8]
 ins:mov rbx, qword ptr [rsp+0x8]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x1243a]
 ins:mov edx, dword ptr [rip+0x1243a]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x12434]
 ins:mov rbp, qword ptr [rip+0x12434]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 ins:mov ebx, esi
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx-0x1]
 ins:lea eax, ptr [rdx-0x1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rip+0x14ad0]
 ins:mov esi, dword ptr [rip+0x14ad0]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rbp
 ins:mov r12, rbp
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rax+rax*4+0x5]
 ins:lea rax, ptr [rax+rax*4+0x5]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rbp+rax*8]
 ins:lea rcx, ptr [rbp+rax*8]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [r12+0x1f], 0x8
 ins:test byte ptr [r12+0x1f], 0x8
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [r12+0x1e]
 ins:movzx eax, word ptr [r12+0x1e]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and ax, 0x4ff
 ins:and ax, 0x4ff
 reg:ax
 Exe .text
 INSTSELECTOR: instruction to be included cmp ax, 0x402
 ins:cmp ax, 0x402
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rdx+rdx*4]
 ins:lea r12, ptr [rdx+rdx*4]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included shl r12, 0x3
 ins:shl r12, 0x3
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [r12+0xa0]
 ins:lea rsi, ptr [r12+0xa0]
 reg:rsi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rdi, rbp
 ins:sub rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, r12
 ins:add rbp, r12
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rdx, 0x28
 ins:sub rdx, 0x28
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rdx
 ins:mov rsi, rdx
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+rdx*1+0x10]
 ins:mov rcx, qword ptr [rax+rdx*1+0x10]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsi, r12
 ins:sub rsi, r12
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included add rsi, rbp
 ins:add rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rsi
 ins:cmp rcx, rsi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x122fb]
 ins:mov rdx, qword ptr [rip+0x122fb]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, rdi
 ins:add rdx, rdi
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, rax
 ins:add r12, rax
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x122ee], 0x4
 ins:add dword ptr [rip+0x122ee], 0x4
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x122ee], 0x4
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x97], 0xf7
 ins:and byte ptr [r12+0x97], 0xf7
 reg:rflags
 COMP2MEM: inst and byte ptr [r12+0x97], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x6f], 0xf7
 ins:and byte ptr [r12+0x6f], 0xf7
 reg:rflags
 COMP2MEM: inst and byte ptr [r12+0x6f], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x47], 0xf7
 ins:and byte ptr [r12+0x47], 0xf7
 reg:rflags
 COMP2MEM: inst and byte ptr [r12+0x47], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x1f], 0xf7
 ins:and byte ptr [r12+0x1f], 0xf7
 reg:rflags
 COMP2MEM: inst and byte ptr [r12+0x1f], 0xf7
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, rax
 ins:add r12, rax
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x122ee], 0x4
 ins:add dword ptr [rip+0x122ee], 0x4
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x122ee], 0x4
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x97], 0xf7
 ins:and byte ptr [r12+0x97], 0xf7
 reg:rflags
 COMP2MEM: inst and byte ptr [r12+0x97], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x6f], 0xf7
 ins:and byte ptr [r12+0x6f], 0xf7
 reg:rflags
 COMP2MEM: inst and byte ptr [r12+0x6f], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x47], 0xf7
 ins:and byte ptr [r12+0x47], 0xf7
 reg:rflags
 COMP2MEM: inst and byte ptr [r12+0x47], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x1f], 0xf7
 ins:and byte ptr [r12+0x1f], 0xf7
 reg:rflags
 COMP2MEM: inst and byte ptr [r12+0x1f], 0xf7
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 ins:pxor xmm0, xmm0
 reg:xmm0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x14a87]
 ins:mov eax, dword ptr [rip+0x14a87]
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or byte ptr [r12+0x1f], 0x2
 ins:or byte ptr [r12+0x1f], 0x2
 reg:rflags
 COMP2MEM: inst or byte ptr [r12+0x1f], 0x2
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x123b0]
 ins:mov rax, qword ptr [rip+0x123b0]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or byte ptr [r12+0x1f], 0x8
 ins:or byte ptr [r12+0x1f], 0x8
 reg:rflags
 COMP2MEM: inst or byte ptr [r12+0x1f], 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 ins:cmp ebx, 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdi, ebx
 ins:movsxd rdi, ebx
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included shl rdi, 0x4
 ins:shl rdi, 0x4
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x123b0]
 ins:mov rax, qword ptr [rip+0x123b0]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or byte ptr [r12+0x1f], 0x8
 ins:or byte ptr [r12+0x1f], 0x8
 reg:rflags
 COMP2MEM: inst or byte ptr [r12+0x1f], 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 ins:cmp ebx, 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdi, ebx
 ins:movsxd rdi, ebx
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included shl rdi, 0x4
 ins:shl rdi, 0x4
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbx
 ins:mov rsi, rbx
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rsi
 ins:mov r13, rsi
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 ins:mov ebx, edx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 ins:mov r12d, eax
 reg:r12d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 ins:mov r12d, eax
 reg:r12d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rip+0x14831]
 ins:mov r13d, dword ptr [rip+0x14831]
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [r13+0x1]
 ins:lea eax, ptr [r13+0x1]
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x14134]
 ins:lea rbx, ptr [rip+0x14134]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x13735], rbx
 ins:cmp qword ptr [rip+0x13735], rbx
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 ins:cmp ebx, 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x1f], 0x2
 ins:test byte ptr [rbp+0x1f], 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp word ptr [rbp+0x1c], 0x0
 ins:cmp word ptr [rbp+0x1c], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp word ptr [rbp+0x1c], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, eax
 ins:mov esi, eax
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 ins:cmp ebx, 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x12251]
 ins:mov rax, qword ptr [rip+0x12251]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x12243]
 ins:lea rdx, ptr [rip+0x12243]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rax
 ins:cmp rbp, rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x20]
 ins:mov rax, qword ptr [rax+0x20]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rax
 ins:cmp rbp, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rbp+0x1c]
 ins:movzx eax, word ptr [rbp+0x1c]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x1]
 ins:lea edx, ptr [rax+0x1]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, qword ptr [rbp+0x10]
 ins:add rax, qword ptr [rbp+0x10]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rax
 ins:mov rbp, rax
 reg:rbp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x14a9f]
 ins:lea rax, ptr [rip+0x14a9f]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1487d]
 ins:mov eax, dword ptr [rip+0x1487d]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
  Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0x14120]
 ins:mov edi, dword ptr [rip+0x14120]
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x13704]
 ins:mov rax, qword ptr [rip+0x13704]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xcb03], 0x1
 ins:add dword ptr [rip+0xcb03], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0xcb03], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xc634]
 ins:lea r12, ptr [rip+0xc634]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, r12
 ins:mov rbx, r12
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [r12+0x208]
 ins:lea r13, ptr [r12+0x208]
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 ins:mov rdi, qword ptr [rbx]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+0x8]
 ins:lea rbp, ptr [rbx+0x8]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x0
 ins:cmp byte ptr [rdi], 0x0
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r13
 ins:cmp rbp, r13
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rbp
 ins:mov rbx, rbp
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 ins:mov rdi, qword ptr [rbx]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+0x8]
 ins:lea rbp, ptr [rbx+0x8]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x0
 ins:cmp byte ptr [rdi], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi+0x1e], 0x0
 ins:cmp byte ptr [rdi+0x1e], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rdi+0x1e], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0xca97], 0x1
 ins:sub dword ptr [rip+0xca97], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xca9f]
 ins:mov eax, dword ptr [rip+0xca9f]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 ins:mov r13d, edi
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x168
 ins:sub rsp, 0x168
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x13d15], 0x1
 ins:add dword ptr [rip+0x13d15], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x13d15], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x15e0f]
 ins:mov ecx, dword ptr [rip+0x15e0f]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included xor r14d, r14d
 ins:xor r14d, r14d
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included cmp edi, 0x1
 ins:cmp edi, 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp edi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included setnz r14b
 ins:setnz r14b
 reg:r14b
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or r14d, 0x2
 ins:or r14d, 0x2
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rsp+0x1c]
 ins:lea r15, ptr [rsp+0x1c]
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x20]
 ins:lea rbp, ptr [rsp+0x20]
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, r14d
 ins:mov esi, r14d
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r15
 ins:mov rdi, r15
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 ins:cmp ebx, 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x1f], 0x2
 ins:test byte ptr [rbp+0x1f], 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 ins:test r13d, r13d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 ins:cmp ebx, 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x2
 ins:mov edi, 0x2
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 ins:test r13d, r13d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x14997], 0x0
 ins:cmp byte ptr [rip+0x14997], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x12093]
 ins:mov rbp, qword ptr [rip+0x12093]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rsp+0x1c]
 ins:lea r15, ptr [rsp+0x1c]
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x20]
 ins:lea rbp, ptr [rsp+0x20]
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, r14d
 ins:mov esi, r14d
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r15
 ins:mov rdi, r15
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x137b4], 0x1
 ins:add dword ptr [rip+0x137b4], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x137b4], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rdi+0x1c]
 ins:movzx eax, word ptr [rdi+0x1c]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rdi+0x10]
 ins:mov rbp, qword ptr [rdi+0x10]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included test ax, ax
 ins:test ax, ax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rax-0x1]
 ins:lea r12d, ptr [rax-0x1]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x15ab4]
 ins:lea r13, ptr [rip+0x15ab4]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 ins:add r12, 0x1
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included shl r12, 0x4
 ins:shl r12, 0x4
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included add r12, rbp
 ins:add r12, rbp
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp+0x8]
 ins:mov rdi, qword ptr [rbp+0x8]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r13
 ins:cmp rdi, r13
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 ins:cmp rbx, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [rbx+0x1f], 0xf7
 ins:and byte ptr [rbx+0x1f], 0xf7
 reg:rflags
 COMP2MEM: inst and byte ptr [rbx+0x1f], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x13195]
 ins:mov rax, qword ptr [rip+0x13195]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x1318e]
 ins:lea rdx, ptr [rip+0x1318e]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rax
 ins:cmp rbx, rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x20]
 ins:mov rax, qword ptr [rax+0x20]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbx
 ins:cmp rax, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x20
 ins:add rdx, 0x20
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x20]
 ins:mov rax, qword ptr [rbx+0x20]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x1372a], 0x1
 ins:sub dword ptr [rip+0x1372a], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x20]
 ins:mov rax, qword ptr [rbx+0x20]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x1372a], 0x1
 ins:sub dword ptr [rip+0x1372a], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x13732]
 ins:mov eax, dword ptr [rip+0x13732]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbp+0x20]
 ins:mov rbp, qword ptr [rbp+0x20]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x17f8d]
 ins:mov eax, dword ptr [rip+0x17f8d]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x50]
 ins:mov rdi, qword ptr [rsp+0x50]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x11
 ins:mov esi, 0x11
 reg:esi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, esi
 ins:mov ebp, esi
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xa22d], 0x1
 ins:add dword ptr [rip+0xa22d], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0xa22d], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx+0x8]
 ins:mov rdi, qword ptr [rbx+0x8]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, ebp
 ins:mov esi, ebp
 reg:esi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsp+0x68]
 ins:mov edx, dword ptr [rsp+0x68]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 ins:mov ebx, edx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x10
 ins:sub rsp, 0x10
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x20
 ins:mov esi, 0x20
 reg:esi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included or esi, edi
 ins:or esi, edi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rip+0x9e61]
 ins:lea r15, ptr [rip+0x9e61]
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, esi
 ins:mov r14d, esi
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 ins:mov r13d, edi
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [r15+0x138]
 ins:lea r12, ptr [r15+0x138]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdx
 ins:mov rbp, rdx
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x9766]
 ins:mov rax, qword ptr [rip+0x9766]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x9757]
 ins:mov rcx, qword ptr [rip+0x9757]
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [r15]
 ins:mov rbx, qword ptr [r15]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbx+0x8]
 ins:mov edx, dword ptr [rbx+0x8]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included and edx, r14d
 ins:and edx, r14d
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, r13d
 ins:cmp edx, r13d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rcx
 ins:cmp rax, rcx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x10]
 ins:mov rdx, qword ptr [rbx+0x10]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx]
 ins:mov rbx, qword ptr [rbx]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x8
 ins:add rax, 0x8
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x9712]
 ins:mov rcx, qword ptr [rip+0x9712]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x8
 ins:add r15, 0x8
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15, r12
 ins:cmp r15, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 ins:cmp rcx, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [r15]
 ins:mov rbx, qword ptr [r15]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx]
 ins:mov rbx, qword ptr [rbx]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbx+0x8]
 ins:mov edx, dword ptr [rbx+0x8]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included and edx, r14d
 ins:and edx, r14d
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, r13d
 ins:cmp edx, r13d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rcx
 ins:cmp rax, rcx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x10]
 ins:mov rdx, qword ptr [rbx+0x10]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx]
 ins:mov rbx, qword ptr [rbx]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x8
 ins:add rax, 0x8
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x9712]
 ins:mov rcx, qword ptr [rip+0x9712]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x8
 ins:add r15, 0x8
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15, r12
 ins:cmp r15, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 ins:cmp rcx, rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x10f6c]
 ins:mov rbx, qword ptr [rip+0x10f6c]
 reg:rbx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x1105a]
 ins:mov rbp, qword ptr [rip+0x1105a]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rbp+rbp*1]
 ins:lea rbx, ptr [rbp+rbp*1]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rbx
 ins:cmp rbp, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rbx+0x80]
 ins:lea rax, ptr [rbx+0x80]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, 0x80
 ins:cmp rbx, 0x80
 reg:rflags
 NORMAL FLAG REG: inst cmp rbx, 0x80
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x13abe]
 ins:lea rdx, ptr [rip+0x13abe]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rip+0x1103f]
 ins:mov r12, qword ptr [rip+0x1103f]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included cmovb rbx, rax
 ins:cmovb rbx, rax
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1103c]
 ins:mov rax, qword ptr [rip+0x1103c]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 ins:cmp rax, rdx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x8
 ins:add rax, 0x8
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12, rax
 ins:cmp r12, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, ebp
 ins:movsxd rdx, ebp
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 ins:mov rsi, r12
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add qword ptr [rip+0x10ff9], rbx
 ins:add qword ptr [rip+0x10ff9], rbx
 reg:rflags
 COMP2MEM: inst add qword ptr [rip+0x10ff9], rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x10f70]
 ins:mov rax, qword ptr [rip+0x10f70]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbx
 ins:add rax, rbx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x8]
 ins:lea rdi, ptr [rax+0x8]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rdi, qword ptr [rip+0x96ec]
 ins:sub rdi, qword ptr [rip+0x96ec]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rbp]
 ins:mov r12, qword ptr [rbp]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x2f
 ins:mov esi, 0x2f
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 ins:mov rdx, r14
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rdi
 ins:mov r15, rdi
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdx
 ins:mov r13, rdx
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xf799]
 ins:lea r12, ptr [rip+0xf799]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsi
 ins:mov rbp, rsi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xa8
 ins:sub rsp, 0xa8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r13
 ins:mov rdx, r13
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r15
 ins:mov rdi, r15
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp edi, 0x11
 ins:cmp edi, 0x11
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rdi-0x1]
 ins:lea eax, ptr [rdi-0x1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0xc85d]
 ins:lea rdx, ptr [rip+0xc85d]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp edi, 0x2
 ins:cmp edi, 0x2
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0xc8e0], 0x0
 ins:cmp qword ptr [rip+0xc8e0], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rip+0xc8e0], 0x0
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 ins:mov r12d, eax
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included setnz bl
 ins:setnz bl
 reg:bl
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 ins:test r13d, r13d
 reg:rflags
 NORMAL FLAG REG: inst test r13d, r13d
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe .text
 INSTSELECTOR: instruction to be included or bl, al
 ins:or bl, al
 reg:bl
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rsp+0xa0]
 ins:lea r12, ptr [rsp+0xa0]
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, r12d
 ins:test r12d, r12d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rip+0x13638]
 ins:mov r10, qword ptr [rip+0x13638]
 reg:r10
 Exe .text
 INSTSELECTOR: instruction to be included mov r8d, dword ptr [rsp+0x1c]
 ins:mov r8d, dword ptr [rsp+0x1c]
 reg:r8d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r10
 ins:mov rdi, r10
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included test r10, r10
 ins:test r10, r10
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi+0x1e], 0x2
 ins:cmp byte ptr [rdi+0x1e], 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, word ptr [rdi+0x1c]
 ins:movzx ecx, word ptr [rdi+0x1c]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+0x10]
 ins:mov rax, qword ptr [rdi+0x10]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x2
 ins:mov esi, 0x2
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included xor r9d, r9d
 ins:xor r9d, r9d
 reg:r9d
 Exe .text
 INSTSELECTOR: instruction to be included shl rcx, 0x4
 ins:shl rcx, 0x4
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included add rcx, rax
 ins:add rcx, rax
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rax], r12d
 ins:cmp dword ptr [rax], r12d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r8d
 ins:mov edx, r8d
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdi
 ins:mov r9, rdi
 reg:r9
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0xffffffff
 ins:cmp edx, 0xffffffff
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x10
 ins:add rax, 0x10
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 ins:cmp rcx, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, 0x7f
 ins:cmp dl, 0x7f
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x10
 ins:add rax, 0x10
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 ins:cmp rcx, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x10
 ins:add rax, 0x10
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 ins:cmp rcx, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rax], r12d
 ins:cmp dword ptr [rax], r12d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r8d
 ins:mov edx, r8d
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdi
 ins:mov r9, rdi
 reg:r9
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0xffffffff
 ins:cmp edx, 0xffffffff
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r9, r9
 ins:test r9, r9
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdi+0x20]
 ins:mov rdi, qword ptr [rdi+0x20]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r8b, 0x7f
 ins:cmp r8b, 0x7f
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r9, qword ptr [rsp+0x8]
 ins:cmp r9, qword ptr [rsp+0x8]
 reg:rflags
 NORMAL FLAG REG: inst cmp r9, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included setz bl
 ins:setz bl
 reg:bl
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [r9+0x1e]
 ins:movzx eax, byte ptr [r9+0x1e]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included or byte ptr [r9+0x1f], 0x10
 ins:or byte ptr [r9+0x1f], 0x10
 reg:rflags
 COMP2MEM: inst or byte ptr [r9+0x1f], 0x10
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, esi
 ins:cmp eax, esi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x1
 ins:cmp esi, 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x13c53], 0x1
 ins:sub dword ptr [rip+0x13c53], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x13c5b]
 ins:mov eax, dword ptr [rip+0x13c5b]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 ins:test bl, bl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 ins:test bl, bl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x158]
 ins:mov rax, qword ptr [rsp+0x158]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x168
 ins:add rsp, 0x168
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x120]
 ins:lea rbp, ptr [rsp+0x120]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rsp+0x1c]
 ins:mov esi, dword ptr [rsp+0x1c]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, esi
 ins:mov eax, esi
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 ins:mov ebx, esi
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, bh
 ins:movzx ecx, bh
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x7f
 ins:and eax, 0x7f
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp sil, 0x7f
 ins:cmp sil, 0x7f
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0xbac8]
 ins:lea rdx, ptr [rip+0xbac8]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x10
 ins:mov esi, 0x10
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 ins:movsxd rdx, eax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x131cd]
 ins:mov rsi, qword ptr [rip+0x131cd]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included add eax, 0x1
 ins:add eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cdqe 
 ins:cdqe 
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x158]
 ins:mov rax, qword ptr [rsp+0x158]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x168
 ins:add rsp, 0x168
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp+0x1e], 0x0
 ins:cmp byte ptr [rbp+0x1e], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rbp+0x1c]
 ins:movzx eax, word ptr [rbp+0x1c]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shl rax, 0x4
 ins:shl rax, 0x4
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, qword ptr [rbp+0x10]
 ins:add rax, qword ptr [rbp+0x10]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rax-0xc]
 ins:mov eax, dword ptr [rax-0xc]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, ah
 ins:movzx ecx, ah
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, eax
 ins:mov edx, eax
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ecx
 ins:mov r12d, ecx
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included and edx, 0x7f
 ins:and edx, 0x7f
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x1f], 0x2
 ins:test byte ptr [rbp+0x1f], 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp+0x1e], 0x2
 ins:cmp byte ptr [rbp+0x1e], 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x137b4], 0x1
 ins:add dword ptr [rip+0x137b4], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x137b4], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rdi+0x1c]
 ins:movzx eax, word ptr [rdi+0x1c]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rdi+0x10]
 ins:mov rbp, qword ptr [rdi+0x10]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included test ax, ax
 ins:test ax, ax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rax-0x1]
 ins:lea r12d, ptr [rax-0x1]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x15ab4]
 ins:lea r13, ptr [rip+0x15ab4]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 ins:add r12, 0x1
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included shl r12, 0x4
 ins:shl r12, 0x4
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included add r12, rbp
 ins:add r12, rbp
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp+0x8]
 ins:mov rdi, qword ptr [rbp+0x8]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r13
 ins:cmp rdi, r13
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x10
 ins:add rbp, 0x10
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r12
 ins:cmp rbp, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbx+0x10]
 ins:mov rbp, qword ptr [rbx+0x10]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 ins:cmp rbx, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [rbx+0x1f], 0xf7
 ins:and byte ptr [rbx+0x1f], 0xf7
 reg:rflags
 COMP2MEM: inst and byte ptr [rbx+0x1f], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x13195]
 ins:mov rax, qword ptr [rip+0x13195]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x1318e]
 ins:lea rdx, ptr [rip+0x1318e]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rax
 ins:cmp rbx, rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 ins:mov rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x20]
 ins:mov rax, qword ptr [rax+0x20]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbx
 ins:cmp rax, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x20
 ins:add rdx, 0x20
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x20]
 ins:mov rax, qword ptr [rbx+0x20]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x1372a], 0x1
 ins:sub dword ptr [rip+0x1372a], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x20]
 ins:mov rax, qword ptr [rbx+0x20]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x1372a], 0x1
 ins:sub dword ptr [rip+0x1372a], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x13732]
 ins:mov eax, dword ptr [rip+0x13732]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x18058]
 ins:mov eax, dword ptr [rip+0x18058]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 ins:mov rax, qword ptr [rsp+0x8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rax+0x18], 0x0
 ins:cmp qword ptr [rax+0x18], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebp
 ins:mov edi, ebp
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x28]
 ins:mov rdi, qword ptr [rsp+0x28]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rip+0xf215]
 ins:cmp rdi, qword ptr [rip+0xf215]
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x20]
 ins:mov rdi, qword ptr [rsp+0x20]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rip+0x137ad]
 ins:cmp rdi, qword ptr [rip+0x137ad]
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x18]
 ins:mov rdi, qword ptr [rsp+0x18]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rip+0xbea5]
 ins:cmp rdi, qword ptr [rip+0xbea5]
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x9bfb], 0x1
 ins:add dword ptr [rip+0x9bfb], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x9bfb], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edi
 ins:mov ebx, edi
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0xc094]
 ins:mov rdi, qword ptr [rip+0xc094]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi]
 ins:mov rax, qword ptr [rdi]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rdi+0x8]
 ins:mov r13, qword ptr [rdi+0x8]
 reg:r13
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x9b07], 0x1
 ins:sub dword ptr [rip+0x9b07], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x9b0f]
 ins:mov eax, dword ptr [rip+0x9b0f]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0xbe8a], rbx
 ins:cmp qword ptr [rip+0xbe8a], rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x10]
 ins:mov rax, qword ptr [rsp+0x10]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0xfcb5]
 ins:lea rdi, ptr [rip+0xfcb5]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x30]
 ins:mov rdi, qword ptr [rsp+0x30]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x110ca]
 ins:mov rdi, qword ptr [rip+0x110ca]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbx], rdi
 ins:cmp qword ptr [rbx], rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x8]
 ins:mov rax, qword ptr [rbx+0x8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x10]
 ins:mov rdx, qword ptr [rbx+0x10]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x119f6], 0x1
 ins:sub dword ptr [rip+0x119f6], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x119fe]
 ins:mov eax, dword ptr [rip+0x119fe]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x88]
 ins:mov rax, qword ptr [rsp+0x88]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0x38]
 ins:mov eax, dword ptr [rsp+0x38]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x98
 ins:add rsp, 0x98
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rdx+0x68]
 ins:mov ecx, dword ptr [rdx+0x68]
 reg:ecx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff7e
 ins:cmp eax, 0xffffff7e
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebp, 0x1
 ins:and ebp, 0x1
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x11736]
 ins:lea rax, ptr [rip+0x11736]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz r12, rax
 ins:cmovnz r12, rax
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rsp+0xf], 0x0
 ins:cmp byte ptr [rsp+0xf], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x31
 ins:cmp ebp, 0x31
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x142da]
 ins:mov eax, dword ptr [rip+0x142da]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x11c13]
 ins:mov rdx, qword ptr [rip+0x11c13]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdx+0x1e], 0x1
 ins:cmp byte ptr [rdx+0x1e], 0x1
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x14226], 0x0
 ins:cmp byte ptr [rip+0x14226], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x11603]
 ins:mov rsi, qword ptr [rip+0x11603]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x9f02]
 ins:lea rdi, ptr [rip+0x9f02]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x141b2], 0x0
 ins:cmp byte ptr [rip+0x141b2], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x1158a]
 ins:mov rsi, qword ptr [rip+0x1158a]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0xa
 ins:mov edi, 0xa
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x28]
 ins:mov rax, qword ptr [rsp+0x28]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x38
 ins:add rsp, 0x38
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r15d
 ins:mov eax, r15d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rax
 ins:push rax
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rax
 ins:pop rax
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xd8
 ins:sub rsp, 0xd8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xc90a]
 ins:mov eax, dword ptr [rip+0xc90a]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rsp
 ins:mov rdi, rsp
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0xc3fd]
 ins:mov rdi, qword ptr [rip+0xc3fd]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rsp
 ins:mov rax, rsp
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rsp
 ins:mov rdi, rsp
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0xbef0]
 ins:mov edi, dword ptr [rip+0xbef0]
 reg:edi
 Exe .text
