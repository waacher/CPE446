Pin: pin-3.11-97998-7ecce2dac
Copyright 2002-2019 Intel Corporation.
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146825]
 Invalid RTN lea rax, ptr [rip+0x1b69e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7f00f1a9e6a0
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7f00f1a9e6a8
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7f00f1a9e680
 Invalid RTN test byte ptr [rdx+0x71], 0x2
 Invalid RTN jz 0x7f00f1a9e6d0
 Invalid RTN test cl, 0x20
 Invalid RTN jnz 0x7f00f1a9e6d0
 Invalid RTN and ecx, 0x8
 Invalid RTN lea rax, ptr [rip+0xc869b]
 Invalid RTN lea rdx, ptr [rip+0xcdd34]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147525]
 Invalid RTN lea rax, ptr [rip+0xeab1e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1a9d988
 Invalid RTN lea rax, ptr [rip+0x17967]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7f00f1a9d988
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x9723]
 Invalid RTN lea rdx, ptr [rip+0xd73ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1464f5]
 Invalid RTN lea rax, ptr [rip+0xe4bee]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7f00f1a9e9ab
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7f00f1a9e996
 Invalid RTN lea rax, ptr [rip+0xdf7d3]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7f00f1a9e9ab
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xc3d0]
 Invalid RTN lea rdx, ptr [rip+0xd0549]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147c05]
 Invalid RTN lea rax, ptr [rip+0xe9dee]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1a9d2a8
 Invalid RTN lea rax, ptr [rip+0x1aa67]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7f00f1a9d2a8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x1a893]
 Invalid RTN lea rdx, ptr [rip+0x12e7c]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1474c5]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe9000]
 Invalid RTN lea rax, ptr [rip+0x12099]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN sub rsp, 0x28
 Invalid RTN mov edx, 0x5f
 Invalid RTN mov eax, 0x50e3a8
 Invalid RTN lea rcx, ptr [rip+0xe1ed4]
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7f00f1acefb9
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7f00f1acf02d
 Invalid RTN lea rax, ptr [rip+0xe1e99]
 Invalid RTN mov rsi, rsp
 Invalid RTN lea rdi, ptr [rip+0xe393d]
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN call 0x7f00f1b5ee10
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7f00f1acefb9
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7f00f1acf02d
 Invalid RTN lea rax, ptr [rip+0xe1e99]
 Invalid RTN mov rsi, rsp
 Invalid RTN lea rdi, ptr [rip+0xe393d]
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN call 0x7f00f1b5ee10
 Invalid RTN nop edx, edi
 Invalid RTN sub rsp, 0x38
 Invalid RTN mov r10, qword ptr [rip+0x86041]
 Invalid RTN mov rax, qword ptr fs:[0x28]
 Invalid RTN mov qword ptr [rsp+0x28], rax
 Invalid RTN xor eax, eax
 Invalid RTN mov rax, qword ptr [r10+0x198]
 Invalid RTN test rax, rax
 Invalid RTN jz 0x7f00f1b5eea1
 Invalid RTN lea rdx, ptr [rsp+0x10]
 Invalid RTN pxor xmm0, xmm0
 Invalid RTN mov r8, rsi
 Invalid RTN xor r9d, r9d
 Invalid RTN mov qword ptr [rsp+0x8], rdx
 Invalid RTN mov rsi, rax
 Invalid RTN lea rdx, ptr [rsp+0x8]
 Invalid RTN lea rcx, ptr [rax+0x390]
 Invalid RTN movaps xmmword ptr [rsp+0x10], xmm0
 Invalid RTN mov qword ptr [rsp+0x20], 0x0
 Invalid RTN mov byte ptr [rsp+0x14], 0x20
 Invalid RTN push 0x0
 Invalid RTN push 0x0
 Invalid RTN call qword ptr [r10+0x1b8]
 Invalid RTN mov rdx, rax
 Invalid RTN mov rax, qword ptr [rsp+0x18]
 Invalid RTN pop rcx
 Invalid RTN pop rsi
 Invalid RTN test rax, rax
 Invalid RTN jz 0x7f00f1b5eea1
 Invalid RTN cmp word ptr [rax+0x6], 0xfff1
 Invalid RTN jz 0x7f00f1b5eec0
 Invalid RTN test rdx, rdx
 Invalid RTN jz 0x7f00f1b5eec0
 Invalid RTN mov rdx, qword ptr [rdx]
 Invalid RTN add rdx, qword ptr [rax+0x8]
 Invalid RTN mov rax, rdx
 Invalid RTN mov rcx, qword ptr [rsp+0x28]
 Invalid RTN xor rcx, qword ptr fs:[0x28]
 Invalid RTN jnz 0x7f00f1b5eec4
 Invalid RTN add rsp, 0x38
 Invalid RTN ret 
 Invalid RTN lea rdx, ptr [rip-0x91]
 Invalid RTN test rax, rax
 Invalid RTN cmovz rax, rdx
 Invalid RTN add rsp, 0x28
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x145055]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe2e90]
 Invalid RTN lea rax, ptr [rip+0xa559]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x129fc5]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xcf5e0]
 Invalid RTN lea rax, ptr [rip+0x113a9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x12a485]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xcfd70]
 Invalid RTN lea rax, ptr [rip+0x11b99]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1466c5]
 Invalid RTN lea rax, ptr [rip+0x1b50e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7f00f1a9e800
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7f00f1a9e808
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7f00f1a9e7e0
 Invalid RTN test byte ptr [rdx+0x71], 0x2
 Invalid RTN jz 0x7f00f1a9e830
 Invalid RTN test cl, 0x20
 Invalid RTN jnz 0x7f00f1a9e830
 Invalid RTN and ecx, 0x8
 Invalid RTN lea rax, ptr [rip+0xc5b3b]
 Invalid RTN lea rdx, ptr [rip+0xcb0c4]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146895]
 Invalid RTN mov rax, 0x80000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN cmp rax, 0x2
 Invalid RTN jz 0x7f00f1a9e610
 Invalid RTN lea rax, ptr [rip+0xed424]
 Invalid RTN test ecx, 0x80000
 Invalid RTN jnz 0x7f00f1a9e609
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xc372]
 Invalid RTN lea rdx, ptr [rip+0xf0d2b]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147595]
 Invalid RTN lea rax, ptr [rip+0xe4bfe]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1a9d922
 Invalid RTN mov edx, dword ptr [rcx+0x70]
 Invalid RTN test edx, 0x100000
 Invalid RTN jz 0x7f00f1a9d90d
 Invalid RTN lea rax, ptr [rip+0xdf87c]
 Invalid RTN test byte ptr [rcx+0xcc], 0x80
 Invalid RTN jz 0x7f00f1a9d922
 Invalid RTN and dh, 0x2
 Invalid RTN lea rax, ptr [rip+0xaee9]
 Invalid RTN lea rdx, ptr [rip+0xc5292]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147b55]
 Invalid RTN lea rax, ptr [rip+0xe4d7e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1a9d358
 Invalid RTN lea rax, ptr [rip+0xb217]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7f00f1a9d358
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x9db3]
 Invalid RTN lea rdx, ptr [rip+0xc45ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146765]
 Invalid RTN lea rax, ptr [rip+0x1b9ee]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x10
 Invalid RTN jnz 0x7f00f1a9e764
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7f00f1a9e768
 Invalid RTN mov eax, dword ptr [rdx+0x7c]
 Invalid RTN and eax, 0x200
 Invalid RTN test byte ptr [rdx+0xc8], 0x2
 Invalid RTN jz 0x7f00f1a9e750
 Invalid RTN test eax, eax
 Invalid RTN lea rdx, ptr [rip+0x1b9c7]
 Invalid RTN lea rax, ptr [rip+0x1b940]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x12a4c5]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xd0720]
 Invalid RTN lea rax, ptr [rip+0x129e9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x147635]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe94e0]
 Invalid RTN lea rax, ptr [rip+0x126a9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x147a75]
 Invalid RTN lea rdx, ptr [rip+0xe48ee]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1c633]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1464a5]
 Invalid RTN lea rax, ptr [rip+0xe621e]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7f00f1a9e9fb
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7f00f1a9e9e6
 Invalid RTN lea rax, ptr [rip+0xe1333]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7f00f1a9e9fb
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xe5d0]
 Invalid RTN lea rdx, ptr [rip+0xd2659]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147ad5]
 Invalid RTN lea rax, ptr [rip+0xead3e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1a9d3d8
 Invalid RTN lea rax, ptr [rip+0x178e7]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7f00f1a9d3d8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x176f3]
 Invalid RTN lea rdx, ptr [rip+0xd61ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146355]
 Invalid RTN lea rax, ptr [rip+0x1b1ce]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7f00f1a9eb70
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7f00f1a9eb78
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7f00f1a9eb50
 Invalid RTN test byte ptr [rdx+0x71], 0x2
 Invalid RTN jz 0x7f00f1a9eba0
 Invalid RTN test cl, 0x20
 Invalid RTN jnz 0x7f00f1a9eba0
 Invalid RTN and ecx, 0x8
 Invalid RTN lea rax, ptr [rip+0xc57eb]
 Invalid RTN lea rdx, ptr [rip+0xcad74]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x128d55]
 Invalid RTN lea rax, ptr [rip+0xcf5ae]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1abc148
 Invalid RTN test byte ptr [rcx+0x72], 0x8
 Invalid RTN lea rax, ptr [rip+0x11943]
 Invalid RTN lea rdx, ptr [rip+0x1171c]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x129ef5]
 Invalid RTN lea r8, ptr [rip-0xf02]
 Invalid RTN mov rcx, 0x10000000002
 Invalid RTN mov rdx, qword ptr [rax+0xc8]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, rdx
 Invalid RTN cmp rax, rcx
 Invalid RTN jnz 0x7f00f1abafb8
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN lea r8, ptr [rip+0xd3e6a]
 Invalid RTN and rdx, rax
 Invalid RTN lea rax, ptr [rip+0xcefe0]
 Invalid RTN cmp rdx, 0x4
 Invalid RTN cmovnz r8, rax
 Invalid RTN mov rax, r8
 Invalid RTN ret 
 Invalid RTN mov rax, r8
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x12a445]
 Invalid RTN lea rdx, ptr [rip+0xc132e]
 Invalid RTN test byte ptr [rax+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x12953]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x147485]
 Invalid RTN lea rdx, ptr [rip+0xe443e]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1c0f3]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147ba5]
 Invalid RTN lea rax, ptr [rip+0xe92de]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1a9d2fb
 Invalid RTN test byte ptr [rcx+0xcc], 0x40
 Invalid RTN lea rax, ptr [rip+0x12330]
 Invalid RTN lea rdx, ptr [rip+0xf1d19]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x147675]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe9380]
 Invalid RTN lea rax, ptr [rip+0x12549]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x13e105]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xdc090]
 Invalid RTN lea rax, ptr [rip+0x3819]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146455]
 Invalid RTN lea rax, ptr [rip+0xe4b62]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7f00f1a9ea4b
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7f00f1a9ea36
 Invalid RTN lea rax, ptr [rip+0xdf747]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7f00f1a9ea4b
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xc350]
 Invalid RTN lea rdx, ptr [rip+0xd04c9]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1468d5]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe4440]
 Invalid RTN lea rax, ptr [rip+0xbaa9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x12a375]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xd09f0]
 Invalid RTN lea rax, ptr [rip+0x12fa9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x1471c5]
 Invalid RTN lea rdx, ptr [rip+0xe42be]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1bee3]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x146555]
 Invalid RTN lea rax, ptr [rip+0xea85e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1a9e958
 Invalid RTN lea rax, ptr [rip+0x18067]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7f00f1a9e958
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x86e3]
 Invalid RTN lea rdx, ptr [rip+0xda7ac]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x1465b5]
 Invalid RTN lea rax, ptr [rip+0xea50e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1a9e8f8
 Invalid RTN lea rax, ptr [rip+0x17a07]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7f00f1a9e8f8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x162c3]
 Invalid RTN lea rdx, ptr [rip+0xd8ffc]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x129f85]
 Invalid RTN mov rax, 0x80000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN cmp rax, 0x2
 Invalid RTN jz 0x7f00f1abaf20
 Invalid RTN lea rax, ptr [rip+0xd2154]
 Invalid RTN test ecx, 0x80000
 Invalid RTN jnz 0x7f00f1abaf19
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0x112e2]
 Invalid RTN lea rdx, ptr [rip+0xd5b8b]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x145015]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe6960]
 Invalid RTN lea rax, ptr [rip+0xf9d9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146405]
 Invalid RTN lea rax, ptr [rip+0xe6192]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7f00f1a9ea9b
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7f00f1a9ea86
 Invalid RTN lea rax, ptr [rip+0xe12a7]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7f00f1a9ea9b
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xe550]
 Invalid RTN lea rdx, ptr [rip+0xd25d9]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN sub rsp, 0x28
 Invalid RTN mov edx, 0x5f
 Invalid RTN mov eax, 0x50e3a8
 Invalid RTN lea rcx, ptr [rip+0xe1df4]
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7f00f1acf099
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7f00f1acf10d
 Invalid RTN lea rax, ptr [rip+0xe1db9]
 Invalid RTN mov rsi, rsp
 Invalid RTN lea rdi, ptr [rip+0xe3869]
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN call 0x7f00f1b5ee10
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7f00f1acf099
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7f00f1acf10d
 Invalid RTN lea rax, ptr [rip+0xe1db9]
 Invalid RTN mov rsi, rsp
 Invalid RTN lea rdi, ptr [rip+0xe3869]
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN call 0x7f00f1b5ee10
 Invalid RTN lea rdx, ptr [rip-0xb1]
 Invalid RTN test rax, rax
 Invalid RTN cmovz rax, rdx
 Invalid RTN add rsp, 0x28
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146825]
 Invalid RTN lea rax, ptr [rip+0x1b69e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7f00f1a9e6a0
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7f00f1a9e6a8
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7f00f1a9e680
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x1469b5]
 Invalid RTN lea rdx, ptr [rip-0x362]
 Invalid RTN test byte ptr [rax+0xcc], 0x10
 Invalid RTN lea rax, ptr [rip+0x1b0d0]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1464f5]
 Invalid RTN lea rax, ptr [rip+0xe4bee]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7f00f1a9e9ab
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7f00f1a9e996
 Invalid RTN lea rax, ptr [rip+0xdf7d3]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7f00f1a9e9ab
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147ad5]
 Invalid RTN lea rax, ptr [rip+0xead3e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1a9d3d8
 Invalid RTN lea rax, ptr [rip+0x178e7]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7f00f1a9d3d8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x176f3]
 Invalid RTN lea rdx, ptr [rip+0xd61ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x145015]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe6960]
 Invalid RTN lea rax, ptr [rip+0xf9d9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x1465b5]
 Invalid RTN lea rax, ptr [rip+0xea50e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1a9e8f8
 Invalid RTN lea rax, ptr [rip+0x17a07]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7f00f1a9e8f8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x162c3]
 Invalid RTN lea rdx, ptr [rip+0xd8ffc]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x147675]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe9380]
 Invalid RTN lea rax, ptr [rip+0x12549]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147ba5]
 Invalid RTN lea rax, ptr [rip+0xe92de]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1a9d2fb
 Invalid RTN test byte ptr [rcx+0xcc], 0x40
 Invalid RTN lea rax, ptr [rip+0x12330]
 Invalid RTN lea rdx, ptr [rip+0xf1d19]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146765]
 Invalid RTN lea rax, ptr [rip+0x1b9ee]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x10
 Invalid RTN jnz 0x7f00f1a9e764
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7f00f1a9e768
 Invalid RTN mov eax, dword ptr [rdx+0x7c]
 Invalid RTN and eax, 0x200
 Invalid RTN test byte ptr [rdx+0xc8], 0x2
 Invalid RTN jz 0x7f00f1a9e750
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x1471c5]
 Invalid RTN lea rdx, ptr [rip+0xe42be]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1bee3]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x147a75]
 Invalid RTN lea rdx, ptr [rip+0xe48ee]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1c633]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147b55]
 Invalid RTN lea rax, ptr [rip+0xe4d7e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1a9d358
 Invalid RTN lea rax, ptr [rip+0xb217]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7f00f1a9d358
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x9db3]
 Invalid RTN lea rdx, ptr [rip+0xc45ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146355]
 Invalid RTN lea rax, ptr [rip+0x1b1ce]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7f00f1a9eb70
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7f00f1a9eb78
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7f00f1a9eb50
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x147485]
 Invalid RTN lea rdx, ptr [rip+0xe443e]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1c0f3]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x146555]
 Invalid RTN lea rax, ptr [rip+0xea85e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7f00f1a9e958
 Invalid RTN lea rax, ptr [rip+0x18067]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7f00f1a9e958
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x86e3]
 Invalid RTN lea rdx, ptr [rip+0xda7ac]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1466c5]
 Invalid RTN lea rax, ptr [rip+0x1b50e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7f00f1a9e800
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7f00f1a9e808
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7f00f1a9e7e0
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146825]
 Invalid RTN lea rax, ptr [rip+0x1b69e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7f00f1a9e6a0
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7f00f1a9e6a8
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7f00f1a9e680
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdx
 Exe .text
 INSTSELECTOR: instruction to be included pop rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rsp
 Exe .text
 INSTSELECTOR: instruction to be included and rsp, 0xfffffffffffffff0
 Exe .text
 INSTSELECTOR: instruction to be included push rax
 Exe .text
 INSTSELECTOR: instruction to be included push rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [rip+0x11af6]
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x11a7f]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip-0x208]
 Exe .text
 instcount: branch/ret inst: call qword ptr [rip+0x1a2c2]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rdx
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x77a4]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0x77a4]
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rbp, r12
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3000
 Exe .text
 INSTSELECTOR: instruction to be included sar rbp, 0x3
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d57c6
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r15
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r13d
 Exe .text
 instcount: branch/ret inst: call qword ptr [r12+rbx*8]
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c3d30
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x1a509]
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x1a502]
 Exe .text
 INSTSELECTOR: instruction to be included sub rsi, rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rsi
 Exe .text
 INSTSELECTOR: instruction to be included shr rsi, 0x3f
 Exe .text
 INSTSELECTOR: instruction to be included sar rax, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included add rsi, rax
 Exe .text
 INSTSELECTOR: instruction to be included sar rsi, 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c3d68
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1a275]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c3d68
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d57b0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x110
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35f0
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3730
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c38c0
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x40]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3810
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c3c04
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x40]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c36a0
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d50d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x11
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x138
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x99a4]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1cd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, edi
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdx
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xa0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xc7dd]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+rdx*8]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1df0
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included setz bl
 Exe .text
 INSTSELECTOR: instruction to be included add ebx, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x11
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0xf08f]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1db0
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1d84
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xecc2]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1e12
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0x16
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5d1e12
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x5312]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rcx+rdx*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rcx
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d1d1b
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x11
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0xf08f]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1db0
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1d84
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsp
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1d84
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1e20
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x8]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3890
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip-0x1f7]
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d1d5e
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x8]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3890
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3640
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x98]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1e89
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xa0
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d42e0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x9e35]
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [rip+0xa42a]
 Exe .text
 INSTSELECTOR: instruction to be included mov r9d, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included lea r10, ptr [rdi+0x100]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdx]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included cmp sil, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d433d
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d432b
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d433d
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d433d
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4328
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, r9
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8+rcx*8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x20
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r10
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4308
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, al
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d433d
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4328
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, r9
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8+rcx*8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x20
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r10
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4308
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdx]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included cmp sil, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d433d
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d432b
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d433d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, r9
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8+rcx*8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x20
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r10
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4308
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3790
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3790
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x325c]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x324c]
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz rax, rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x9114]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d514d
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d5178
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cee80
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movzx r12d, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12b, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceeb1
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3ae0
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rax
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, r12b
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r8]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rdx+rax*2+0x1], 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceee1
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceee1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceed3
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3ae0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+rbx*2], 0x8
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceee1
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [r12+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ceec0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceed3
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3ae0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d5140
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d5140
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x9
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d43d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movzx edi, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, edi
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included cmp dil, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4415
 Exe .text
 INSTSELECTOR: instruction to be included test dil, dil
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4415
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rbp
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d4403
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, edi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4415
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4400
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rip+0xc8c9]
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xa2d0]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d4260
 Exe .text
 INSTSELECTOR: instruction to be included movzx edi, al
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, edi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4415
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4400
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rip+0xc8c9]
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xa2d0]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d4260
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdi
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included movsx r10d, byte ptr [rsi]
 Exe .text
 INSTSELECTOR: instruction to be included xor r11d, r11d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r8+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, r10d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d42d9
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r9
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d44e0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [r13+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d458a
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x80
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d44c8
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x80
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d44c8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d456b
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccd40
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3900
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ccd57
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r14]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, 0x118
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d44bc
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccda0
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d514d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x8f74]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d43d0
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cee80
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movzx r12d, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12b, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceeb1
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3ae0
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rax
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, r12b
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r8]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rdx+rax*2+0x1], 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceee1
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceee1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceed3
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3ae0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+rbx*2], 0x8
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceee1
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [r12+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ceec0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceed3
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3ae0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d5140
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d5140
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x9
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d43d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movzx edi, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, edi
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included cmp dil, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4415
 Exe .text
 INSTSELECTOR: instruction to be included test dil, dil
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4415
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rbp
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d4403
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, edi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4415
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4400
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rip+0xc8c9]
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xa2d0]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d4260
 Exe .text
 INSTSELECTOR: instruction to be included movzx edi, al
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, edi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4415
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4400
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rip+0xc8c9]
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xa2d0]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d4260
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdi
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included movsx r10d, byte ptr [rsi]
 Exe .text
 INSTSELECTOR: instruction to be included xor r11d, r11d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r8+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, r10d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d42d9
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r9
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d44e0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [r13+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d458a
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x80
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d44c8
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x80
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d44c8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d456b
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccd40
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3900
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [r12+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ceec0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, r10d
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d42a9
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42d0
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ecx, r11d
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, r8
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [r8]
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4278
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included movsx ecx, byte ptr [rsi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4290
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42d0
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ecx, r11d
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, r8
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [r8]
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4278
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r9
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r8+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, r10d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d42d9
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included movsx ecx, byte ptr [rsi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4290
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included movsx ecx, byte ptr [rsi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4290
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42d0
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ecx, r11d
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, r8
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [r8]
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4278
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r9
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, qword ptr [r13+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included test r15, r15
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4489
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x40
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4528
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x18
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d454a
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3660
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x1]
 Exe .text
 instcount: branch/ret inst: call r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x16435]
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, 0x270f
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included xor r12d, r12d
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rax+0x5]
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c7db0
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7d8f
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7d80
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7d80
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7dcf
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7da1
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x25
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7e08
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, al
 Exe .text
 INSTSELECTOR: instruction to be included add r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7d8f
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7d80
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7d80
 Exe .text
 INSTSELECTOR: instruction to be included lea r14d, ptr [r12+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rbx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7d93
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1624f]
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7e40
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: js 0x5595df5c7e30
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7da1
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x25
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7e08
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, al
 Exe .text
 INSTSELECTOR: instruction to be included add r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7d8f
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1624f]
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7e40
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: js 0x5595df5c7e30
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x0
 Exe .text
 INSTSELECTOR: instruction to be included cmovz r14d, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r14d
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c6f00
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jns 0x5595df5c7ddf
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c7dec
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r14d
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c6f00
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x17a95], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x17366]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [r12+0xf8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r12]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, r12
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6f58
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c6f7a
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12, r13
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6f28
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x17a1e], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6f96
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x17a26]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6fa1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r12]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, r12
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6f58
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c6f7a
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [r13+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x18
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4493
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r13+0x10]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35c0
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0xfffffec7
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included and edx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included or r12d, ebx
 Exe .text
 INSTSELECTOR: instruction to be included or eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d455c
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, 0x118
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4517
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceee1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceed3
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3ae0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cde10
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0xa
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cdd50
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, esi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35f0
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r12d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c36b0
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rbx], 0x22
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cddec
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rsp]
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, r12d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cdda8
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cddec
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3ae0
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rbx
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cddbc
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rsi+rcx*2+0x1], 0x20
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cddb8
 Exe .text
 INSTSELECTOR: instruction to be included test cl, cl
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cddec
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cddf4
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, 0x7fffffff
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5cde2c
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmovz eax, edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3a80
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x13a8]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1b
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x9084]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rcx, eax
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d24b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xd8
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d2505
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d2390
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d2390
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rcx
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xc607], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, 0xffffffffffffffff
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3950
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0xc5ef], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d23c5
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0xc5f7]
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d23d0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included xor rcx, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d255b
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xd8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x9069]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d43d0
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x11ac]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d47d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movzx r8d, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, r8d
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included cmp r8b, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d480f
 Exe .text
 INSTSELECTOR: instruction to be included test r8b, r8b
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d480f
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rdi
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d47fc
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, r8d
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d480f
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d47f8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x9ee8]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d4260
 Exe .text
 INSTSELECTOR: instruction to be included movzx r8d, al
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, r8d
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d480f
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d47f8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x9ee8]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d4260
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x9ee8]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d4260
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d42b5
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d42c4
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, r8
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [r8]
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4278
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r9
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4861
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+0x8], 0x20
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4870
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3d
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3660
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d51d5
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x2f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d5200
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c4bf0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c38e0
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d51d5
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x90]
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x14eb]
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c38e0
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d51d5
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x90]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp], rax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d51d5
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x98]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp+0x8], rax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d51d5
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d51d7
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c4bf0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rip+0x19410]
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c4cc8
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x19d91], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x193f2]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x1c09b]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rbx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4c3b
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r13
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4c34
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, r12
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4ca0
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4ca0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccda0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3ab0
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ccdb7
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r13
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4c62
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, rbx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4c62
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35c0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x19d38], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c4c7c
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x19d40]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c4ce8
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x116df]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d45d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cee80
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3660
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rax
 Exe .text
 INSTSELECTOR: instruction to be included sub r15, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d46be
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d46be
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4690
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3700
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xa37d], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [r14+r15*1+0x2]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccd40
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r15
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c39d0
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d465d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c39d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or bh, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, ebx
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d43d0
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x18
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d454a
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0xfffffec7
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included and edx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included or r12d, ebx
 Exe .text
 INSTSELECTOR: instruction to be included or eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d455c
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, 0x118
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4517
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0xa334], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4680
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0xa33c]
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d46a0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x128]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d5250
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x138
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccf00
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x11145]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x11126]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x1112f]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdx, rcx
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x13b95]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included setz dl
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rcx
 Exe .text
 INSTSELECTOR: instruction to be included setnz dil
 Exe .text
 INSTSELECTOR: instruction to be included and rdi, rdx
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5ccdd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rdi+0x7]
 Exe .text
 INSTSELECTOR: instruction to be included and rbx, 0xfffffffffffffff8
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1124f]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbx
 Exe .text
 instcount: branch/ret inst: jnb 0x5595df5cce63
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, 0x1f8
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, 0x1f8
 Exe .text
 INSTSELECTOR: instruction to be included cmovnb rbp, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x8
 Exe .text
 instcount: branch/ret inst: jb 0x5595df5cce97
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x11b96], 0x1
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3900
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rip+0x111de]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [r8+rbx*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rsp+0x4]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ce4c0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsi]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ce4e1
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x2d
 Exe .text
 INSTSELECTOR: instruction to be included setz r13b
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x127f8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsi+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmovnle rsi, rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+0x12]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbp
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce500
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ce140
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbp
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce500
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ce140
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x28
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ce161
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x12b90]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rip+0x8c29]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rcx, rcx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ce213
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx esi, byte ptr [rcx]
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x2d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ce359
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x2b
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce497
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rcx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included movsx esi, dl
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ce40b
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rsp+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rcx+0x2]
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x63
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce1e7
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5ce213
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0xc]
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x28
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rip+0x127d4]
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0x127fd]
 Exe .text
 INSTSELECTOR: instruction to be included or r13d, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [r12], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ce660
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x127a3], 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ce600
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x12797], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce560
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x126df], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce546
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3630
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x12797], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce560
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rip+0x1278d]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbx], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce568
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce560
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbx], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce568
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce560
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r12]
 Exe .text
 INSTSELECTOR: instruction to be included test r14, r14
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ce640
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1269f], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce5a7
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ca690
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x14306], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3a20
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: js 0x5595df5ca708
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x9
 Exe .text
 instcount: branch/ret inst: jle 0x5595df5ca768
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ca730
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d14d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, esi
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3680
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jns 0x5595df5d1540
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xf5b0]
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14d, 0x9
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d152a
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r13d
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c37b0
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r13d
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c37b0
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d1516
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r12d
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3680
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca6c3
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5ca730
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x1395e]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbx+0x20], 0x0
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca748
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x142bd], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ca6fb
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x142c5]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ca780
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r12]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5ce598
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rdx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, 0xffffffff00000001
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ce5e6
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x12746]
 Exe .text
 INSTSELECTOR: instruction to be included add eax, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [r12], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce5d0
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ce040
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [r12], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ce5d0
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ce040
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movsx edi, byte ptr [rip+0x12ca0]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d13b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0xcc9e], edi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d13c6
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d13d0
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3790
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0xf99d]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, edi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1400
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3aa0
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3920
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, dword ptr [rip+0xf96d]
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1418
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0xf969]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d13e3
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included movsx edi, byte ptr [rip+0x12c88]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d2050
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add edi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0xc423], edi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d2090
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x2
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1cd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, edi
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdx
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xa0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xc7dd]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+rdx*8]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1df0
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included setz bl
 Exe .text
 INSTSELECTOR: instruction to be included add ebx, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x11
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0xf08f]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1db0
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1d84
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xecc2]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1e12
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0x16
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5d1e12
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x5312]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rcx+rdx*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rcx
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0xee98], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, ebp
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1d26
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0xeecd], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1d26
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0xee7e], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, ebp
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d1d26
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0xf08f]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1db0
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1d84
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsp
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1d84
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3640
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1d84
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1d49
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0xef0e], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1d84
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1e20
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x8]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3890
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip-0x1f7]
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d1d5e
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x8]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3890
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3640
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x98]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1e89
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xa0
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x3
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1cd0
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0xee67], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included sbb ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0xfffffffe
 Exe .text
 INSTSELECTOR: instruction to be included add ebx, 0x3
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d1d26
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0xf
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d1cd0
 Exe .text
 INSTSELECTOR: instruction to be included movsx edi, byte ptr [rip+0x12c7d]
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cb920
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x1517e], edi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cba40
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rip+0x1517d]
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cb9ab
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, edi
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cb9b8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r13d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c3c87
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1d148], 0x0
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c3bbf
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x12e5b]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d47d0
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccf50
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x11a49], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x110ea]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rbx]
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ccf8b
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35c0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x10]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rdx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x119f6], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ccfbe
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x119fe]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ccfc0
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x1d158]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c3c78
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c60f0
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cc9b0
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, edi
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 Exe .text
 INSTSELECTOR: instruction to be included and r14d, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x14360]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x38
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r13d
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rsp+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x1
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccf00
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1409a]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ccae0
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x142c6], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cca24
 Exe .text
 INSTSELECTOR: instruction to be included test r14b, r14b
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cca88
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1330
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1380
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cf440
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x7c63]
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included xor r12d, r12d
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cf1e0
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, dword ptr [rip+0x11b4a]
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included and ebp, 0x4
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x11b32]
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf278
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cf020
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11d1a]
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf0f0
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x7f0a]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cefe0
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5ceff7
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ca3b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13c6d]
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdx+0x70]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ca3f0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdx+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x1
 Exe .text
 Exe .text
 instcount: branch/ret inst: js 0x5595df5ca400
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x1]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rdx+0x68]
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rax]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rdx+0x28]
 Exe .text
 INSTSELECTOR: instruction to be included test rcx, rcx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ca608
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff9d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca5f8
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rdx+0x20], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca5f8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d26f0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0xb9a5]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d26b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included sub rdx, rsi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d26e0
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rdi+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 instcount: branch/ret inst: js 0x5595df5d26db
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d2620
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13bf7]
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, dword ptr [rdx+0x14]
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 Exe .text
 instcount: branch/ret inst: jle 0x5595df5ca4f8
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rdx+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included sub r12, 0x1
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5ca464
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rdx+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xc126]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rdx+0xc]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x2000
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3800
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jns 0x5595df5ca5cc
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1657f]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13af0]
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca510
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rdx+0xc]
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ca5db
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13a55]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ca43c
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, 0xffffff9dffffff9d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0xffffff7e
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5ca4c5
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rdx+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included sub r12, 0x1
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5ca464
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included sub ebp, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ca450
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c39e0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xa
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca4d8
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rsi
 Exe .text
 INSTSELECTOR: instruction to be included sub r12, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca480
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included sub ebp, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ca450
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13b49]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rsi
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, qword ptr [rdx+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x1
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5ca496
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebp, byte ptr [rbx]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x16842], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ca5b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13b72]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x1]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rdx+0x68]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x5c
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cefe8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3b
 Exe .text
 instcount: branch/ret inst: jnle 0x5595df5cf088
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x8
 Exe .text
 instcount: branch/ret inst: jle 0x5595df5cf0b8
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rax-0x9]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x32
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5cf0db
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rbx+rax*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbx
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ca3b0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff7e
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf060
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ca1f0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xa
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf071
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ca3b0
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ca1f0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x13e2d]
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rax+0x70], 0x1
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cefe0
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cdqe 
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdx+rax*4+0x68]
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3b
 Exe .text
 instcount: branch/ret inst: jle 0x5595df5cf042
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x7c
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf0db
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cefe0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x8
 Exe .text
 instcount: branch/ret inst: jle 0x5595df5cf0b8
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rax-0x9]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x32
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5cf0db
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rbx+rax*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbx
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xeefe]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rax+0x8], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11c06]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x1
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf290
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12d, 0xc
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf31d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11b26]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf31d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x118ca], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf571
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf47d
 Exe .text
 INSTSELECTOR: instruction to be included test bpl, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf576
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d09e0
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x10367]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d0ab0
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0x7396]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d0a63
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, r12
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ccaa0
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x142ab], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ccb00
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccf50
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x13f9b], 0x2
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c5660
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c56b8
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1f80
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1f80
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xee16]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d2040
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rip+0xc085]
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included test r14d, r14d
 Exe .text
 instcount: branch/ret inst: jns 0x5595df5d2041
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rip+0xca1f]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0xc4d1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xc50b]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d200f
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c5740
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x19307]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz r15d, eax
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cca40
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccf50
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11f86]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cca00
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0xfffffff3
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x28]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ccb4d
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x38
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r15d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccf00
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xeefe]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rax+0x8], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11c06]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x1
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x7c
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf0db
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cefe0
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x8ddc]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cf640
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x98
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x8724]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rsi, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d0008
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0xe9a6]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rbp-0x70]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x88], 0x1
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x7945]
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, r14
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5cfbee
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xe969]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, r15
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, 0x3
 Exe .text
 instcount: branch/ret inst: jbe 0x5595df5cf828
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, r13d
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax+rdx*1], 0xe
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5cf850
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rax+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, dword ptr [r12+rdx*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, r12
 Exe .text
 instcount: branch/ret inst: jmp rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x8413]
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf80c
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ca3b0
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cefe0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x5c
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cefe8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xe825]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, r15
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, 0x3
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5cf6e4
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x4
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cd0e0
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rbx+0x24]
 Exe .text
 INSTSELECTOR: instruction to be included test r14d, r14d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf888
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffff7f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf800
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x8413]
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf80c
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x82d3]
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, r15
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d079e
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x8620]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d0018
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x88], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d0901
 Exe .text
 INSTSELECTOR: instruction to be included mov r11d, dword ptr [rbx+0x24]
 Exe .text
 INSTSELECTOR: instruction to be included test r11d, r11d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d08f0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0xe018]
 Exe .text
 INSTSELECTOR: instruction to be included add r14, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included sub r14, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x88], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf8d6
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r13d
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0xfffffffd
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3c
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d007c
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ca1f0
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cf8d6
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x8c]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x78]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccdd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0xc
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x38]
 Exe .text
 INSTSELECTOR: instruction to be included xor rdi, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d08fc
 Exe .text
 INSTSELECTOR: instruction to be included lea rsp, ptr [rbp-0x28]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf2e0
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x11afb], 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf31d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x11b1a]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3fb0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf5a8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1210
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cf1e0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [rip+0x11adf]
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf212
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12d, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf212
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d09e0
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12d, 0xc
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf31d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11b26]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf31d
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf2e0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x11a79]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x10
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0xde2d]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cdf90
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included xor r14d, r14d
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdx
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r14
 Exe .text
 instcount: branch/ret inst: jbe 0x5595df5cdfdb
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rbp+r14*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 INSTSELECTOR: instruction to be included shr rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [r12+rbx*8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [r15]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3840
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: js 0x5595df5cdff0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cdfde
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r14
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5cdfb5
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rbx
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cdfb0
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r14
 Exe .text
 instcount: branch/ret inst: jbe 0x5595df5cdfdb
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rbp+r14*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 INSTSELECTOR: instruction to be included shr rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [r12+rbx*8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [r15]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3840
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r15
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf232
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0xde18]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rax
 Exe .text
 INSTSELECTOR: instruction to be included sar r12, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included add r12d, 0xd
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x11afb], 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf31d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x11b1a]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3fb0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3dc0
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c3dee
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c3de0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x1aa49]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c3e3b
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c3de0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x1aa49]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c3e3b
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c3e4b
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c3fd5
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c3fd5
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+0x18], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x0
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf31d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf1f8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ca200
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xd
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1260
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xfb05], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d0ac0
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x48
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xd543]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rax+0x8]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cf1e0
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x7
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x14
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5d1160
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x653e]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rdx+rax*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rdx
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xd50d]
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x1020e], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x30]
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rsp+0x28]
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rsp+0x20]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, dword ptr [rax+0x8]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cf1e0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xb
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1147
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xc
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1108
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x7
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1060
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccdd0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0xfc47]
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xfc23]
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [r13+0x8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1170
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rcx
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d0b58
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rdx
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cee80
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdx, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1139
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1139
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rcx
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d0b58
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rcx
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d0b58
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cf1e0
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cefe0
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3b
 Exe .text
 instcount: branch/ret inst: jnle 0x5595df5cf088
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x8
 Exe .text
 instcount: branch/ret inst: jle 0x5595df5cf0b8
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rax-0x9]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x32
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5cf0db
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x831b]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cfbb9
 Exe .text
 INSTSELECTOR: instruction to be included mov r9d, dword ptr [rbx+0x24]
 Exe .text
 INSTSELECTOR: instruction to be included test r9d, r9d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d078b
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [r15+0x1]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cefb0
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x73d0]
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, r15
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d0025
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x6657]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ced50
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0xe018]
 Exe .text
 INSTSELECTOR: instruction to be included add r14, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included sub r14, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x88], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf8d6
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r13d
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0xfffffffd
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3c
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d007c
 Exe .text
 INSTSELECTOR: instruction to be included mov r10d, dword ptr [rbp-0x8c]
 Exe .text
 INSTSELECTOR: instruction to be included test r10d, r10d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d007c
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x101ab], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccdd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x30]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x38]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1201
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x48
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cf1e0
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, r12
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x6
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d12b5
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xfae7], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cf4d5
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cf1e0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x4
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf4a0
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, 0x5
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cf4ab
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x5
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf4f0
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, 0x6
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1210
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x11839], 0x1
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cf1e0
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf5c8
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf5a0
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x18
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccdd0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rbx
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cf52c
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14d, 0x1
 Exe .text
 instcount: branch/ret inst: jnle 0x5595df5cf550
 Exe .text
 INSTSELECTOR: instruction to be included test r14d, r14d
 Exe .text
 instcount: branch/ret inst: jns 0x5595df5cf590
 Exe .text
 INSTSELECTOR: instruction to be included and ebp, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf631
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x11799], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included or ebp, 0x2
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cf55d
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cf1e0
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x117c7], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf46e
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf5f0
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d09e0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf47d
 Exe .text
 INSTSELECTOR: instruction to be included test bpl, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf576
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf5a8
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0xe
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5c5830
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x10d86]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, ecx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rsi+rdx*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rsi
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0xb79]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c5757
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1b582], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c5710
 Exe .text
 INSTSELECTOR: instruction to be included xor r12d, r12d
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included setz r12b
 Exe .text
 INSTSELECTOR: instruction to be included neg r12d
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c572a
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x98
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rdi+0x4]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x17e73]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rsp+0x40]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rcx-0x1]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub ebx, eax
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rsp+0x50]
 Exe .text
 INSTSELECTOR: instruction to be included cmovz eax, edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x70]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccf00
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d4f40
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x9a5d], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x10
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccd40
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xbee8]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x9a2f], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4f85
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x9a37]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4f90
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [r15+0x10]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x17bcb]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x172bd]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r14, r14
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c69da
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, r12
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c9e60
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, edx
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edx
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdi+0x10]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x141b9]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c9840
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xcdd0]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x108
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, esi
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x180
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x80
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and esi, 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c9897
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [r12-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x40
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [r12-0x2]
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz r12, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x2
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c98bc
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0xfffffffd
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [r13], 0x7e
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c9a1f
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x2
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c98bc
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0xfffffffd
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [r13], 0x7e
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c9a1f
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0x14b0d]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1477e]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0xcd23]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, r13
 Exe .text
 INSTSELECTOR: instruction to be included sub r14d, eax
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbx+r15*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c37f0
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rax+r15*1]
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbx+r13*1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [r13+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c9911
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff87
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c9907
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: js 0x5595df5c9911
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c9980
 Exe .text
 INSTSELECTOR: instruction to be included add r8, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3a
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c99d2
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c99f0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x14a49]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r13
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cd150
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x10edd]
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdx
 Exe .text
 INSTSELECTOR: instruction to be included sub rbx, qword ptr [rip+0x10ed9]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rsi, rax
 Exe .text
 instcount: branch/ret inst: jbe 0x5595df5cd1b0
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccfd0
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c39d0
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rsp+0x14]
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsp+0x18]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, qword ptr [rip+0x1469a]
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included setz dl
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rsp+0x2b], dl
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c99c2
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14d, eax
 Exe .text
 instcount: branch/ret inst: jl 0x5595df5c9ca0
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, eax
 Exe .text
 INSTSELECTOR: instruction to be included add r8, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3a
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c9923
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, eax
 Exe .text
 INSTSELECTOR: instruction to be included add r8, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3a
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c9923
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, r13
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [r8-0x1], 0x7e
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c9a0d
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rbx
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c994e
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c99f0
 Exe .text
 INSTSELECTOR: instruction to be included test r15b, r15b
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c9953
 Exe .text
 INSTSELECTOR: instruction to be included add r15d, 0x7f
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x7
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5c994b
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xf8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c9e5b
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x108
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1452e]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rip+0x14197]
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca0b8
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca092
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included sub rdi, qword ptr [rip+0x1417b]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x144bc]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccdd0
 Exe .text
 INSTSELECTOR: instruction to be included and ebp, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca050
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0xffffffff
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c8a00
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x48
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x15986], 0x0
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c8ca2
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xebb3]
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x156e9], 0x20
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c8c8d
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x15949]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rip+0x1823f]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsp+0x2c]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, dword ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rdi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rax+0xc]
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmovz r15, qword ptr [rsp+0x30]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14, rax
 Exe .text
 instcount: branch/ret inst: jnb 0x5595df5c8b58
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c8b83
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c8bb0
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x10
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccdd0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x38]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rcx+0x8]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x48
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x14495]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x1447f]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca072
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rip+0xc6f0]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c9f58
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x16d82], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp+0x8]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c9f34
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3930
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c9f34
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x14a2c], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x13
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c8d40
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c8d40
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, esi
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0xdeaa]
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3930
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c8eb0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included test bpl, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c8df8
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, r15
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, ebp
 Exe .text
 INSTSELECTOR: instruction to be included and esi, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c8e60
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, r15
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c8e73
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca072
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x16d82], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp+0x8]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c9f34
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3930
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x14310]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca092
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r12+0x8]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c8cc0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x156e4]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c8d0e
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x15cd0], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35c0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c64dc
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included add r13d, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c64d0
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [r14+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test r14, r14
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c64f0
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rsp+0x48]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c64b0
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c9e60
 Exe .text
 INSTSELECTOR: instruction to be included lea edi, ptr [r13+0x2]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdi, edi
 Exe .text
 INSTSELECTOR: instruction to be included shl rdi, 0x3
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccdd0
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x40]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c652c
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6518
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1a7a9], 0x0
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6561
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6518
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1a7a9], 0x0
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6561
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x17d19]
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6558
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r15+0x18]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c5580
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x28
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c5630
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsp
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c55db
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c5653
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x28
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r15+0x18]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1ba0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rip+0xf1d3]
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1bdf
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x30
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccd40
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r15+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1a60
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xf0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xcf1c]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xcf09]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3810
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1b18
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0xcf01], 0x1
 Exe .text
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1b4d
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsp+0x14]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1b00
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rsp+0xc]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x20]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1570
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xb8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d162a
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, esi
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xd3fa], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, 0x0
 Exe .text
 INSTSELECTOR: instruction to be included test sil, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz r12, qword ptr [rip+0xf7c0]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0x5b35]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x10
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x6
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5d17ad
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rbp+rax*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbp
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xa8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1a54
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xb8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x18]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsp+0x14]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1ada
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d1b00
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0xceb2]
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1ada
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c52a0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xe8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1b57
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xf0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, qword ptr [r15+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x17bf0]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r15, r15
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c65f2
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rsp+0x58]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r15
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c9e60
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1a6ee], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6830
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6620
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rsp+0x38], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c68f8
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp+0x5]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rax
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rsp+0x60]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r12]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c7330
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x2f
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xd8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3750
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c73e0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c73b8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xc8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c77f1
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x16da6]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x28]
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdi
 Exe .text
 INSTSELECTOR: instruction to be included setz cl
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c741e
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0xf07e]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3590
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c6e00
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6e3f
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rdi
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c6e2b
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6e28
 Exe .text
 INSTSELECTOR: instruction to be included and ecx, 0x7fff
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rax, 0x8421085
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included shl edx, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included sub edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x17418]
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6e8c
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c6eb8
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, al
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6e28
 Exe .text
 INSTSELECTOR: instruction to be included and ecx, 0x7fff
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rax, 0x8421085
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included shl edx, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included sub edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x17418]
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6e8c
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c6eb8
 Exe .text
 INSTSELECTOR: instruction to be included xor r12d, r12d
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6e9d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3700
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7568
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, word ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included cmp ax, 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7454
 Exe .text
 INSTSELECTOR: instruction to be included cmp ax, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ecx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7560
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c72b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x16494]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x8]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c72eb
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [r13+r14*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 Exe .text
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffffe
 Exe .text
 INSTSELECTOR: instruction to be included shr rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [r12+rax*8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cdf80
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsi]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdi]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c3840
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jns 0x5595df5c72e0
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, r14
 Exe .text
 instcount: branch/ret inst: jb 0x5595df5c72eb
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r15
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c731b
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, r14
 Exe .text
 instcount: branch/ret inst: jnb 0x5595df5c7318
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [r13+r14*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 Exe .text
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffffe
 Exe .text
 INSTSELECTOR: instruction to be included shr rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [r12+rax*8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cdf80
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r15
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7483
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c74cc
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [r14+0x10], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c753b
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x8
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c76e0
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x20
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c753b
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsp+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7680
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c738a
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x17321], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c6e00
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x18]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccd40
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [r12+0x13]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3610
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c6e9d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x2
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x172fd], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c76d0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x17305]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c76d0
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c52a0
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, word ptr [rdx+0x10]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c7660
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x8]
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c738a
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xc8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c77f1
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xd8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0x60]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c69cb
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6a6f
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x68]
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6675
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, dword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x17204]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c67d0
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, 0x60
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c66f0
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [r12+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [r12+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test rcx, rcx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c66f0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0x38]
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c67e1
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0x38]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6a52
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rax+0x18], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6724
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 Exe .text
 instcount: branch/ret inst: jnle 0x5595df5c69ec
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c69ec
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsp+0x3c]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, r13d
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c61e0
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x108
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x30]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x187be]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1878a]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3810
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c62aa
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp]
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x30]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rcx]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rcx+0x8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x175f6]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp+0x8], rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6328
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp]
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rsp+0x10]
 Exe .text
 instcount: branch/ret inst: call qword ptr [rax+0x8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x11654]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, 0x4c
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xb8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c4d6c
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cec30
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x12095]
 Exe .text
 INSTSELECTOR: instruction to be included test rsi, rsi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cec90
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rsi]
 Exe .text
 INSTSELECTOR: instruction to be included test cl, cl
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cec90
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [rsi+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdi]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cec6f
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x12061]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ceca4
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x2d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cecb0
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c4d60
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1bf79]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c50e0
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x2d
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c5000
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x2f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4e27
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x2e
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4eb8
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x1195b]
 Exe .text
 INSTSELECTOR: instruction to be included cmovz r12, rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x115cc]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d47d0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4e24
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rsp+0x10]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 INSTSELECTOR: instruction to be included movzx r15d, byte ptr [rax]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c7010
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, r12
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x19b7a], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included xor r14d, r14d
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4ef0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3710
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cdf40
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3700
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccdd0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c38a0
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp], 0x2f
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rip+0x19145]
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4f2a
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x19109]
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x1bdaa]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4e3a
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cd1d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3700
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cd150
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3700
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x2]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cd0e0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x10f44]
 Exe .text
 INSTSELECTOR: instruction to be included sub rbp, qword ptr [rip+0x10f4d]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 Exe .text
 instcount: branch/ret inst: jbe 0x5595df5cd138
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccfd0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rsi
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x19103]
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp], 0x2f
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rdx+0x1]
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c5060
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax-0x1], 0x2f
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4f63
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14, r15
 Exe .text
 instcount: branch/ret inst: jnb 0x5595df5c50f8
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdx+0x1], 0x2f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c5134
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x11411]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3a40
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c5095
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x113f9]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c4fc6
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x2e
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4fa0
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cd1d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rax+0x1]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c4fb0
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r13
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3a40
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c5090
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x2e
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4fa0
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cd1d0
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15, r14
 Exe .text
 instcount: branch/ret inst: jbe 0x5595df5c5099
 Exe .text
 INSTSELECTOR: instruction to be included sub r15, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0x18fa4]
 Exe .text
 INSTSELECTOR: instruction to be included test r14, r14
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz rbp, r14
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c4e3a
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3710
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c4e5a
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c4bf0
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r13
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x11695]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d45d0
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d465d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c39d0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c4c10
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x19d91], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x193f2]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x1c09b]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rbx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4c3b
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r13
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4c34
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35c0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x19d38], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c4c7c
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x19d40]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c4ce8
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x116df]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d45d0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x116df]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d45d0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r13+0x10]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35c0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [r13+0x8]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d4493
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c7cd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x165a5]
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0x16343]
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rcx+0xf8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rcx]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7d0e
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c7d23
 Exe .text
 INSTSELECTOR: instruction to be included add rcx, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rsi
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7cf0
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rcx]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7d0e
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c7d23
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, word ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included test dx, dx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7d00
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7d0e
 Exe .text
 INSTSELECTOR: instruction to be included add rcx, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rsi
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7cf0
 Exe .text
 INSTSELECTOR: instruction to be included cmp dx, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7d30
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7d23
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, word ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included test dx, dx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7d00
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rdx+0x10], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7d06
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 instcount: branch/ret inst: jle 0x5595df5c7d06
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c7d1b
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7d23
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, word ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included test dx, dx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7d00
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c7d0e
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x19b47], 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4ea0
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c5145
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c4fe0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x19b12]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c4e63
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c52a0
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c5145
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c4fe0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xa8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c5140
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xb8
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, eax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d26f0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x17e35]
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rax+0x24]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6300
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x17dff]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xf8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c63c5
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x108
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6941
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x181b0], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c681b
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6941
 Exe .text
 INSTSELECTOR: instruction to be included xor r14d, r14d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cc4b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc570
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi+0x1e], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cc4e3
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cac60
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1482e]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jle 0x5595df5cc58d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cac60
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [rip+0x1243c]
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x18058]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6711
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c52a0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rax+0x18], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6724
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1420
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x28]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1b60
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rip+0xf215]
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1b90
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1420
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x20]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ca870
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rip+0x137ad]
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca8a0
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ca800
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x18]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d4fa0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rip+0xbea5]
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4fd0
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d4da0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x9bfb], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0xc094]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rdi+0x8]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35c0
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4e37
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d4e9a
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x9b07], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4eb1
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x9b0f]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4f30
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0xbe8a], rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4fb8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c675d
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0xfcb5]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d45d0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x30]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccf50
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x88]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6a4d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0x38]
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x98
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c56b8
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x8ddc]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cf640
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rax+r15*1]
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbx+r13*1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [r13+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c9911
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff87
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c9907
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: js 0x5595df5c9911
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xd8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rsp+0x38], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c69d3
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rsp+0x60], 0x1
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6901
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c6977
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rsp+0x3c], 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c698c
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x1a47c]
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6a2f
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x18015], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cbfb0
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x18015], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cbfb0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x1243a]
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x12434]
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jle 0x5595df5cc07d
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rip+0x14ad0]
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rbp
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rax+rax*4+0x5]
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rbp+rax*8]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [r12+0x1f], 0x8
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc009
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [r12+0x1e]
 Exe .text
 INSTSELECTOR: instruction to be included and ax, 0x4ff
 Exe .text
 INSTSELECTOR: instruction to be included cmp ax, 0x402
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cc070
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rdx+rdx*4]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included shl r12, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [r12+0xa0]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccd70
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3980
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ccd87
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included sub rdi, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc0fc
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, r12
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc0e6
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rdx, 0x28
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+rdx*1+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included sub rsi, r12
 Exe .text
 INSTSELECTOR: instruction to be included add rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rsi
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cc0cf
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x122fb]
 Exe .text
 INSTSELECTOR: instruction to be included test rdx, rdx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc0fc
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, rax
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x122ee], 0x4
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x97], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x6f], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x47], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x1f], 0xf7
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cc009
 Exe .text
 INSTSELECTOR: instruction to be included add r12, rax
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x122ee], 0x4
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x97], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x6f], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x47], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x1f], 0xf7
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cc009
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x14a87]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc031
 Exe .text
 INSTSELECTOR: instruction to be included or byte ptr [r12+0x1f], 0x2
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x123b0]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or byte ptr [r12+0x1f], 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jle 0x5595df5cc065
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdi, ebx
 Exe .text
 INSTSELECTOR: instruction to be included shl rdi, 0x4
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccd40
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x123b0]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or byte ptr [r12+0x1f], 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jle 0x5595df5cc065
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdi, ebx
 Exe .text
 INSTSELECTOR: instruction to be included shl rdi, 0x4
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccd40
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cc130
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3ad0
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: js 0x5595df5cc48c
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc280
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc261
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc1fa
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x1f], 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc18b
 Exe .text
 INSTSELECTOR: instruction to be included cmp word ptr [rbp+0x1c], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc183
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cc1fa
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x12251]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x12243]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc1c0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cc1b0
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: js 0x5595df5cc48c
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc280
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc261
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rbp+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included shl rax, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included add rax, qword ptr [rbp+0x10]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x14a9f]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1487d]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc238
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
  Exe .text
Exe .text
  instcount: branch/ret inst: jnz 0x5595df5cc390
INSTSELECTOR: instruction to be included mov r13d, dword ptr [rip+0x14831]
 Exe .text
  Exe .text
INSTSELECTOR: instruction to be included add rsp, 0x8
  INSTSELECTOR: instruction to be included lea eax, ptr [r13+0x1]
Exe .text
  Exe .text
INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
  Exe .text
instcount: branch/ret inst: call 0x5595df5ca8e0
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x14134]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x13735], rbx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ca906
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ca800
 Exe .text
  INSTSELECTOR: instruction to be included add rsp, 0x8
Exe .text
  Exe .text
INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0x14120]
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 Exe .text
  INSTSELECTOR: instruction to be included test edi, edi
INSTSELECTOR: instruction to be included pop rbx
  Exe .text
Exe .text
  instcount: branch/ret inst: jnle 0x5595df5ca918
INSTSELECTOR: instruction to be included pop rbp
 Exe .text
  Exe .text
INSTSELECTOR: instruction to be included pop rbx
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
  Exe .text
instcount: branch/ret inst: ret 
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
  Exe .text
Exe .text
  INSTSELECTOR: instruction to be included test eax, eax
instcount: branch/ret inst: call 0x5595df5c37b0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6a1b
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c6944
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cc4b0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x13704]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x168
 Exe .text
 Exe .text
  Exe .text
INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 instcount: branch/ret inst: call 0x5595df5d1e90
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x13d15], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x15e0f]
 Exe .text
 INSTSELECTOR: instruction to be included xor r14d, r14d
 Exe .text
 INSTSELECTOR: instruction to be included cmp edi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included setnz r14b
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cacab
  Exe .text
Exe .text
  Exe .text
INSTSELECTOR: instruction to be included or r14d, 0x2
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 Exe .text
  INSTSELECTOR: instruction to be included lea r15, ptr [rsp+0x1c]
INSTSELECTOR: instruction to be included push r12
  Exe .text
Exe .text
  INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x20]
INSTSELECTOR: instruction to be included push rbp
  Exe .text
Exe .text
  Exe .text
INSTSELECTOR: instruction to be included push rbx
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 Exe .text
  INSTSELECTOR: instruction to be included sub rsp, 0x8
INSTSELECTOR: instruction to be included mov esi, r14d
  Exe .text
Exe .text
  INSTSELECTOR: instruction to be included add dword ptr [rip+0xcb03], 0x1
INSTSELECTOR: instruction to be included mov rdi, r15
  Exe .text
Exe .text
  INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xc634]
Exe .text
  Exe .text
instcount: branch/ret inst: call 0x5595df5c36d0
 INSTSELECTOR: instruction to be included mov rbx, r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [r12+0x208]
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d1ec8
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1ec0
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1ec0
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35c0
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rsp+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, r14d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r15
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c36d0
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r13
 Exe .text
 instcount: branch/ret inst: jnb 0x5595df5d1f00
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1ec0
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1ec0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0xca97], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1f1d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xca9f]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d1f28
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc340
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x1f], 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc300
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cc410
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cc340
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x2
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d1f40
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cc34e
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x14997], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cc3c8
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x12093]
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc371
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cb1e0
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x137b4], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rdi+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included test ax, ax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cb23b
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rax-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x15ab4]
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included shl r12, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included add r12, rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r13
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cb22e
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35c0
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cb248
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35c0
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [rbx+0x1f], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x13195]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x1318e]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cb270
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cb260
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x1372a], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cb28a
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x1372a], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cb28a
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x13732]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cb298
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbp+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cc360
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c6a1b
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c6944
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x17f8d]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5c6a8f
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x50]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x11
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d4760
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d47c0
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, esi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xa22d], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, ebp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d43d0
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsp+0x68]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c71a0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x10
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x20
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d48b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included or esi, edi
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rip+0x9e61]
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, esi
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [r15+0x138]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdx
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x9766]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x9757]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [r15]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4908
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d4933
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included and edx, r14d
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, r13d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4900
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rcx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4970
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x9712]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4908
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15, r12
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d48f0
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4977
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d494a
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [r15]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4908
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d4933
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4933
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included and edx, r14d
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, r13d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4900
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rcx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4970
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x9712]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d4908
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15, r12
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d48f0
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d4977
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cd0c0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x10f6c]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccfd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x1105a]
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rbp+rbp*1]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rbx
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5cd0b1
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rbx+0x80]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, 0x80
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x13abe]
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rip+0x1103f]
 Exe .text
 INSTSELECTOR: instruction to be included cmovb rbx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1103c]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cd022
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cd050
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x5595df5ccdd0
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cce97
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x1122d]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, rdx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x11b58], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cce5c
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11b60]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cce90
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x111d5]
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rip+0x111de]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [r8+rbx*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c38a0
 Exe .text
 INSTSELECTOR: instruction to be included add qword ptr [rip+0x10ff9], rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x10f70]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5d4918
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included sub rdi, qword ptr [rip+0x96ec]
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5ccdd0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x2f
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3750
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5c7245
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c6cd0
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdx
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xf799]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xa8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r13
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r15
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3820
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp edi, 0x11
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1c80
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rdi-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0xc85d]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cdqe 
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp edi, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1c58
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0xc8e0], 0x0
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d1cb0
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included setnz bl
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 Exe .text
 INSTSELECTOR: instruction to be included or bl, al
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cada0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rsp+0xa0]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3890
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, r12d
 Exe .text
 instcount: branch/ret inst: jle 0x5595df5caf27
 Exe .text
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rip+0x13638]
 Exe .text
 INSTSELECTOR: instruction to be included mov r8d, dword ptr [rsp+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r10
 Exe .text
 INSTSELECTOR: instruction to be included test r10, r10
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cae4d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi+0x1e], 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cae40
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, word ptr [rdi+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included xor r9d, r9d
 Exe .text
 INSTSELECTOR: instruction to be included shl rcx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included add rcx, rax
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cae12
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rax], r12d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cadf0
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r8d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cadf8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x10
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 Exe .text
 instcount: branch/ret inst: jnbe 0x5595df5cae12
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cae30
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, 0x7f
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cae09
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x10
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 Exe .text
 instcount: branch/ret inst: jbe 0x5595df5cae3b
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x10
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 Exe .text
 instcount: branch/ret inst: jbe 0x5595df5cae3b
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rax], r12d
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cadf0
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r8d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cadf8
 Exe .text
 INSTSELECTOR: instruction to be included test r9, r9
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cae65
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdi+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cadc8
 Exe .text
 INSTSELECTOR: instruction to be included cmp r8b, 0x7f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5caf27
 Exe .text
 INSTSELECTOR: instruction to be included cmp r9, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included setz bl
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cad4e
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [r9+0x1e]
 Exe .text
 INSTSELECTOR: instruction to be included or byte ptr [r9+0x1f], 0x10
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, esi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cad4e
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cad4e
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x13c53], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cad65
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x13c5b]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5caf1d
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5caed0
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5caed0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x158]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5caf2e
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x168
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x120]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rsp+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cab60
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, bh
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x7f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cabc0
 Exe .text
 INSTSELECTOR: instruction to be included cmp sil, 0x7f
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cabe8
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cab91
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cabb2
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cac00
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0xbac8]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x10
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d24b0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cad6d
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x131cd]
 Exe .text
 INSTSELECTOR: instruction to be included add eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included cdqe 
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d27d0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x158]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5caf2e
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x168
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp+0x1e], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc4d0
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rbp+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included shl rax, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included add rax, qword ptr [rbp+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rax-0xc]
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, ah
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ecx
 Exe .text
 INSTSELECTOR: instruction to be included and edx, 0x7f
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cc520
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x1f], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cc53a
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp+0x1e], 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc5a0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cb1e0
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x137b4], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rdi+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included test ax, ax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cb23b
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rax-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x15ab4]
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included shl r12, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included add r12, rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r13
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cb22e
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35c0
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x10
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r12
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cb220
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbx+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cb248
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c35c0
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [rbx+0x1f], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x13195]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x1318e]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rax
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cb270
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cb260
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x1372a], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cb28a
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x1372a], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cb28a
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x13732]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cb298
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rdx+0x68]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff7e
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cf0d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cf5f0
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d09e0
 Exe .text
 INSTSELECTOR: instruction to be included and ebp, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x11736]
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz r12, rax
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5cf576
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rsp+0xf], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cca5b
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x31
 Exe .text
 instcount: branch/ret inst: jnle 0x5595df5cca5b
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cc7c0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x142da]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5cc7e8
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x11c13]
 Exe .text
 INSTSELECTOR: instruction to be included test rdx, rdx
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc7e0
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdx+0x1e], 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cc7f0
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ccad1
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x14226], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5ccb2a
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x11603]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x9f02]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d27d0
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x141b2], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5cca5b
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x1158a]
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0xa
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d2800
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x28]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5ccb4d
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x38
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r15d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: jmp 0x5595df5c3bff
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d20a0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rax
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xd8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xc90a]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rsp
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3810
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d210e
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0xc3fd]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x5595df5d210e
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c60f0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rsp
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3810
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x5595df5d2125
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 instcount: branch/ret inst: call 0x5595df5cb920
 Exe .text
 instcount: branch/ret inst: call 0x5595df5d26f0
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0xbef0]
 Exe .text
 instcount: branch/ret inst: call 0x5595df5c3600
