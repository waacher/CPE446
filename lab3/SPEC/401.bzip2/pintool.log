Pin: pin-3.11-97998-7ecce2dac
Copyright 2002-2019 Intel Corporation.
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146825]
 Invalid RTN lea rax, ptr [rip+0x1b69e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fa0e988f6a0
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fa0e988f6a8
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fa0e988f680
 Invalid RTN test byte ptr [rdx+0x71], 0x2
 Invalid RTN jz 0x7fa0e988f6d0
 Invalid RTN test cl, 0x20
 Invalid RTN jnz 0x7fa0e988f6d0
 Invalid RTN and ecx, 0x8
 Invalid RTN lea rax, ptr [rip+0xc869b]
 Invalid RTN lea rdx, ptr [rip+0xcdd34]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147525]
 Invalid RTN lea rax, ptr [rip+0xeab1e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e988e988
 Invalid RTN lea rax, ptr [rip+0x17967]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fa0e988e988
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x9723]
 Invalid RTN lea rdx, ptr [rip+0xd73ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1464f5]
 Invalid RTN lea rax, ptr [rip+0xe4bee]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7fa0e988f9ab
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7fa0e988f996
 Invalid RTN lea rax, ptr [rip+0xdf7d3]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7fa0e988f9ab
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xc3d0]
 Invalid RTN lea rdx, ptr [rip+0xd0549]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147c05]
 Invalid RTN lea rax, ptr [rip+0xe9dee]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e988e2a8
 Invalid RTN lea rax, ptr [rip+0x1aa67]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fa0e988e2a8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x1a893]
 Invalid RTN lea rdx, ptr [rip+0x12e7c]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1474c5]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe9000]
 Invalid RTN lea rax, ptr [rip+0x12099]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN sub rsp, 0x28
 Invalid RTN mov edx, 0x5f
 Invalid RTN mov eax, 0x50e3a8
 Invalid RTN lea rcx, ptr [rip+0xe1ed4]
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7fa0e98bffb9
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7fa0e98c002d
 Invalid RTN lea rax, ptr [rip+0xe1e99]
 Invalid RTN mov rsi, rsp
 Invalid RTN lea rdi, ptr [rip+0xe393d]
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN call 0x7fa0e994fe10
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7fa0e98bffb9
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7fa0e98c002d
 Invalid RTN lea rax, ptr [rip+0xe1e99]
 Invalid RTN mov rsi, rsp
 Invalid RTN lea rdi, ptr [rip+0xe393d]
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN call 0x7fa0e994fe10
 Invalid RTN nop edx, edi
 Invalid RTN sub rsp, 0x38
 Invalid RTN mov r10, qword ptr [rip+0x86041]
 Invalid RTN mov rax, qword ptr fs:[0x28]
 Invalid RTN mov qword ptr [rsp+0x28], rax
 Invalid RTN xor eax, eax
 Invalid RTN mov rax, qword ptr [r10+0x198]
 Invalid RTN test rax, rax
 Invalid RTN jz 0x7fa0e994fea1
 Invalid RTN lea rdx, ptr [rsp+0x10]
 Invalid RTN pxor xmm0, xmm0
 Invalid RTN mov r8, rsi
 Invalid RTN xor r9d, r9d
 Invalid RTN mov qword ptr [rsp+0x8], rdx
 Invalid RTN mov rsi, rax
 Invalid RTN lea rdx, ptr [rsp+0x8]
 Invalid RTN lea rcx, ptr [rax+0x390]
 Invalid RTN movaps xmmword ptr [rsp+0x10], xmm0
 Invalid RTN mov qword ptr [rsp+0x20], 0x0
 Invalid RTN mov byte ptr [rsp+0x14], 0x20
 Invalid RTN push 0x0
 Invalid RTN push 0x0
 Invalid RTN call qword ptr [r10+0x1b8]
 Invalid RTN mov rdx, rax
 Invalid RTN mov rax, qword ptr [rsp+0x18]
 Invalid RTN pop rcx
 Invalid RTN pop rsi
 Invalid RTN test rax, rax
 Invalid RTN jz 0x7fa0e994fea1
 Invalid RTN cmp word ptr [rax+0x6], 0xfff1
 Invalid RTN jz 0x7fa0e994fec0
 Invalid RTN test rdx, rdx
 Invalid RTN jz 0x7fa0e994fec0
 Invalid RTN mov rdx, qword ptr [rdx]
 Invalid RTN add rdx, qword ptr [rax+0x8]
 Invalid RTN mov rax, rdx
 Invalid RTN mov rcx, qword ptr [rsp+0x28]
 Invalid RTN xor rcx, qword ptr fs:[0x28]
 Invalid RTN jnz 0x7fa0e994fec4
 Invalid RTN add rsp, 0x38
 Invalid RTN ret 
 Invalid RTN lea rdx, ptr [rip-0x91]
 Invalid RTN test rax, rax
 Invalid RTN cmovz rax, rdx
 Invalid RTN add rsp, 0x28
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x145055]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe2e90]
 Invalid RTN lea rax, ptr [rip+0xa559]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x129fc5]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xcf5e0]
 Invalid RTN lea rax, ptr [rip+0x113a9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x12a485]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xcfd70]
 Invalid RTN lea rax, ptr [rip+0x11b99]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1466c5]
 Invalid RTN lea rax, ptr [rip+0x1b50e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fa0e988f800
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fa0e988f808
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fa0e988f7e0
 Invalid RTN test byte ptr [rdx+0x71], 0x2
 Invalid RTN jz 0x7fa0e988f830
 Invalid RTN test cl, 0x20
 Invalid RTN jnz 0x7fa0e988f830
 Invalid RTN and ecx, 0x8
 Invalid RTN lea rax, ptr [rip+0xc5b3b]
 Invalid RTN lea rdx, ptr [rip+0xcb0c4]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146895]
 Invalid RTN mov rax, 0x80000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN cmp rax, 0x2
 Invalid RTN jz 0x7fa0e988f610
 Invalid RTN lea rax, ptr [rip+0xed424]
 Invalid RTN test ecx, 0x80000
 Invalid RTN jnz 0x7fa0e988f609
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xc372]
 Invalid RTN lea rdx, ptr [rip+0xf0d2b]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147595]
 Invalid RTN lea rax, ptr [rip+0xe4bfe]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e988e922
 Invalid RTN mov edx, dword ptr [rcx+0x70]
 Invalid RTN test edx, 0x100000
 Invalid RTN jz 0x7fa0e988e90d
 Invalid RTN lea rax, ptr [rip+0xdf87c]
 Invalid RTN test byte ptr [rcx+0xcc], 0x80
 Invalid RTN jz 0x7fa0e988e922
 Invalid RTN and dh, 0x2
 Invalid RTN lea rax, ptr [rip+0xaee9]
 Invalid RTN lea rdx, ptr [rip+0xc5292]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147b55]
 Invalid RTN lea rax, ptr [rip+0xe4d7e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e988e358
 Invalid RTN lea rax, ptr [rip+0xb217]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fa0e988e358
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x9db3]
 Invalid RTN lea rdx, ptr [rip+0xc45ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146765]
 Invalid RTN lea rax, ptr [rip+0x1b9ee]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x10
 Invalid RTN jnz 0x7fa0e988f764
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fa0e988f768
 Invalid RTN mov eax, dword ptr [rdx+0x7c]
 Invalid RTN and eax, 0x200
 Invalid RTN test byte ptr [rdx+0xc8], 0x2
 Invalid RTN jz 0x7fa0e988f750
 Invalid RTN test eax, eax
 Invalid RTN lea rdx, ptr [rip+0x1b9c7]
 Invalid RTN lea rax, ptr [rip+0x1b940]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x12a4c5]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xd0720]
 Invalid RTN lea rax, ptr [rip+0x129e9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x147635]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe94e0]
 Invalid RTN lea rax, ptr [rip+0x126a9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x147a75]
 Invalid RTN lea rdx, ptr [rip+0xe48ee]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1c633]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1464a5]
 Invalid RTN lea rax, ptr [rip+0xe621e]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7fa0e988f9fb
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7fa0e988f9e6
 Invalid RTN lea rax, ptr [rip+0xe1333]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7fa0e988f9fb
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xe5d0]
 Invalid RTN lea rdx, ptr [rip+0xd2659]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147ad5]
 Invalid RTN lea rax, ptr [rip+0xead3e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e988e3d8
 Invalid RTN lea rax, ptr [rip+0x178e7]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fa0e988e3d8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x176f3]
 Invalid RTN lea rdx, ptr [rip+0xd61ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146355]
 Invalid RTN lea rax, ptr [rip+0x1b1ce]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fa0e988fb70
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fa0e988fb78
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fa0e988fb50
 Invalid RTN test byte ptr [rdx+0x71], 0x2
 Invalid RTN jz 0x7fa0e988fba0
 Invalid RTN test cl, 0x20
 Invalid RTN jnz 0x7fa0e988fba0
 Invalid RTN and ecx, 0x8
 Invalid RTN lea rax, ptr [rip+0xc57eb]
 Invalid RTN lea rdx, ptr [rip+0xcad74]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x128d55]
 Invalid RTN lea rax, ptr [rip+0xcf5ae]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e98ad148
 Invalid RTN test byte ptr [rcx+0x72], 0x8
 Invalid RTN lea rax, ptr [rip+0x11943]
 Invalid RTN lea rdx, ptr [rip+0x1171c]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x129ef5]
 Invalid RTN lea r8, ptr [rip-0xf02]
 Invalid RTN mov rcx, 0x10000000002
 Invalid RTN mov rdx, qword ptr [rax+0xc8]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, rdx
 Invalid RTN cmp rax, rcx
 Invalid RTN jnz 0x7fa0e98abfb8
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN lea r8, ptr [rip+0xd3e6a]
 Invalid RTN and rdx, rax
 Invalid RTN lea rax, ptr [rip+0xcefe0]
 Invalid RTN cmp rdx, 0x4
 Invalid RTN cmovnz r8, rax
 Invalid RTN mov rax, r8
 Invalid RTN ret 
 Invalid RTN mov rax, r8
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x12a445]
 Invalid RTN lea rdx, ptr [rip+0xc132e]
 Invalid RTN test byte ptr [rax+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x12953]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x147485]
 Invalid RTN lea rdx, ptr [rip+0xe443e]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1c0f3]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147ba5]
 Invalid RTN lea rax, ptr [rip+0xe92de]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e988e2fb
 Invalid RTN test byte ptr [rcx+0xcc], 0x40
 Invalid RTN lea rax, ptr [rip+0x12330]
 Invalid RTN lea rdx, ptr [rip+0xf1d19]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x147675]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe9380]
 Invalid RTN lea rax, ptr [rip+0x12549]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x13e105]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xdc090]
 Invalid RTN lea rax, ptr [rip+0x3819]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146455]
 Invalid RTN lea rax, ptr [rip+0xe4b62]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7fa0e988fa4b
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7fa0e988fa36
 Invalid RTN lea rax, ptr [rip+0xdf747]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7fa0e988fa4b
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xc350]
 Invalid RTN lea rdx, ptr [rip+0xd04c9]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1468d5]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe4440]
 Invalid RTN lea rax, ptr [rip+0xbaa9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x12a375]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xd09f0]
 Invalid RTN lea rax, ptr [rip+0x12fa9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x1471c5]
 Invalid RTN lea rdx, ptr [rip+0xe42be]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1bee3]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x146555]
 Invalid RTN lea rax, ptr [rip+0xea85e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e988f958
 Invalid RTN lea rax, ptr [rip+0x18067]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fa0e988f958
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x86e3]
 Invalid RTN lea rdx, ptr [rip+0xda7ac]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x1465b5]
 Invalid RTN lea rax, ptr [rip+0xea50e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e988f8f8
 Invalid RTN lea rax, ptr [rip+0x17a07]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fa0e988f8f8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x162c3]
 Invalid RTN lea rdx, ptr [rip+0xd8ffc]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x129f85]
 Invalid RTN mov rax, 0x80000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN cmp rax, 0x2
 Invalid RTN jz 0x7fa0e98abf20
 Invalid RTN lea rax, ptr [rip+0xd2154]
 Invalid RTN test ecx, 0x80000
 Invalid RTN jnz 0x7fa0e98abf19
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0x112e2]
 Invalid RTN lea rdx, ptr [rip+0xd5b8b]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x145015]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe6960]
 Invalid RTN lea rax, ptr [rip+0xf9d9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146405]
 Invalid RTN lea rax, ptr [rip+0xe6192]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7fa0e988fa9b
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7fa0e988fa86
 Invalid RTN lea rax, ptr [rip+0xe12a7]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7fa0e988fa9b
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xe550]
 Invalid RTN lea rdx, ptr [rip+0xd25d9]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN sub rsp, 0x28
 Invalid RTN mov edx, 0x5f
 Invalid RTN mov eax, 0x50e3a8
 Invalid RTN lea rcx, ptr [rip+0xe1df4]
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7fa0e98c0099
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7fa0e98c010d
 Invalid RTN lea rax, ptr [rip+0xe1db9]
 Invalid RTN mov rsi, rsp
 Invalid RTN lea rdi, ptr [rip+0xe3869]
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN call 0x7fa0e994fe10
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7fa0e98c0099
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7fa0e98c010d
 Invalid RTN lea rax, ptr [rip+0xe1db9]
 Invalid RTN mov rsi, rsp
 Invalid RTN lea rdi, ptr [rip+0xe3869]
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN call 0x7fa0e994fe10
 Invalid RTN lea rdx, ptr [rip-0xb1]
 Invalid RTN test rax, rax
 Invalid RTN cmovz rax, rdx
 Invalid RTN add rsp, 0x28
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146825]
 Invalid RTN lea rax, ptr [rip+0x1b69e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fa0e988f6a0
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fa0e988f6a8
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fa0e988f680
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x1469b5]
 Invalid RTN lea rdx, ptr [rip-0x362]
 Invalid RTN test byte ptr [rax+0xcc], 0x10
 Invalid RTN lea rax, ptr [rip+0x1b0d0]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1464f5]
 Invalid RTN lea rax, ptr [rip+0xe4bee]
 Invalid RTN test byte ptr [rdx+0xc8], 0x1
 Invalid RTN jnz 0x7fa0e988f9ab
 Invalid RTN mov ecx, dword ptr [rdx+0x70]
 Invalid RTN test ecx, 0x100000
 Invalid RTN jz 0x7fa0e988f996
 Invalid RTN lea rax, ptr [rip+0xdf7d3]
 Invalid RTN test byte ptr [rdx+0xcc], 0x80
 Invalid RTN jz 0x7fa0e988f9ab
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147ad5]
 Invalid RTN lea rax, ptr [rip+0xead3e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e988e3d8
 Invalid RTN lea rax, ptr [rip+0x178e7]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fa0e988e3d8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x176f3]
 Invalid RTN lea rdx, ptr [rip+0xd61ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x145015]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe6960]
 Invalid RTN lea rax, ptr [rip+0xf9d9]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x1465b5]
 Invalid RTN lea rax, ptr [rip+0xea50e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e988f8f8
 Invalid RTN lea rax, ptr [rip+0x17a07]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fa0e988f8f8
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x162c3]
 Invalid RTN lea rdx, ptr [rip+0xd8ffc]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x147675]
 Invalid RTN mov rax, 0x90000000002
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN mov rdx, 0x10000000002
 Invalid RTN cmp rax, rdx
 Invalid RTN lea rdx, ptr [rip+0xe9380]
 Invalid RTN lea rax, ptr [rip+0x12549]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147ba5]
 Invalid RTN lea rax, ptr [rip+0xe92de]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e988e2fb
 Invalid RTN test byte ptr [rcx+0xcc], 0x40
 Invalid RTN lea rax, ptr [rip+0x12330]
 Invalid RTN lea rdx, ptr [rip+0xf1d19]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146765]
 Invalid RTN lea rax, ptr [rip+0x1b9ee]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x10
 Invalid RTN jnz 0x7fa0e988f764
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fa0e988f768
 Invalid RTN mov eax, dword ptr [rdx+0x7c]
 Invalid RTN and eax, 0x200
 Invalid RTN test byte ptr [rdx+0xc8], 0x2
 Invalid RTN jz 0x7fa0e988f750
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x1471c5]
 Invalid RTN lea rdx, ptr [rip+0xe42be]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1bee3]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x147a75]
 Invalid RTN lea rdx, ptr [rip+0xe48ee]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1c633]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x147b55]
 Invalid RTN lea rax, ptr [rip+0xe4d7e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e988e358
 Invalid RTN lea rax, ptr [rip+0xb217]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fa0e988e358
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x9db3]
 Invalid RTN lea rdx, ptr [rip+0xc45ec]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146355]
 Invalid RTN lea rax, ptr [rip+0x1b1ce]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fa0e988fb70
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fa0e988fb78
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fa0e988fb50
 Invalid RTN nop edx, edi
 Invalid RTN mov rax, qword ptr [rip+0x147485]
 Invalid RTN lea rdx, ptr [rip+0xe443e]
 Invalid RTN test byte ptr [rax+0x72], 0x10
 Invalid RTN lea rax, ptr [rip+0x1c0f3]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rcx, qword ptr [rip+0x146555]
 Invalid RTN lea rax, ptr [rip+0xea85e]
 Invalid RTN mov rdx, 0x90000000002
 Invalid RTN mov rsi, 0x10000000002
 Invalid RTN and rdx, qword ptr [rcx+0xc8]
 Invalid RTN cmp rdx, rsi
 Invalid RTN jz 0x7fa0e988f958
 Invalid RTN lea rax, ptr [rip+0x18067]
 Invalid RTN test byte ptr [rcx+0xcc], 0x10
 Invalid RTN jnz 0x7fa0e988f958
 Invalid RTN test byte ptr [rcx+0x71], 0x2
 Invalid RTN lea rax, ptr [rip+0x86e3]
 Invalid RTN lea rdx, ptr [rip+0xda7ac]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x1466c5]
 Invalid RTN lea rax, ptr [rip+0x1b50e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fa0e988f800
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fa0e988f808
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fa0e988f7e0
 Invalid RTN nop edx, edi
 Invalid RTN mov rdx, qword ptr [rip+0x146825]
 Invalid RTN lea rax, ptr [rip+0x1b69e]
 Invalid RTN mov ecx, dword ptr [rdx+0xcc]
 Invalid RTN test ch, 0x30
 Invalid RTN jnz 0x7fa0e988f6a0
 Invalid RTN mov rax, 0x400000000004
 Invalid RTN and rax, qword ptr [rdx+0xc8]
 Invalid RTN cmp rax, 0x4
 Invalid RTN jz 0x7fa0e988f6a8
 Invalid RTN test ch, 0x1
 Invalid RTN jz 0x7fa0e988f680
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdx
 Exe .text
 INSTSELECTOR: instruction to be included pop rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rsp
 Exe .text
 INSTSELECTOR: instruction to be included and rsp, 0xfffffffffffffff0
 Exe .text
 INSTSELECTOR: instruction to be included push rax
 Exe .text
 INSTSELECTOR: instruction to be included push rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [rip+0x11af6]
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x11a7f]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip-0x208]
 Exe .text
 instcount: branch/ret inst: call qword ptr [rip+0x1a2c2]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rdx
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x77a4]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0x77a4]
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rbp, r12
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029af8000
 Exe .text
 INSTSELECTOR: instruction to be included sar rbp, 0x3
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0a7c6
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r15
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r13d
 Exe .text
 instcount: branch/ret inst: call qword ptr [r12+rbx*8]
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x557029af8d30
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x1a509]
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x1a502]
 Exe .text
 INSTSELECTOR: instruction to be included sub rsi, rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rsi
 Exe .text
 INSTSELECTOR: instruction to be included shr rsi, 0x3f
 Exe .text
 INSTSELECTOR: instruction to be included sar rax, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included add rsi, rax
 Exe .text
 INSTSELECTOR: instruction to be included sar rsi, 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x557029af8d68
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1a275]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029af8d68
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0a7b0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x110
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: call 0x557029af85f0
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af8730
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af88c0
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x40]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af8810
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af8c04
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x40]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af86a0
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b0a0d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x11
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x138
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x99a4]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b06cd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, edi
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdx
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xa0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xc7dd]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+rdx*8]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06df0
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included setz bl
 Exe .text
 INSTSELECTOR: instruction to be included add ebx, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x11
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0xf08f]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06db0
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06d84
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xecc2]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06e12
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0x16
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029b06e12
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x5312]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rcx+rdx*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rcx
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b06d1b
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x11
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0xf08f]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06db0
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06d84
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsp
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06d84
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06e20
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x8]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af8890
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip-0x1f7]
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b06d5e
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x8]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af8890
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebp
 Exe .text
 instcount: branch/ret inst: call 0x557029af8640
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x98]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06e89
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xa0
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: call 0x557029b092e0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x9e35]
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [rip+0xa42a]
 Exe .text
 INSTSELECTOR: instruction to be included mov r9d, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included lea r10, ptr [rdi+0x100]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdx]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included cmp sil, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0933d
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0932b
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b0933d
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0933d
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09328
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, r9
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8+rcx*8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x20
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r10
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09308
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, al
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0933d
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09328
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, r9
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8+rcx*8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x20
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r10
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09308
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdx]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included cmp sil, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0933d
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0932b
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b0933d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, r9
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8+rcx*8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x20
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r10
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09308
 Exe .text
 instcount: branch/ret inst: call 0x557029af8790
 Exe .text
 instcount: branch/ret inst: call 0x557029af8790
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x325c]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x324c]
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz rax, rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x9114]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0a14d
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b0a178
 Exe .text
 instcount: branch/ret inst: call 0x557029b03e80
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movzx r12d, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12b, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03eb1
 Exe .text
 instcount: branch/ret inst: call 0x557029af8ae0
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rax
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, r12b
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r8]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rdx+rax*2+0x1], 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03ee1
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03ee1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03ed3
 Exe .text
 instcount: branch/ret inst: call 0x557029af8ae0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+rbx*2], 0x8
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03ee1
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [r12+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b03ec0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03ed3
 Exe .text
 instcount: branch/ret inst: call 0x557029af8ae0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0a140
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0a140
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x9
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029b093d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movzx edi, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, edi
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included cmp dil, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09415
 Exe .text
 INSTSELECTOR: instruction to be included test dil, dil
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09415
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rbp
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b09403
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, edi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09415
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09400
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rip+0xc8c9]
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xa2d0]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x557029b09260
 Exe .text
 INSTSELECTOR: instruction to be included movzx edi, al
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, edi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09415
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09400
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rip+0xc8c9]
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xa2d0]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x557029b09260
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdi
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included movsx r10d, byte ptr [rsi]
 Exe .text
 INSTSELECTOR: instruction to be included xor r11d, r11d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r8+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, r10d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b092d9
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r9
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 Exe .text
 instcount: branch/ret inst: jz 0x557029b094e0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [r13+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0958a
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x80
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b094c8
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x80
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b094c8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0956b
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 Exe .text
 instcount: branch/ret inst: call 0x557029b01d40
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029af8900
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01d57
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r14]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, 0x118
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b094bc
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029b01da0
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0a14d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x8f74]
 Exe .text
 instcount: branch/ret inst: call 0x557029b093d0
 Exe .text
 instcount: branch/ret inst: call 0x557029b03e80
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movzx r12d, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12b, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03eb1
 Exe .text
 instcount: branch/ret inst: call 0x557029af8ae0
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rax
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, r12b
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r8]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rdx+rax*2+0x1], 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03ee1
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03ee1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03ed3
 Exe .text
 instcount: branch/ret inst: call 0x557029af8ae0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+rbx*2], 0x8
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03ee1
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [r12+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b03ec0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03ed3
 Exe .text
 instcount: branch/ret inst: call 0x557029af8ae0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0a140
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0a140
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x9
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029b093d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movzx edi, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, edi
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included cmp dil, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09415
 Exe .text
 INSTSELECTOR: instruction to be included test dil, dil
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09415
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rbp
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b09403
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, edi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09415
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09400
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rip+0xc8c9]
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xa2d0]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x557029b09260
 Exe .text
 INSTSELECTOR: instruction to be included movzx edi, al
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, edi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09415
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09400
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rip+0xc8c9]
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xa2d0]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x557029b09260
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdi
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included movsx r10d, byte ptr [rsi]
 Exe .text
 INSTSELECTOR: instruction to be included xor r11d, r11d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r8+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, r10d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b092d9
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r9
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 Exe .text
 instcount: branch/ret inst: jz 0x557029b094e0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [r13+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0958a
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x80
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b094c8
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x80
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b094c8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0956b
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 Exe .text
 instcount: branch/ret inst: call 0x557029b01d40
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029af8900
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [r12+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b03ec0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, r10d
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b092a9
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092d0
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ecx, r11d
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, r8
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [r8]
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09278
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included movsx ecx, byte ptr [rsi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09290
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092d0
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ecx, r11d
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, r8
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [r8]
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09278
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r9
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r8+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, r10d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b092d9
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included movsx ecx, byte ptr [rsi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09290
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rdi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included movsx ecx, byte ptr [rsi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09290
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092d0
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ecx, r11d
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, r8
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [r8]
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09278
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r9
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, qword ptr [r13+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included test r15, r15
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09489
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x40
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09528
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x18
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0954a
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029af8660
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x1]
 Exe .text
 instcount: branch/ret inst: call r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x16435]
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, 0x270f
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included xor r12d, r12d
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rax+0x5]
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afcdb0
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029afcd8f
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcd80
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcd80
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029afcdcf
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcda1
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x25
 Exe .text
 instcount: branch/ret inst: jz 0x557029afce08
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, al
 Exe .text
 INSTSELECTOR: instruction to be included add r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029afcd8f
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcd80
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcd80
 Exe .text
 INSTSELECTOR: instruction to be included lea r14d, ptr [r12+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rbx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcd93
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1624f]
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jz 0x557029afce40
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: js 0x557029afce30
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcda1
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x25
 Exe .text
 instcount: branch/ret inst: jz 0x557029afce08
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, al
 Exe .text
 INSTSELECTOR: instruction to be included add r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029afcd8f
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1624f]
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jz 0x557029afce40
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: js 0x557029afce30
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x0
 Exe .text
 INSTSELECTOR: instruction to be included cmovz r14d, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r14d
 Exe .text
 instcount: branch/ret inst: call 0x557029afbf00
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jns 0x557029afcddf
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afcdec
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r14d
 Exe .text
 instcount: branch/ret inst: call 0x557029afbf00
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x17a95], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x17366]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [r12+0xf8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r12]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, r12
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afbf58
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afbf7a
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12, r13
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afbf28
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x17a1e], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afbf96
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x17a26]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afbfa1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r12]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, r12
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afbf58
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afbf7a
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [r13+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x18
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09493
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r13+0x10]
 Exe .text
 instcount: branch/ret inst: call 0x557029af85c0
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0xfffffec7
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included and edx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included or r12d, ebx
 Exe .text
 INSTSELECTOR: instruction to be included or eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0955c
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, 0x118
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09517
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03ee1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03ed3
 Exe .text
 instcount: branch/ret inst: call 0x557029af8ae0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029b02e10
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0xa
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 instcount: branch/ret inst: call 0x557029b02d50
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, esi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: call 0x557029af85f0
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r12d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029af86b0
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rbx], 0x22
 Exe .text
 instcount: branch/ret inst: jz 0x557029b02dec
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rsp]
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, r12d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b02da8
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x557029b02dec
 Exe .text
 instcount: branch/ret inst: call 0x557029af8ae0
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rbx
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b02dbc
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rsi+rcx*2+0x1], 0x20
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b02db8
 Exe .text
 INSTSELECTOR: instruction to be included test cl, cl
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b02dec
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b02df4
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, 0x7fffffff
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029b02e2c
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmovz eax, edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: call 0x557029af8a80
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x13a8]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1b
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x9084]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rcx, eax
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: call 0x557029b074b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xd8
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029b07505
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b07390
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b07390
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rcx
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xc607], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, 0xffffffffffffffff
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x557029af8950
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0xc5ef], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b073c5
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0xc5f7]
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b073d0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included xor rcx, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0755b
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xd8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x9069]
 Exe .text
 instcount: branch/ret inst: call 0x557029b093d0
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x11ac]
 Exe .text
 instcount: branch/ret inst: call 0x557029b097d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movzx r8d, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, r8d
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included cmp r8b, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0980f
 Exe .text
 INSTSELECTOR: instruction to be included test r8b, r8b
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0980f
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rdi
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b097fc
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, r8d
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0980f
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b097f8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x9ee8]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x557029b09260
 Exe .text
 INSTSELECTOR: instruction to be included movzx r8d, al
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, r8d
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0980f
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b097f8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x9ee8]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x557029b09260
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x9ee8]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 Exe .text
 instcount: branch/ret inst: call 0x557029b09260
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b092b5
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b092c4
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, r8
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [r8]
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09278
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r9
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09861
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+0x8], 0x20
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09870
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3d
 Exe .text
 instcount: branch/ret inst: call 0x557029af8660
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0a1d5
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x2f
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0a200
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029af9bf0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x557029af88e0
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0a1d5
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x90]
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x14eb]
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x557029af88e0
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0a1d5
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x90]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp], rax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0a1d5
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x98]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp+0x8], rax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0a1d5
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b0a1d7
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029af9bf0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rip+0x19410]
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af9cc8
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x19d91], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x193f2]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x1c09b]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rbx
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9c3b
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r13
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9c34
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, r12
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9ca0
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9ca0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x557029b01da0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029af8ab0
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01db7
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r13
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9c62
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, rbx
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9c62
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 instcount: branch/ret inst: call 0x557029af85c0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x19d38], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af9c7c
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x19d40]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af9ce8
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x116df]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b095d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 Exe .text
 instcount: branch/ret inst: call 0x557029b03e80
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 instcount: branch/ret inst: call 0x557029af8660
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rax
 Exe .text
 INSTSELECTOR: instruction to be included sub r15, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x557029b096be
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b096be
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09690
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x557029af8700
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xa37d], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [r14+r15*1+0x2]
 Exe .text
 instcount: branch/ret inst: call 0x557029b01d40
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r15
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 instcount: branch/ret inst: call 0x557029af89d0
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0965d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 instcount: branch/ret inst: call 0x557029af89d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or bh, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, ebx
 Exe .text
 instcount: branch/ret inst: call 0x557029b093d0
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x18
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0954a
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0xfffffec7
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included and edx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included or r12d, ebx
 Exe .text
 INSTSELECTOR: instruction to be included or eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0955c
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, 0x118
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09517
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0xa334], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09680
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0xa33c]
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b096a0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x128]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0a250
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x138
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 Exe .text
 instcount: branch/ret inst: call 0x557029b01f00
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x11145]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x11126]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x1112f]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdx, rcx
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x13b95]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included setz dl
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rcx
 Exe .text
 INSTSELECTOR: instruction to be included setnz dil
 Exe .text
 INSTSELECTOR: instruction to be included and rdi, rdx
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b01dd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rdi+0x7]
 Exe .text
 INSTSELECTOR: instruction to be included and rbx, 0xfffffffffffffff8
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1124f]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbx
 Exe .text
 instcount: branch/ret inst: jnb 0x557029b01e63
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, 0x1f8
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, 0x1f8
 Exe .text
 INSTSELECTOR: instruction to be included cmovnb rbp, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x8
 Exe .text
 instcount: branch/ret inst: jb 0x557029b01e97
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x11b96], 0x1
 Exe .text
 instcount: branch/ret inst: call 0x557029af8900
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rip+0x111de]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [r8+rbx*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rsp+0x4]
 Exe .text
 instcount: branch/ret inst: call 0x557029b034c0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsi]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b034e1
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x2d
 Exe .text
 INSTSELECTOR: instruction to be included setz r13b
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x127f8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsi+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmovnle rsi, rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+0x12]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbp
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b03500
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b03140
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbp
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b03500
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b03140
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x28
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03161
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x12b90]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rip+0x8c29]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rcx, rcx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03213
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx esi, byte ptr [rcx]
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x2d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03359
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x2b
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b03497
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rcx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included movsx esi, dl
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0340b
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rsp+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rcx+0x2]
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x63
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b031e7
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b03213
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0xc]
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x28
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rip+0x127d4]
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0x127fd]
 Exe .text
 INSTSELECTOR: instruction to be included or r13d, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [r12], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03660
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x127a3], 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03600
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x12797], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b03560
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x126df], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b03546
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 instcount: branch/ret inst: call 0x557029af8630
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x12797], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b03560
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rip+0x1278d]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbx], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b03568
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b03560
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbx], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b03568
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b03560
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r12]
 Exe .text
 INSTSELECTOR: instruction to be included test r14, r14
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03640
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1269f], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b035a7
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 instcount: branch/ret inst: call 0x557029aff690
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x14306], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: call 0x557029af8a20
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: js 0x557029aff708
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x9
 Exe .text
 instcount: branch/ret inst: jle 0x557029aff768
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029aff730
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 Exe .text
 instcount: branch/ret inst: call 0x557029b064d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, esi
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029af8680
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jns 0x557029b06540
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xf5b0]
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14d, 0x9
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0652a
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r13d
 Exe .text
 instcount: branch/ret inst: call 0x557029af87b0
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r13d
 Exe .text
 instcount: branch/ret inst: call 0x557029af87b0
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b06516
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r12d
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: call 0x557029af8680
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff6c3
 Exe .text
 instcount: branch/ret inst: jmp 0x557029aff730
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x1395e]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbx+0x20], 0x0
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff748
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x142bd], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029aff6fb
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x142c5]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029aff780
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r12]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b03598
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rdx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, 0xffffffff00000001
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b035e6
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x12746]
 Exe .text
 INSTSELECTOR: instruction to be included add eax, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [r12], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b035d0
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b03040
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included add eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [r12], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b035d0
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b03040
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movsx edi, byte ptr [rip+0x12ca0]
 Exe .text
 instcount: branch/ret inst: call 0x557029b063b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0xcc9e], edi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b063c6
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b063d0
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029af8790
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0xf99d]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, edi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06400
 Exe .text
 instcount: branch/ret inst: call 0x557029af8aa0
 Exe .text
 instcount: branch/ret inst: call 0x557029af8920
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, dword ptr [rip+0xf96d]
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06418
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0xf969]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b063e3
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included movsx edi, byte ptr [rip+0x12c88]
 Exe .text
 instcount: branch/ret inst: call 0x557029b07050
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add edi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0xc423], edi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b07090
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x2
 Exe .text
 instcount: branch/ret inst: call 0x557029b06cd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, edi
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdx
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xa0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xc7dd]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+rdx*8]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06df0
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included setz bl
 Exe .text
 INSTSELECTOR: instruction to be included add ebx, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x11
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0xf08f]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06db0
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06d84
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xecc2]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06e12
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0x16
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029b06e12
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x5312]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rcx+rdx*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rcx
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0xee98], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, ebp
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06d26
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0xeecd], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06d26
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0xee7e], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, ebp
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b06d26
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0xf08f]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06db0
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06d84
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsp
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06d84
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 Exe .text
 instcount: branch/ret inst: call 0x557029af8640
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06d84
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06d49
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0xef0e], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06d84
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06e20
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x8]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af8890
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip-0x1f7]
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b06d5e
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x8]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af8890
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebp
 Exe .text
 instcount: branch/ret inst: call 0x557029af8640
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x98]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06e89
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xa0
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x3
 Exe .text
 instcount: branch/ret inst: call 0x557029b06cd0
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0xee67], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included sbb ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0xfffffffe
 Exe .text
 INSTSELECTOR: instruction to be included add ebx, 0x3
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b06d26
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0xf
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b06cd0
 Exe .text
 INSTSELECTOR: instruction to be included movsx edi, byte ptr [rip+0x12c7d]
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b00920
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x1517e], edi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b00a40
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rip+0x1517d]
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b009ab
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, edi
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b009b8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r13d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af8c87
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1d148], 0x0
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x557029af8bbf
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x12e5b]
 Exe .text
 instcount: branch/ret inst: call 0x557029b097d0
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 Exe .text
 instcount: branch/ret inst: call 0x557029b01f50
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x11a49], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x110ea]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rbx]
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01f8b
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af85c0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x10]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rdx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x119f6], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b01fbe
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x119fe]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b01fc0
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x1d158]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x557029af8c78
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 instcount: branch/ret inst: call 0x557029afb0f0
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x557029b019b0
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, edi
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 Exe .text
 INSTSELECTOR: instruction to be included and r14d, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x14360]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x38
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r13d
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rsp+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x1
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x557029b01f00
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1409a]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b01ae0
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x142c6], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01a24
 Exe .text
 INSTSELECTOR: instruction to be included test r14b, r14b
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b01a88
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 instcount: branch/ret inst: call 0x557029b06330
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06380
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b04440
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x7c63]
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included xor r12d, r12d
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029b041e0
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, dword ptr [rip+0x11b4a]
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included and ebp, 0x4
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x11b32]
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b04278
 Exe .text
 instcount: branch/ret inst: call 0x557029b04020
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11d1a]
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b040f0
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x7f0a]
 Exe .text
 instcount: branch/ret inst: call 0x557029b03fe0
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b03ff7
 Exe .text
 instcount: branch/ret inst: call 0x557029aff3b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13c6d]
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdx+0x70]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029aff3f0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdx+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x1
 Exe .text
 Exe .text
 instcount: branch/ret inst: js 0x557029aff400
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x1]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rdx+0x68]
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rax]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rdx+0x28]
 Exe .text
 INSTSELECTOR: instruction to be included test rcx, rcx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029aff608
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff9d
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff5f8
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rdx+0x20], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff5f8
 Exe .text
 instcount: branch/ret inst: call 0x557029b076f0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0xb9a5]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b076b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included sub rdx, rsi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b076e0
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rdi+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 instcount: branch/ret inst: js 0x557029b076db
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b07620
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13bf7]
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, dword ptr [rdx+0x14]
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 Exe .text
 instcount: branch/ret inst: jle 0x557029aff4f8
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rdx+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included sub r12, 0x1
 Exe .text
 instcount: branch/ret inst: jmp 0x557029aff464
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rdx+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xc126]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rdx+0xc]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x2000
 Exe .text
 instcount: branch/ret inst: call 0x557029af8800
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jns 0x557029aff5cc
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1657f]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13af0]
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff510
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rdx+0xc]
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029aff5db
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13a55]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029aff43c
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, 0xffffff9dffffff9d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0xffffff7e
 Exe .text
 instcount: branch/ret inst: jmp 0x557029aff4c5
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rdx+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included sub r12, 0x1
 Exe .text
 instcount: branch/ret inst: jmp 0x557029aff464
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included sub ebp, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029aff450
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x557029af89e0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xa
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff4d8
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rsi
 Exe .text
 INSTSELECTOR: instruction to be included sub r12, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff480
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included sub ebp, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029aff450
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13b49]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rsi
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, qword ptr [rdx+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x1
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x557029aff496
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebp, byte ptr [rbx]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x16842], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x557029aff5b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x13b72]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x1]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rdx+0x68]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x5c
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03fe8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3b
 Exe .text
 instcount: branch/ret inst: jnle 0x557029b04088
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x8
 Exe .text
 instcount: branch/ret inst: jle 0x557029b040b8
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rax-0x9]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x32
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029b040db
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rbx+rax*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbx
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 instcount: branch/ret inst: call 0x557029aff3b0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff7e
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b04060
 Exe .text
 instcount: branch/ret inst: call 0x557029aff1f0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xa
 Exe .text
 instcount: branch/ret inst: jz 0x557029b04071
 Exe .text
 instcount: branch/ret inst: call 0x557029aff3b0
 Exe .text
 instcount: branch/ret inst: call 0x557029aff1f0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x13e2d]
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rax+0x70], 0x1
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: call 0x557029b03fe0
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cdqe 
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdx+rax*4+0x68]
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3b
 Exe .text
 instcount: branch/ret inst: jle 0x557029b04042
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x7c
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b040db
 Exe .text
 instcount: branch/ret inst: call 0x557029b03fe0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x8
 Exe .text
 instcount: branch/ret inst: jle 0x557029b040b8
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rax-0x9]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x32
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029b040db
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rbx+rax*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbx
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xeefe]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rax+0x8], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11c06]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x1
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b04290
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12d, 0xc
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0431d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11b26]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0431d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x118ca], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b04571
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0447d
 Exe .text
 INSTSELECTOR: instruction to be included test bpl, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b04576
 Exe .text
 instcount: branch/ret inst: call 0x557029b059e0
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x10367]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b05ab0
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0x7396]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b05a63
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, r12
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01aa0
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x142ab], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01b00
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x557029b01f50
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x13f9b], 0x2
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029afa660
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x557029afa6b8
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 instcount: branch/ret inst: call 0x557029b06f80
 Exe .text
 instcount: branch/ret inst: call 0x557029b06f80
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xee16]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b07040
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rip+0xc085]
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included test r14d, r14d
 Exe .text
 instcount: branch/ret inst: jns 0x557029b07041
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rip+0xca1f]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0xc4d1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xc50b]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b0700f
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afa740
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x19307]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz r15d, eax
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b01a40
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x557029b01f50
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11f86]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01a00
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0xfffffff3
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x28]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b01b4d
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x38
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r15d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x557029b01f00
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xeefe]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rax+0x8], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11c06]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x1
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x7c
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b040db
 Exe .text
 instcount: branch/ret inst: call 0x557029b03fe0
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x8ddc]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b04640
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x98
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x8724]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rsi, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b05008
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0xe9a6]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rbp-0x70]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x88], 0x1
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x7945]
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, r14
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029b04bee
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xe969]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, r15
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, 0x3
 Exe .text
 instcount: branch/ret inst: jbe 0x557029b04828
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, r13d
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax+rdx*1], 0xe
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029b04850
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rax+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, dword ptr [r12+rdx*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, r12
 Exe .text
 instcount: branch/ret inst: jmp rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x8413]
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0480c
 Exe .text
 instcount: branch/ret inst: call 0x557029aff3b0
 Exe .text
 instcount: branch/ret inst: call 0x557029b03fe0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x5c
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03fe8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xe825]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, r15
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, 0x3
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029b046e4
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x4
 Exe .text
 instcount: branch/ret inst: call 0x557029b020e0
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rbx+0x24]
 Exe .text
 INSTSELECTOR: instruction to be included test r14d, r14d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b04888
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffff7f
 Exe .text
 instcount: branch/ret inst: jz 0x557029b04800
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x8413]
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0480c
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x82d3]
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, r15
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0579e
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x8620]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b05018
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x88], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029b05901
 Exe .text
 INSTSELECTOR: instruction to be included mov r11d, dword ptr [rbx+0x24]
 Exe .text
 INSTSELECTOR: instruction to be included test r11d, r11d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b058f0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0xe018]
 Exe .text
 INSTSELECTOR: instruction to be included add r14, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included sub r14, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x88], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b048d6
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r13d
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0xfffffffd
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3c
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0507c
 Exe .text
 instcount: branch/ret inst: call 0x557029aff1f0
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b048d6
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x8c]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x78]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b01dd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0xc
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x38]
 Exe .text
 INSTSELECTOR: instruction to be included xor rdi, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b058fc
 Exe .text
 INSTSELECTOR: instruction to be included lea rsp, ptr [rbp-0x28]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b042e0
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x11afb], 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0431d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x11b1a]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x557029af8fb0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b045a8
 Exe .text
 instcount: branch/ret inst: call 0x557029b06210
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029b041e0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [rip+0x11adf]
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 Exe .text
 instcount: branch/ret inst: jz 0x557029b04212
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12d, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b04212
 Exe .text
 instcount: branch/ret inst: call 0x557029b059e0
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12d, 0xc
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0431d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11b26]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0431d
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b042e0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x11a79]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x10
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0xde2d]
 Exe .text
 instcount: branch/ret inst: call 0x557029b02f90
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included xor r14d, r14d
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdx
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r14
 Exe .text
 instcount: branch/ret inst: jbe 0x557029b02fdb
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rbp+r14*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 INSTSELECTOR: instruction to be included shr rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [r12+rbx*8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [r15]
 Exe .text
 instcount: branch/ret inst: call 0x557029af8840
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: js 0x557029b02ff0
 Exe .text
 instcount: branch/ret inst: jz 0x557029b02fde
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r14
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029b02fb5
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rbx
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b02fb0
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r14
 Exe .text
 instcount: branch/ret inst: jbe 0x557029b02fdb
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rbp+r14*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 INSTSELECTOR: instruction to be included shr rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [r12+rbx*8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [r15]
 Exe .text
 instcount: branch/ret inst: call 0x557029af8840
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r15
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b04232
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0xde18]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rax
 Exe .text
 INSTSELECTOR: instruction to be included sar r12, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included add r12d, 0xd
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x11afb], 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0431d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x11b1a]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x557029af8fb0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 instcount: branch/ret inst: call 0x557029af8dc0
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 Exe .text
 instcount: branch/ret inst: jz 0x557029af8dee
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af8de0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x1aa49]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af8e3b
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af8de0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included imul eax, eax, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x1aa49]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af8e3b
 Exe .text
 instcount: branch/ret inst: jmp 0x557029af8e4b
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 Exe .text
 instcount: branch/ret inst: jz 0x557029af8fd5
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029af8fd5
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+0x18], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x0
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz rax, rdx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0431d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029b041f8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rax
 Exe .text
 instcount: branch/ret inst: call 0x557029aff200
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xd
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06260
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xfb05], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 instcount: branch/ret inst: call 0x557029b05ac0
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x48
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xd543]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rax+0x8]
 Exe .text
 instcount: branch/ret inst: call 0x557029b041e0
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x7
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x14
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029b06160
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x653e]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rdx+rax*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rdx
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xd50d]
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x1020e], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x30]
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rsp+0x28]
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rsp+0x20]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, dword ptr [rax+0x8]
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b041e0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xb
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06147
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xc
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06108
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x7
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06060
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 Exe .text
 instcount: branch/ret inst: call 0x557029b01dd0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0xfc47]
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xfc23]
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [r13+0x8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06170
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rcx
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b05b58
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rdx
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b03e80
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdx, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06139
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x3d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06139
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rcx
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b05b58
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rcx
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b05b58
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b041e0
 Exe .text
 instcount: branch/ret inst: call 0x557029b03fe0
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3b
 Exe .text
 instcount: branch/ret inst: jnle 0x557029b04088
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x8
 Exe .text
 instcount: branch/ret inst: jle 0x557029b040b8
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rax-0x9]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x32
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029b040db
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x831b]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b04bb9
 Exe .text
 INSTSELECTOR: instruction to be included mov r9d, dword ptr [rbx+0x24]
 Exe .text
 INSTSELECTOR: instruction to be included test r9d, r9d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0578b
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [r15+0x1]
 Exe .text
 instcount: branch/ret inst: call 0x557029b03fb0
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x73d0]
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, r15
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b05025
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x6657]
 Exe .text
 instcount: branch/ret inst: call 0x557029b03d50
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0xe018]
 Exe .text
 INSTSELECTOR: instruction to be included add r14, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included sub r14, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x88], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b048d6
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r13d
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0xfffffffd
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3c
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0507c
 Exe .text
 INSTSELECTOR: instruction to be included mov r10d, dword ptr [rbp-0x8c]
 Exe .text
 INSTSELECTOR: instruction to be included test r10d, r10d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0507c
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x101ab], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b01dd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x30]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x38]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06201
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x48
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rax
 Exe .text
 instcount: branch/ret inst: call 0x557029b041e0
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, r12
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x6
 Exe .text
 instcount: branch/ret inst: jz 0x557029b062b5
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xfae7], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b044d5
 Exe .text
 instcount: branch/ret inst: call 0x557029b041e0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x4
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b044a0
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, 0x5
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b044ab
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x5
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b044f0
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, 0x6
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b06210
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x11839], 0x1
 Exe .text
 instcount: branch/ret inst: call 0x557029b041e0
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3
 Exe .text
 instcount: branch/ret inst: jz 0x557029b045c8
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x557029b045a0
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x18
 Exe .text
 instcount: branch/ret inst: call 0x557029b01dd0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rbx
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b0452c
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14d, 0x1
 Exe .text
 instcount: branch/ret inst: jnle 0x557029b04550
 Exe .text
 INSTSELECTOR: instruction to be included test r14d, r14d
 Exe .text
 instcount: branch/ret inst: jns 0x557029b04590
 Exe .text
 INSTSELECTOR: instruction to be included and ebp, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b04631
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x11799], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included or ebp, 0x2
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b0455d
 Exe .text
 instcount: branch/ret inst: call 0x557029b041e0
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x117c7], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0446e
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x557029b045f0
 Exe .text
 instcount: branch/ret inst: call 0x557029b059e0
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0447d
 Exe .text
 INSTSELECTOR: instruction to be included test bpl, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b04576
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b045a8
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0xe
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029afa830
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x10d86]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, ecx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rsi+rdx*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rsi
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0xb79]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afa757
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1b582], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029afa710
 Exe .text
 INSTSELECTOR: instruction to be included xor r12d, r12d
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included setz r12b
 Exe .text
 INSTSELECTOR: instruction to be included neg r12d
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afa72a
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x98
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rdi+0x4]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x17e73]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rsp+0x40]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rcx-0x1]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub ebx, eax
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rsp+0x50]
 Exe .text
 INSTSELECTOR: instruction to be included cmovz eax, edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x70]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b01f00
 Exe .text
 instcount: branch/ret inst: call 0x557029b09f40
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x9a5d], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x10
 Exe .text
 instcount: branch/ret inst: call 0x557029b01d40
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xbee8]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x9a2f], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09f85
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x9a37]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09f90
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [r15+0x10]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x17bcb]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x172bd]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r14, r14
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb9da
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, r12
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 instcount: branch/ret inst: call 0x557029afee60
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, edx
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edx
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdi+0x10]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x141b9]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029afe840
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xcdd0]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x108
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, esi
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x180
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x80
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and esi, 0x4
 Exe .text
 instcount: branch/ret inst: jz 0x557029afe897
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [r12-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x40
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [r12-0x2]
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz r12, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x2
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x557029afe8bc
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0xfffffffd
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [r13], 0x7e
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x557029afea1f
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x2
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x557029afe8bc
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0xfffffffd
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [r13], 0x7e
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x557029afea1f
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0x14b0d]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1477e]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0xcd23]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, r13
 Exe .text
 INSTSELECTOR: instruction to be included sub r14d, eax
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rbx+r15*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 instcount: branch/ret inst: call 0x557029af87f0
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rax+r15*1]
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbx+r13*1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [r13+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afe911
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff87
 Exe .text
 instcount: branch/ret inst: jz 0x557029afe907
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: js 0x557029afe911
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afe980
 Exe .text
 INSTSELECTOR: instruction to be included add r8, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3a
 Exe .text
 instcount: branch/ret inst: jz 0x557029afe9d2
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029afe9f0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x14a49]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r13
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b02150
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x10edd]
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdx
 Exe .text
 INSTSELECTOR: instruction to be included sub rbx, qword ptr [rip+0x10ed9]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rsi, rax
 Exe .text
 instcount: branch/ret inst: jbe 0x557029b021b0
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b01fd0
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: jmp 0x557029af89d0
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rsp+0x14]
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rsp+0x18]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, qword ptr [rip+0x1469a]
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included setz dl
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rsp+0x2b], dl
 Exe .text
 instcount: branch/ret inst: jz 0x557029afe9c2
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14d, eax
 Exe .text
 instcount: branch/ret inst: jl 0x557029afeca0
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, eax
 Exe .text
 INSTSELECTOR: instruction to be included add r8, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3a
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afe923
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, eax
 Exe .text
 INSTSELECTOR: instruction to be included add r8, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3a
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afe923
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, r13
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [r8-0x1], 0x7e
 Exe .text
 instcount: branch/ret inst: jz 0x557029afea0d
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rbx
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afe94e
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x3d
 Exe .text
 instcount: branch/ret inst: jz 0x557029afe9f0
 Exe .text
 INSTSELECTOR: instruction to be included test r15b, r15b
 Exe .text
 instcount: branch/ret inst: jz 0x557029afe953
 Exe .text
 INSTSELECTOR: instruction to be included add r15d, 0x7f
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15b, 0x7
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029afe94b
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xf8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afee5b
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x108
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1452e]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, qword ptr [rip+0x14197]
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff0b8
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff092
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included sub rdi, qword ptr [rip+0x1417b]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x144bc]
 Exe .text
 instcount: branch/ret inst: call 0x557029b01dd0
 Exe .text
 INSTSELECTOR: instruction to be included and ebp, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff050
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0xffffffff
 Exe .text
 instcount: branch/ret inst: call 0x557029afda00
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x48
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x15986], 0x0
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x557029afdca2
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xebb3]
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x156e9], 0x20
 Exe .text
 instcount: branch/ret inst: jz 0x557029afdc8d
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x15949]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rip+0x1823f]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsp+0x2c]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, dword ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rdi+rdx*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rax+0xc]
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmovz r15, qword ptr [rsp+0x30]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14, rax
 Exe .text
 instcount: branch/ret inst: jnb 0x557029afdb58
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afdb83
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029afdbb0
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x10
 Exe .text
 instcount: branch/ret inst: call 0x557029b01dd0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x38]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rcx+0x8]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x48
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x14495]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x1447f]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff072
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rip+0xc6f0]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afef58
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x16d82], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp+0x8]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afef34
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 instcount: branch/ret inst: call 0x557029af8930
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afef34
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x14a2c], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x13
 Exe .text
 instcount: branch/ret inst: call 0x557029afdd40
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029afdd40
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, esi
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0xdeaa]
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029af8930
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afdeb0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included test bpl, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afddf8
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, r15
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, ebp
 Exe .text
 INSTSELECTOR: instruction to be included and esi, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 Exe .text
 instcount: branch/ret inst: jz 0x557029afde60
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, r15
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afde73
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff072
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x16d82], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rbp+0x8]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afef34
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 instcount: branch/ret inst: call 0x557029af8930
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x14310]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff092
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [r12+0x8]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afdcc0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x156e4]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jz 0x557029afdd0e
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x15cd0], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx]
 Exe .text
 instcount: branch/ret inst: call 0x557029af85c0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb4dc
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included add r13d, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb4d0
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [r14+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test r14, r14
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb4f0
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rsp+0x48]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afb4b0
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 instcount: branch/ret inst: call 0x557029afee60
 Exe .text
 INSTSELECTOR: instruction to be included lea edi, ptr [r13+0x2]
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdi, edi
 Exe .text
 INSTSELECTOR: instruction to be included shl rdi, 0x3
 Exe .text
 instcount: branch/ret inst: call 0x557029b01dd0
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x40]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb52c
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb518
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1a7a9], 0x0
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb561
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb518
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1a7a9], 0x0
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb561
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x17d19]
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb558
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r15+0x18]
 Exe .text
 instcount: branch/ret inst: call 0x557029afa580
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x28
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x557029afa630
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsp
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afa5db
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afa653
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x28
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r15+0x18]
 Exe .text
 instcount: branch/ret inst: call 0x557029b06ba0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rip+0xf1d3]
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06bdf
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x30
 Exe .text
 instcount: branch/ret inst: call 0x557029b01d40
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r15+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b06a60
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xf0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0xcf1c]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xcf09]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af8810
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06b18
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0xcf01], 0x1
 Exe .text
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06b4d
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsp+0x14]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06b00
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rsp+0xc]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x20]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b06570
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xb8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0662a
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, esi
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xd3fa], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, 0x0
 Exe .text
 INSTSELECTOR: instruction to be included test sil, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz r12, qword ptr [rip+0xf7c0]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0x5b35]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x10
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x6
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029b067ad
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rbp+rax*4]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbp
 Exe .text
 instcount: branch/ret inst: jmp rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xa8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06a54
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xb8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x18]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsp+0x14]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06ada
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b06b00
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0xceb2]
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06ada
 Exe .text
 instcount: branch/ret inst: call 0x557029afa2a0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xe8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06b57
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xf0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, qword ptr [r15+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x17bf0]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r15, r15
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb5f2
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rsp+0x58]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r15
 Exe .text
 instcount: branch/ret inst: call 0x557029afee60
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1a6ee], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb830
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb620
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rsp+0x38], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb8f8
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rbp+0x5]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rax
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rsp+0x60]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r12]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 instcount: branch/ret inst: call 0x557029afc330
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x2f
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xd8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: call 0x557029af8750
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afc3e0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afc3b8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xc8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afc7f1
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x16da6]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x28]
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdi
 Exe .text
 INSTSELECTOR: instruction to be included setz cl
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x557029afc41e
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0xf07e]
 Exe .text
 instcount: branch/ret inst: call 0x557029af8590
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029afbe00
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 Exe .text
 instcount: branch/ret inst: jz 0x557029afbe3f
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rdi
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afbe2b
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afbe28
 Exe .text
 INSTSELECTOR: instruction to be included and ecx, 0x7fff
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rax, 0x8421085
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included shl edx, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included sub edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x17418]
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afbe8c
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afbeb8
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, al
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afbe28
 Exe .text
 INSTSELECTOR: instruction to be included and ecx, 0x7fff
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included imul rax, rax, 0x8421085
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add eax, edx
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included shl edx, 0x5
 Exe .text
 INSTSELECTOR: instruction to be included sub edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x17418]
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rax+rcx*8]
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afbe8c
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afbeb8
 Exe .text
 INSTSELECTOR: instruction to be included xor r12d, r12d
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 Exe .text
 instcount: branch/ret inst: jz 0x557029afbe9d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 instcount: branch/ret inst: call 0x557029af8700
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afc568
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, word ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included cmp ax, 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x557029afc454
 Exe .text
 INSTSELECTOR: instruction to be included cmp ax, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz ecx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ecx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afc560
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029afc2b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, 0x27
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x16494]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x8]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afc2eb
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [r13+r14*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 Exe .text
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffffe
 Exe .text
 INSTSELECTOR: instruction to be included shr rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [r12+rax*8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 instcount: branch/ret inst: call 0x557029b02f80
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsi]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdi]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029af8840
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jns 0x557029afc2e0
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, r14
 Exe .text
 instcount: branch/ret inst: jb 0x557029afc2eb
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r15
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: jz 0x557029afc31b
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rbx+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, r14
 Exe .text
 instcount: branch/ret inst: jnb 0x557029afc318
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [r13+r14*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 Exe .text
 INSTSELECTOR: instruction to be included and rax, 0xfffffffffffffffe
 Exe .text
 INSTSELECTOR: instruction to be included shr rbx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [r12+rax*8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 instcount: branch/ret inst: call 0x557029b02f80
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r15
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afc483
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afc4cc
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [r14+0x10], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afc53b
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x8
 Exe .text
 instcount: branch/ret inst: jz 0x557029afc6e0
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x20
 Exe .text
 instcount: branch/ret inst: jz 0x557029afc53b
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsp+0x18]
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afc680
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afc38a
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x17321], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029afbe00
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x18]
 Exe .text
 instcount: branch/ret inst: call 0x557029b01d40
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [r12+0x13]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af8610
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afbe9d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x2
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x172fd], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afc6d0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x17305]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afc6d0
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029afa2a0
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, word ptr [rdx+0x10]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afc660
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x8]
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afc38a
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xc8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afc7f1
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xd8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0x60]
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb9cb
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afba6f
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x68]
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb675
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, dword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x17204]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb7d0
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, 0x60
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb6f0
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [r12+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [r12+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test rcx, rcx
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb6f0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0x38]
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb7e1
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0x38]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x557029afba52
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rax+0x18], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb724
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 Exe .text
 instcount: branch/ret inst: jnle 0x557029afb9ec
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb9ec
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rsp+0x3c]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, r13d
 Exe .text
 instcount: branch/ret inst: call 0x557029afb1e0
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x108
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x30]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x187be]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1878a]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af8810
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb2aa
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp]
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x30]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rcx]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rcx+0x8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x175f6]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp+0x8], rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb328
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp]
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rsp+0x10]
 Exe .text
 instcount: branch/ret inst: call qword ptr [rax+0x8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x11654]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, 0x4c
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xb8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: jmp 0x557029af9d6c
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x557029b03c30
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x12095]
 Exe .text
 INSTSELECTOR: instruction to be included test rsi, rsi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03c90
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rsi]
 Exe .text
 INSTSELECTOR: instruction to be included test cl, cl
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03c90
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [rsi+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdi]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b03c6f
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x12061]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03ca4
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x2d
 Exe .text
 instcount: branch/ret inst: jz 0x557029b03cb0
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af9d60
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1bf79]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x557029afa0e0
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x2d
 Exe .text
 instcount: branch/ret inst: jz 0x557029afa000
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x2f
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9e27
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x2e
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9eb8
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x1195b]
 Exe .text
 INSTSELECTOR: instruction to be included cmovz r12, rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x115cc]
 Exe .text
 instcount: branch/ret inst: call 0x557029b097d0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9e24
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rsp+0x10]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 INSTSELECTOR: instruction to be included movzx r15d, byte ptr [rax]
 Exe .text
 instcount: branch/ret inst: call 0x557029afc010
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, r12
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x19b7a], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included xor r14d, r14d
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9ef0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029af8710
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029b02f40
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029af8700
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x557029b01dd0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: jmp 0x557029af88a0
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp], 0x2f
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, qword ptr [rip+0x19145]
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9f2a
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x19109]
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x1bdaa]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9e3a
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 instcount: branch/ret inst: call 0x557029b021d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029af8700
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b02150
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029af8700
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x2]
 Exe .text
 instcount: branch/ret inst: call 0x557029b020e0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x10f44]
 Exe .text
 INSTSELECTOR: instruction to be included sub rbp, qword ptr [rip+0x10f4d]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 Exe .text
 instcount: branch/ret inst: jbe 0x557029b02138
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b01fd0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rsi
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x19103]
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp], 0x2f
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rdx+0x1]
 Exe .text
 instcount: branch/ret inst: jz 0x557029afa060
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax-0x1], 0x2f
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9f63
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14, r15
 Exe .text
 instcount: branch/ret inst: jnb 0x557029afa0f8
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdx+0x1], 0x2f
 Exe .text
 instcount: branch/ret inst: jz 0x557029afa134
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x11411]
 Exe .text
 instcount: branch/ret inst: call 0x557029af8a40
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afa095
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x113f9]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029af9fc6
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x2e
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9fa0
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 instcount: branch/ret inst: call 0x557029b021d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rax+0x1]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029af9fb0
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r13
 Exe .text
 instcount: branch/ret inst: call 0x557029af8a40
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afa090
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x2e
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9fa0
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 Exe .text
 instcount: branch/ret inst: call 0x557029b021d0
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15, r14
 Exe .text
 instcount: branch/ret inst: jbe 0x557029afa099
 Exe .text
 INSTSELECTOR: instruction to be included sub r15, 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0x18fa4]
 Exe .text
 INSTSELECTOR: instruction to be included test r14, r14
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz rbp, r14
 Exe .text
 instcount: branch/ret inst: jmp 0x557029af9e3a
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029af8710
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af9e5a
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 instcount: branch/ret inst: call 0x557029af9bf0
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r13
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x11695]
 Exe .text
 instcount: branch/ret inst: call 0x557029b095d0
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0965d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 instcount: branch/ret inst: call 0x557029af89d0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: jmp 0x557029af9c10
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x19d91], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x193f2]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x1c09b]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rbx
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9c3b
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r13
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9c34
 Exe .text
 instcount: branch/ret inst: call 0x557029af85c0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x19d38], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af9c7c
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x19d40]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af9ce8
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x116df]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b095d0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x116df]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b095d0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r13+0x10]
 Exe .text
 instcount: branch/ret inst: call 0x557029af85c0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [r13+0x8]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b09493
 Exe .text
 instcount: branch/ret inst: call 0x557029afccd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x165a5]
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0x16343]
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rcx+0xf8]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rcx]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcd0e
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afcd23
 Exe .text
 INSTSELECTOR: instruction to be included add rcx, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rsi
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afccf0
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rcx]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcd0e
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afcd23
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, word ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included test dx, dx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcd00
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcd0e
 Exe .text
 INSTSELECTOR: instruction to be included add rcx, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rsi
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afccf0
 Exe .text
 INSTSELECTOR: instruction to be included cmp dx, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029afcd30
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afcd23
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, word ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included test dx, dx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcd00
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rdx+0x10], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcd06
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 instcount: branch/ret inst: jle 0x557029afcd06
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afcd1b
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afcd23
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, word ptr [rax+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included test dx, dx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcd00
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afcd0e
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x19b47], 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9ea0
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afa145
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af9fe0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x19b12]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029af9e63
 Exe .text
 instcount: branch/ret inst: call 0x557029afa2a0
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afa145
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x557029af9fe0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xa8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afa140
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xb8
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, eax
 Exe .text
 instcount: branch/ret inst: call 0x557029b076f0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x17e35]
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rax+0x24]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb300
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x17dff]
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0xf8]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb3c5
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x108
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb941
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x181b0], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb81b
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb941
 Exe .text
 INSTSELECTOR: instruction to be included xor r14d, r14d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 instcount: branch/ret inst: call 0x557029b014b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01570
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi+0x1e], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b014e3
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 instcount: branch/ret inst: call 0x557029affc60
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1482e]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jle 0x557029b0158d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 instcount: branch/ret inst: call 0x557029affc60
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, dword ptr [rip+0x1243c]
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x18058]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb711
 Exe .text
 instcount: branch/ret inst: call 0x557029afa2a0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rax+0x18], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb724
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebp
 Exe .text
 instcount: branch/ret inst: call 0x557029b06420
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x28]
 Exe .text
 instcount: branch/ret inst: call 0x557029b06b60
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rip+0xf215]
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06b90
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 instcount: branch/ret inst: call 0x557029b06420
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x20]
 Exe .text
 instcount: branch/ret inst: call 0x557029aff870
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rip+0x137ad]
 Exe .text
 instcount: branch/ret inst: jz 0x557029aff8a0
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029aff800
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x18]
 Exe .text
 instcount: branch/ret inst: call 0x557029b09fa0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rip+0xbea5]
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09fd0
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 instcount: branch/ret inst: call 0x557029b09da0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x9bfb], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0xc094]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi]
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rdi+0x8]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af85c0
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09e37
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b09e9a
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x9b07], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09eb1
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x9b0f]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09f30
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0xbe8a], rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09fb8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb75d
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0xfcb5]
 Exe .text
 instcount: branch/ret inst: call 0x557029b095d0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x30]
 Exe .text
 instcount: branch/ret inst: call 0x557029b01f50
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x88]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afba4d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0x38]
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x98
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afa6b8
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x8ddc]
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b04640
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rax+r15*1]
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbx+r13*1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [r13+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afe911
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff87
 Exe .text
 instcount: branch/ret inst: jz 0x557029afe907
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 Exe .text
 instcount: branch/ret inst: js 0x557029afe911
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xd8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rsp+0x38], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afb9d3
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rsp+0x60], 0x1
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb901
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afb977
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rsp+0x3c], 0x1
 Exe .text
 instcount: branch/ret inst: jz 0x557029afb98c
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x1a47c]
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jz 0x557029afba2f
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x18015], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x557029b00fb0
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x18015], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x557029b00fb0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x1243a]
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x12434]
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jle 0x557029b0107d
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rdx-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rip+0x14ad0]
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rbp
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rax+rax*4+0x5]
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rbp+rax*8]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [r12+0x1f], 0x8
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01009
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [r12+0x1e]
 Exe .text
 INSTSELECTOR: instruction to be included and ax, 0x4ff
 Exe .text
 INSTSELECTOR: instruction to be included cmp ax, 0x402
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b01070
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rdx+rdx*4]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included shl r12, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [r12+0xa0]
 Exe .text
 instcount: branch/ret inst: call 0x557029b01d70
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029af8980
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01d87
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included sub rdi, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x557029b010fc
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, r12
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 Exe .text
 instcount: branch/ret inst: jz 0x557029b010e6
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rdx, 0x28
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+rdx*1+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included sub rsi, r12
 Exe .text
 INSTSELECTOR: instruction to be included add rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rsi
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b010cf
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x122fb]
 Exe .text
 INSTSELECTOR: instruction to be included test rdx, rdx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b010fc
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, rax
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x122ee], 0x4
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x97], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x6f], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x47], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x1f], 0xf7
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b01009
 Exe .text
 INSTSELECTOR: instruction to be included add r12, rax
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x122ee], 0x4
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x97], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x6f], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x47], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [r12+0x1f], 0xf7
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b01009
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pxor xmm0, xmm0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x14a87]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01031
 Exe .text
 INSTSELECTOR: instruction to be included or byte ptr [r12+0x1f], 0x2
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x123b0]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or byte ptr [r12+0x1f], 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jle 0x557029b01065
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdi, ebx
 Exe .text
 INSTSELECTOR: instruction to be included shl rdi, 0x4
 Exe .text
 instcount: branch/ret inst: call 0x557029b01d40
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x123b0]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or byte ptr [r12+0x1f], 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jle 0x557029b01065
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdi, ebx
 Exe .text
 INSTSELECTOR: instruction to be included shl rdi, 0x4
 Exe .text
 instcount: branch/ret inst: call 0x557029b01d40
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 instcount: branch/ret inst: call 0x557029b01130
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 instcount: branch/ret inst: call 0x557029af8ad0
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: js 0x557029b0148c
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01280
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01261
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: js 0x557029b0148c
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01280
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01261
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b011fa
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x1f], 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0118b
 Exe .text
 INSTSELECTOR: instruction to be included cmp word ptr [rbp+0x1c], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, eax
 Exe .text
  Exe .text
instcount: branch/ret inst: jz 0x557029b01183
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rip+0x14831]
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [r13+0x1]
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029aff8e0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
  Exe .text
INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x14134]
  INSTSELECTOR: instruction to be included cmp ebx, 0x1
Exe .text
  Exe .text
INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x13735], rbx
 instcount: branch/ret inst: jnz 0x557029b011fa
  Exe .text
Exe .text
 instcount: branch/ret inst: jz 0x557029aff906
  INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x12251]
Exe .text
  Exe .text
Exe .text
  instcount: branch/ret inst: call 0x557029aff800
Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x12243]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b011c0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b011b0
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0x14120]
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 Exe .text
 instcount: branch/ret inst: jnle 0x557029aff918
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: call 0x557029af87b0
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rbp+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x1]
 Exe .text
 INSTSELECTOR: instruction to be included shl rax, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included add rax, qword ptr [rbp+0x10]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x14a9f]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1487d]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01238
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b01390
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x13704]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: call 0x557029b06e90
 Exe .text
  Exe .text
Exe .text
  INSTSELECTOR: instruction to be included add rsp, 0x8
INSTSELECTOR: instruction to be included push r13
  Exe .text
Exe .text
  INSTSELECTOR: instruction to be included mov eax, r12d
INSTSELECTOR: instruction to be included push r12
  Exe .text
Exe .text
  INSTSELECTOR: instruction to be included pop rbx
INSTSELECTOR: instruction to be included push rbp
  Exe .text
Exe .text
  INSTSELECTOR: instruction to be included pop rbp
INSTSELECTOR: instruction to be included push rbx
  Exe .text
Exe .text
  INSTSELECTOR: instruction to be included pop r12
INSTSELECTOR: instruction to be included sub rsp, 0x8
  Exe .text
Exe .text
 INSTSELECTOR: instruction to be included pop r13
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xcb03], 0x1
 Exe .text
  Exe .text
instcount: branch/ret inst: ret 
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xc634]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [r12+0x208]
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b06ec8
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afba1b
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afb944
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06ec0
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06ec0
 Exe .text
 instcount: branch/ret inst: call 0x557029af85c0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 Exe .text
 instcount: branch/ret inst: call 0x557029b014b0
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
  Exe .text
INSTSELECTOR: instruction to be included push r14
  INSTSELECTOR: instruction to be included cmp rbp, r13
Exe .text
  INSTSELECTOR: instruction to be included push r13
Exe .text
  Exe .text
instcount: branch/ret inst: jnb 0x557029b06f00
  INSTSELECTOR: instruction to be included mov r13d, edi
Exe .text
  Exe .text
INSTSELECTOR: instruction to be included mov rbx, rbp
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 Exe .text
  INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
INSTSELECTOR: instruction to be included push rbp
  Exe .text
Exe .text
  INSTSELECTOR: instruction to be included lea rbp, ptr [rbx+0x8]
INSTSELECTOR: instruction to be included push rbx
  Exe .text
Exe .text
  INSTSELECTOR: instruction to be included test rdi, rdi
INSTSELECTOR: instruction to be included sub rsp, 0x168
  Exe .text
Exe .text
  instcount: branch/ret inst: jz 0x557029b06ec0
Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x0
 Exe .text
  Exe .text
Exe .text
  instcount: branch/ret inst: jz 0x557029b06ec0
INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x13d15], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x15e0f]
 Exe .text
 INSTSELECTOR: instruction to be included xor r14d, r14d
 Exe .text
 INSTSELECTOR: instruction to be included cmp edi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included setnz r14b
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 Exe .text
 instcount: branch/ret inst: jz 0x557029affcab
 Exe .text
 INSTSELECTOR: instruction to be included or r14d, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rsp+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, r14d
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r15
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af86d0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0xca97], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06f1d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xca9f]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06f28
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rsp+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, r14d
 Exe .text
  INSTSELECTOR: instruction to be included mov rdi, r15
Exe .text
  Exe .text
INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
  Exe .text
instcount: branch/ret inst: call 0x557029af86d0
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01340
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x1f], 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01300
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b01410
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b01340
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x2
 Exe .text
 instcount: branch/ret inst: call 0x557029b06f40
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0134e
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x14997], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b013c8
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x12093]
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01371
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029b001e0
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x137b4], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rdi+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included test ax, ax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0023b
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rax-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x15ab4]
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included shl r12, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included add r12, rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r13
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0022e
 Exe .text
 instcount: branch/ret inst: call 0x557029af85c0
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x557029b00248
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029af85c0
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [rbx+0x1f], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x13195]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x1318e]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b00270
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b00260
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x1372a], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0028a
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x1372a], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0028a
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x13732]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b00298
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbp+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b01360
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afba1b
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 Exe .text
 instcount: branch/ret inst: jmp 0x557029afb944
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x17f8d]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afba8f
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x50]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x11
 Exe .text
 instcount: branch/ret inst: call 0x557029b09760
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jz 0x557029b097c0
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, esi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0xa22d], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, ebp
 Exe .text
 instcount: branch/ret inst: call 0x557029b093d0
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rsp+0x68]
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x557029afc1a0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edx
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x10
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x20
 Exe .text
 instcount: branch/ret inst: call 0x557029b098b0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included or esi, edi
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rip+0x9e61]
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, esi
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [r15+0x138]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdx
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x9766]
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x9757]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [r15]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09908
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b09933
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included and edx, r14d
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, r13d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09900
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rcx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09970
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x9712]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09908
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15, r12
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b098f0
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09977
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0994a
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [r15]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09908
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b09933
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09933
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbx+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included and edx, r14d
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, r13d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09900
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rcx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09970
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rbx]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x9712]
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b09908
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15, r12
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b098f0
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b09977
 Exe .text
 instcount: branch/ret inst: call 0x557029b020c0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x10f6c]
 Exe .text
 instcount: branch/ret inst: call 0x557029b01fd0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x1105a]
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rbp+rbp*1]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rbx
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029b020b1
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rbx+0x80]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, 0x80
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x13abe]
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rip+0x1103f]
 Exe .text
 INSTSELECTOR: instruction to be included cmovb rbx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x1103c]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rdx
 Exe .text
 instcount: branch/ret inst: jz 0x557029b02022
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b02050
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 Exe .text
 instcount: branch/ret inst: call 0x557029b01dd0
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01e97
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x1122d]
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, rdx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x11b58], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b01e5c
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x11b60]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b01e90
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x111d5]
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rip+0x111de]
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [r8+rbx*1]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 Exe .text
 instcount: branch/ret inst: call 0x557029af88a0
 Exe .text
 INSTSELECTOR: instruction to be included add qword ptr [rip+0x10ff9], rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x10f70]
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b09918
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included sub rdi, qword ptr [rip+0x96ec]
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b01dd0
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rbp]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x2f
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x557029af8750
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029afc245
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 Exe .text
 instcount: branch/ret inst: call 0x557029afbcd0
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdx
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xf799]
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xa8
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r13
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r15
 Exe .text
 instcount: branch/ret inst: call 0x557029af8820
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp edi, 0x11
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06c80
 Exe .text
 INSTSELECTOR: instruction to be included lea eax, ptr [rdi-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0xc85d]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cdqe 
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp edi, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06c58
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0xc890], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b06c54
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0xcd40]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06cb8
 Exe .text
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0xc8e0], 0x0
 Exe .text
 Exe .text
 instcount: branch/ret inst: jz 0x557029b06cb0
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, eax
 Exe .text
 INSTSELECTOR: instruction to be included setnz bl
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 Exe .text
 INSTSELECTOR: instruction to be included or bl, al
 Exe .text
 instcount: branch/ret inst: jnz 0x557029affda0
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rsp+0xa0]
 Exe .text
 instcount: branch/ret inst: call 0x557029af8890
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, r12d
 Exe .text
 instcount: branch/ret inst: jle 0x557029afff27
 Exe .text
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rip+0x13638]
 Exe .text
 INSTSELECTOR: instruction to be included mov r8d, dword ptr [rsp+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r10
 Exe .text
 INSTSELECTOR: instruction to be included test r10, r10
 Exe .text
 instcount: branch/ret inst: jz 0x557029affe4d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi+0x1e], 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029affe40
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, word ptr [rdi+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included xor r9d, r9d
 Exe .text
 INSTSELECTOR: instruction to be included shl rcx, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included add rcx, rax
 Exe .text
 instcount: branch/ret inst: jmp 0x557029affe12
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rax], r12d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029affdf0
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r8d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jnz 0x557029affdf8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x10
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 Exe .text
 instcount: branch/ret inst: jnbe 0x557029affe12
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 Exe .text
 instcount: branch/ret inst: jz 0x557029affe30
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, 0x7f
 Exe .text
 instcount: branch/ret inst: jnz 0x557029affe09
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x10
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 Exe .text
 instcount: branch/ret inst: jbe 0x557029affe3b
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x10
 Exe .text
 INSTSELECTOR: instruction to be included cmp rcx, rax
 Exe .text
 instcount: branch/ret inst: jbe 0x557029affe3b
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rax], r12d
 Exe .text
 instcount: branch/ret inst: jnz 0x557029affdf0
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r8d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0xffffffff
 Exe .text
 instcount: branch/ret inst: jnz 0x557029affdf8
 Exe .text
 INSTSELECTOR: instruction to be included test r9, r9
 Exe .text
 instcount: branch/ret inst: jnz 0x557029affe65
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdi+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 Exe .text
 instcount: branch/ret inst: jnz 0x557029affdc8
 Exe .text
 INSTSELECTOR: instruction to be included cmp r8b, 0x7f
 Exe .text
 instcount: branch/ret inst: jz 0x557029afff27
 Exe .text
 INSTSELECTOR: instruction to be included cmp r9, qword ptr [rsp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included setz bl
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 Exe .text
 instcount: branch/ret inst: jz 0x557029affd4e
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [r9+0x1e]
 Exe .text
 INSTSELECTOR: instruction to be included or byte ptr [r9+0x1f], 0x10
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, esi
 Exe .text
 instcount: branch/ret inst: jz 0x557029affd4e
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029affd4e
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x13c53], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029affd65
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x13c5b]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afff1d
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jnz 0x557029affed0
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 Exe .text
 instcount: branch/ret inst: jnz 0x557029affed0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x158]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afff2e
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x168
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x120]
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rsp+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029affb60
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, bh
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x7f
 Exe .text
 instcount: branch/ret inst: jz 0x557029affbc0
 Exe .text
 INSTSELECTOR: instruction to be included cmp sil, 0x7f
 Exe .text
 instcount: branch/ret inst: jz 0x557029affbe8
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 Exe .text
 instcount: branch/ret inst: jz 0x557029affb91
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029affc50
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xd
 Exe .text
 instcount: branch/ret inst: jz 0x557029affc50
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 Exe .text
 instcount: branch/ret inst: call 0x557029af8970
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 Exe .text
 instcount: branch/ret inst: jmp 0x557029affbb2
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jz 0x557029affd6d
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rip+0x131cd]
 Exe .text
 INSTSELECTOR: instruction to be included add eax, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 INSTSELECTOR: instruction to be included cdqe 
 Exe .text
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029b077d0
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x158]
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afff2e
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x168
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp+0x1e], 0x0
 Exe .text
 instcount: branch/ret inst: jz 0x557029b014d0
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rbp+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included shl rax, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included add rax, qword ptr [rbp+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rax-0xc]
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, ah
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ecx
 Exe .text
 INSTSELECTOR: instruction to be included and edx, 0x7f
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b01520
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x1f], 0x2
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0153a
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x7f
 Exe .text
 instcount: branch/ret inst: jz 0x557029b015b8
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01568
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rdx+0x80]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x1f], 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01505
 Exe .text
 INSTSELECTOR: instruction to be included or byte ptr [rbp+0x1f], 0x1
 Exe .text
 instcount: branch/ret inst: jmp 0x557029b0152d
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rdx+0x80]
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rbp+0x1f], 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b01505
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, dword ptr [rip+0x1457c]
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0x11aea]
 Exe .text
 instcount: branch/ret inst: call 0x557029af8a10
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp+0x1e], 0x2
 Exe .text
 instcount: branch/ret inst: jz 0x557029b015a0
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029b001e0
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x137b4], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rdi+0x1c]
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rdi+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included test ax, ax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0023b
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rax-0x1]
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x15ab4]
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 Exe .text
 INSTSELECTOR: instruction to be included shl r12, 0x4
 Exe .text
 INSTSELECTOR: instruction to be included add r12, rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp+0x8]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r13
 Exe .text
 instcount: branch/ret inst: jz 0x557029b0022e
 Exe .text
 instcount: branch/ret inst: call 0x557029af85c0
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x10
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r12
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b00220
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbx+0x10]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 Exe .text
 instcount: branch/ret inst: jz 0x557029b00248
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 Exe .text
 instcount: branch/ret inst: call 0x557029af85c0
 Exe .text
 INSTSELECTOR: instruction to be included and byte ptr [rbx+0x1f], 0xf7
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x13195]
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x1318e]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rax
 Exe .text
 instcount: branch/ret inst: jz 0x557029b00270
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+0x20]
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rbx
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b00260
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x20
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x1372a], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0028a
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x20]
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x1372a], 0x1
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b0028a
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x13732]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029b00298
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 Exe .text
 instcount: branch/ret inst: ret 
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rax
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 Exe .text
 Exe .text
 instcount: branch/ret inst: call 0x557029af89a0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x1b7f7]
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afa2ce
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x1ba17], 0x0
 Exe .text
 instcount: branch/ret inst: jnz 0x557029afa2e4
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x2
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 Exe .text
 instcount: branch/ret inst: call 0x557029af8850
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x2
 Exe .text
 instcount: branch/ret inst: call 0x557029af85b0
