Pin: pin-3.11-97998-7ecce2dac
Copyright 2002-2019 Intel Corporation.
 Invalid RTN mov rcx, qword ptr [rip+0x34c1e1]
 Invalid RTN lea rax, ptr [rip+0x1c842]
 Invalid RTN mov edx, dword ptr [rcx+0xb4]
 Invalid RTN test edx, 0x80000
 Invalid RTN jnz 0x7f09145a8ce5
 Invalid RTN mov eax, edx
 Invalid RTN and eax, 0x101000
 Invalid RTN cmp eax, 0x1000
 Invalid RTN jz 0x7f09145a8cf0
 Invalid RTN test dh, 0x8
 Invalid RTN jnz 0x7f09145a8d20
 Invalid RTN test byte ptr [rcx+0x79], 0x2
 Invalid RTN jz 0x7f09145a8cb1
 Invalid RTN test edx, 0x40000
 Invalid RTN jz 0x7f09145a8cd0
 Invalid RTN test byte ptr [rcx+0x85], 0x2
 Invalid RTN lea rdx, ptr [rip+0x1c861]
 Invalid RTN lea rax, ptr [rip+0x1c79a]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN and edx, 0x2
 Invalid RTN lea rax, ptr [rip+0xd0446]
 Invalid RTN lea rdx, ptr [rip+0xd5aaf]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rdx, qword ptr [rip+0x34d111]
 Invalid RTN lea rax, ptr [rip+0x18e22]
 Invalid RTN test byte ptr [rdx+0xb4], 0x10
 Invalid RTN jnz 0x7f09145a7d6d
 Invalid RTN test byte ptr [rdx+0x79], 0x2
 Invalid RTN lea rax, ptr [rip+0xac7e]
 Invalid RTN lea rdx, ptr [rip+0xdf397]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rdx, qword ptr [rip+0x34bf01]
 Invalid RTN lea rax, ptr [rip+0xec022]
 Invalid RTN mov ecx, dword ptr [rdx+0xb4]
 Invalid RTN test cl, 0x40
 Invalid RTN jnz 0x7f09145a8f95
 Invalid RTN mov edx, dword ptr [rdx+0x78]
 Invalid RTN test edx, 0x100000
 Invalid RTN jz 0x7f09145a8f80
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xe7572]
 Invalid RTN jz 0x7f09145a8f95
 Invalid RTN and dh, 0x2
 Invalid RTN lea rax, ptr [rip+0xd6e6]
 Invalid RTN lea rdx, ptr [rip+0xd830f]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rdx, qword ptr [rip+0x34d6c1]
 Invalid RTN lea rax, ptr [rip+0x1bd92]
 Invalid RTN test byte ptr [rdx+0xb4], 0x10
 Invalid RTN jnz 0x7f09145a77bd
 Invalid RTN test byte ptr [rdx+0x79], 0x2
 Invalid RTN lea rax, ptr [rip+0x1bbbe]
 Invalid RTN lea rdx, ptr [rip+0x14227]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34d0e1]
 Invalid RTN lea rdx, ptr [rip+0xf0642]
 Invalid RTN mov eax, dword ptr [rax+0xb4]
 Invalid RTN and eax, 0x20c00
 Invalid RTN cmp eax, 0xc00
 Invalid RTN lea rax, ptr [rip+0x1359b]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN lea rax, ptr [rip+0xe0de1]
 Invalid RTN sub rsp, 0x28
 Invalid RTN lea rcx, ptr [rip+0xe0ddb]
 Invalid RTN mov edx, 0x5f
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN mov eax, 0x50e3a8
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7f09145dc9af
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7f09145dca09
 Invalid RTN lea rdi, ptr [rip+0xe27f0]
 Invalid RTN mov rsi, rsp
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN call 0x7f09146713b0
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7f09145dc9af
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7f09145dca09
 Invalid RTN lea rdi, ptr [rip+0xe27f0]
 Invalid RTN mov rsi, rsp
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN call 0x7f09146713b0
 Invalid RTN sub rsp, 0x38
 Invalid RTN mov r8, rsi
 Invalid RTN mov rax, qword ptr fs:[0x28]
 Invalid RTN mov qword ptr [rsp+0x28], rax
 Invalid RTN xor eax, eax
 Invalid RTN mov rax, qword ptr [rip+0x283a8a]
 Invalid RTN mov rsi, qword ptr [rax+0x158]
 Invalid RTN test rsi, rsi
 Invalid RTN jz 0x7f0914671450
 Invalid RTN pxor xmm0, xmm0
 Invalid RTN lea rdx, ptr [rsp+0x10]
 Invalid RTN mov qword ptr [rsp+0x20], 0x0
 Invalid RTN lea rcx, ptr [rsi+0x388]
 Invalid RTN xor r9d, r9d
 Invalid RTN mov qword ptr [rsp+0x8], rdx
 Invalid RTN lea rdx, ptr [rsp+0x8]
 Invalid RTN movaps xmmword ptr [rsp+0x10], xmm0
 Invalid RTN mov byte ptr [rsp+0x14], 0x20
 Invalid RTN push 0x0
 Invalid RTN push 0x0
 Invalid RTN call qword ptr [rax+0x178]
 Invalid RTN mov rcx, qword ptr [rsp+0x18]
 Invalid RTN pop rdx
 Invalid RTN xor edx, edx
 Invalid RTN test rcx, rcx
 Invalid RTN pop rsi
 Invalid RTN jz 0x7f091467142e
 Invalid RTN test rax, rax
 Invalid RTN jz 0x7f091467142a
 Invalid RTN mov rdx, qword ptr [rax]
 Invalid RTN add rdx, qword ptr [rcx+0x8]
 Invalid RTN mov rdi, qword ptr [rsp+0x28]
 Invalid RTN xor rdi, qword ptr fs:[0x28]
 Invalid RTN mov rax, rdx
 Invalid RTN jnz 0x7f0914671454
 Invalid RTN add rsp, 0x38
 Invalid RTN ret 
 Invalid RTN lea rdx, ptr [rip-0x8d]
 Invalid RTN test rax, rax
 Invalid RTN cmovz rax, rdx
 Invalid RTN add rsp, 0x28
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34a691]
 Invalid RTN lea rdx, ptr [rip+0xe9f22]
 Invalid RTN mov eax, dword ptr [rax+0xb4]
 Invalid RTN and eax, 0x20c00
 Invalid RTN cmp eax, 0xc00
 Invalid RTN lea rax, ptr [rip+0xb4bb]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x32da41]
 Invalid RTN lea rdx, ptr [rip+0xd1fb2]
 Invalid RTN mov eax, dword ptr [rax+0xb4]
 Invalid RTN and eax, 0x20c00
 Invalid RTN cmp eax, 0xc00
 Invalid RTN lea rax, ptr [rip+0x12d0b]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rcx, qword ptr [rip+0x34c071]
 Invalid RTN lea rax, ptr [rip+0x1c6b2]
 Invalid RTN mov edx, dword ptr [rcx+0xb4]
 Invalid RTN test edx, 0x80000
 Invalid RTN jnz 0x7f09145a8e55
 Invalid RTN mov eax, edx
 Invalid RTN and eax, 0x101000
 Invalid RTN cmp eax, 0x1000
 Invalid RTN jz 0x7f09145a8e60
 Invalid RTN test dh, 0x8
 Invalid RTN jnz 0x7f09145a8e90
 Invalid RTN test byte ptr [rcx+0x79], 0x2
 Invalid RTN jz 0x7f09145a8e21
 Invalid RTN test edx, 0x40000
 Invalid RTN jz 0x7f09145a8e40
 Invalid RTN test byte ptr [rcx+0x85], 0x2
 Invalid RTN lea rdx, ptr [rip+0x1c6d1]
 Invalid RTN lea rax, ptr [rip+0x1c60a]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN and edx, 0x2
 Invalid RTN lea rax, ptr [rip+0xcd8e6]
 Invalid RTN lea rdx, ptr [rip+0xd2e4f]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34c241]
 Invalid RTN mov ecx, dword ptr [rax+0xb4]
 Invalid RTN mov edx, dword ptr [rax+0x78]
 Invalid RTN mov eax, ecx
 Invalid RTN and eax, 0x20400
 Invalid RTN cmp eax, 0x400
 Invalid RTN jz 0x7f09145a8c58
 Invalid RTN test edx, 0x80000
 Invalid RTN lea rax, ptr [rip+0xf1385]
 Invalid RTN jnz 0x7f09145a8c52
 Invalid RTN and dh, 0x2
 Invalid RTN lea rax, ptr [rip+0xd629]
 Invalid RTN lea rdx, ptr [rip+0xf4ca2]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN ret 
 Invalid RTN mov rcx, qword ptr [rip+0x34d151]
 Invalid RTN mov edx, dword ptr [rcx+0x78]
 Invalid RTN test edx, 0x100000
 Invalid RTN jz 0x7f09145a7d22
 Invalid RTN test byte ptr [rcx+0xb5], 0x2
 Invalid RTN lea rax, ptr [rip+0xe77f0]
 Invalid RTN jz 0x7f09145a7d37
 Invalid RTN and dh, 0x2
 Invalid RTN lea rax, ptr [rip+0xc3f4]
 Invalid RTN lea rdx, ptr [rip+0xcd28d]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN and dh, 0x2
 Invalid RTN lea rax, ptr [rip+0xc3f4]
 Invalid RTN lea rdx, ptr [rip+0xcd28d]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rdx, qword ptr [rip+0x34d651]
 Invalid RTN lea rax, ptr [rip+0xc662]
 Invalid RTN test byte ptr [rdx+0xb4], 0x10
 Invalid RTN jnz 0x7f09145a782d
 Invalid RTN test byte ptr [rdx+0x79], 0x2
 Invalid RTN lea rax, ptr [rip+0xb20e]
 Invalid RTN lea rdx, ptr [rip+0xcc537]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rcx, qword ptr [rip+0x34c111]
 Invalid RTN lea rax, ptr [rip+0x1cb62]
 Invalid RTN mov edx, dword ptr [rcx+0xb4]
 Invalid RTN test edx, 0x80000
 Invalid RTN jnz 0x7f09145a8da4
 Invalid RTN mov eax, edx
 Invalid RTN and eax, 0x101000
 Invalid RTN cmp eax, 0x1000
 Invalid RTN jz 0x7f09145a8db0
 Invalid RTN mov eax, dword ptr [rcx+0x84]
 Invalid RTN and eax, 0x200
 Invalid RTN and dh, 0x4
 Invalid RTN jz 0x7f09145a8d90
 Invalid RTN test eax, eax
 Invalid RTN lea rdx, ptr [rip+0x1cb37]
 Invalid RTN lea rax, ptr [rip+0x1cad0]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x32ed61]
 Invalid RTN lea rdx, ptr [rip+0xd35a2]
 Invalid RTN mov eax, dword ptr [rax+0xb4]
 Invalid RTN and eax, 0x20c00
 Invalid RTN cmp eax, 0xc00
 Invalid RTN lea rax, ptr [rip+0x1438b]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34d1b1]
 Invalid RTN lea rdx, ptr [rip+0xf0a72]
 Invalid RTN mov eax, dword ptr [rax+0xb4]
 Invalid RTN and eax, 0x20c00
 Invalid RTN cmp eax, 0xc00
 Invalid RTN lea rax, ptr [rip+0x13afb]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34d5e1]
 Invalid RTN lea rdx, ptr [rip+0xec7f2]
 Invalid RTN test byte ptr [rax+0x7a], 0x10
 Invalid RTN lea rax, ptr [rip+0x1d9c7]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rdx, qword ptr [rip+0x34beb1]
 Invalid RTN lea rax, ptr [rip+0xed642]
 Invalid RTN mov ecx, dword ptr [rdx+0xb4]
 Invalid RTN test cl, 0x40
 Invalid RTN jnz 0x7f09145a8fe5
 Invalid RTN mov edx, dword ptr [rdx+0x78]
 Invalid RTN test edx, 0x100000
 Invalid RTN jz 0x7f09145a8fd0
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xe90d2]
 Invalid RTN jz 0x7f09145a8fe5
 Invalid RTN and dh, 0x2
 Invalid RTN lea rax, ptr [rip+0xf8d6]
 Invalid RTN lea rdx, ptr [rip+0xda40f]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rdx, qword ptr [rip+0x34d611]
 Invalid RTN lea rax, ptr [rip+0x18cf2]
 Invalid RTN test byte ptr [rdx+0xb4], 0x10
 Invalid RTN jnz 0x7f09145a786d
 Invalid RTN test byte ptr [rdx+0x79], 0x2
 Invalid RTN lea rax, ptr [rip+0x18b1e]
 Invalid RTN lea rdx, ptr [rip+0xde0e7]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rcx, qword ptr [rip+0x34bd71]
 Invalid RTN lea rax, ptr [rip+0x1c3d2]
 Invalid RTN mov edx, dword ptr [rcx+0xb4]
 Invalid RTN test edx, 0x80000
 Invalid RTN jnz 0x7f09145a9155
 Invalid RTN mov eax, edx
 Invalid RTN and eax, 0x101000
 Invalid RTN cmp eax, 0x1000
 Invalid RTN jz 0x7f09145a9160
 Invalid RTN test dh, 0x8
 Invalid RTN jnz 0x7f09145a9190
 Invalid RTN test byte ptr [rcx+0x79], 0x2
 Invalid RTN jz 0x7f09145a9121
 Invalid RTN test edx, 0x40000
 Invalid RTN jz 0x7f09145a9140
 Invalid RTN test byte ptr [rcx+0x85], 0x2
 Invalid RTN lea rdx, ptr [rip+0x1c3f1]
 Invalid RTN lea rax, ptr [rip+0x1c32a]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN and edx, 0x2
 Invalid RTN lea rax, ptr [rip+0xcd606]
 Invalid RTN lea rdx, ptr [rip+0xd2b6f]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rcx, qword ptr [rip+0x32c791]
 Invalid RTN lea rax, ptr [rip+0xd15a2]
 Invalid RTN mov edx, dword ptr [rcx+0xb4]
 Invalid RTN and edx, 0x20c00
 Invalid RTN cmp edx, 0xc00
 Invalid RTN jz 0x7f09145c86f8
 Invalid RTN test byte ptr [rcx+0x7a], 0x8
 Invalid RTN lea rax, ptr [rip+0x12473]
 Invalid RTN lea rdx, ptr [rip+0x1224c]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x32d991]
 Invalid RTN mov edx, dword ptr [rax+0xb4]
 Invalid RTN lea rax, ptr [rip-0x1c94]
 Invalid RTN mov ecx, edx
 Invalid RTN and ecx, 0x20c00
 Invalid RTN cmp ecx, 0xc00
 Invalid RTN jz 0x7f09145c74f0
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34d0b1]
 Invalid RTN lea rdx, ptr [rip+0xec402]
 Invalid RTN test byte ptr [rax+0x7a], 0x10
 Invalid RTN lea rax, ptr [rip+0x1d537]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34d691]
 Invalid RTN mov edx, dword ptr [rax+0xb4]
 Invalid RTN lea rax, ptr [rip+0xf07cc]
 Invalid RTN mov ecx, edx
 Invalid RTN and ecx, 0x20c00
 Invalid RTN cmp ecx, 0xc00
 Invalid RTN jz 0x7f09145a77f9
 Invalid RTN and edx, 0x4
 Invalid RTN lea rax, ptr [rip+0x13712]
 Invalid RTN lea rdx, ptr [rip+0xf5ddb]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34d1e1]
 Invalid RTN lea rdx, ptr [rip+0xf0912]
 Invalid RTN mov eax, dword ptr [rax+0xb4]
 Invalid RTN and eax, 0x20c00
 Invalid RTN cmp eax, 0xc00
 Invalid RTN lea rax, ptr [rip+0x1398b]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x342791]
 Invalid RTN lea rdx, ptr [rip+0xe2162]
 Invalid RTN mov eax, dword ptr [rax+0xb4]
 Invalid RTN and eax, 0x20c00
 Invalid RTN cmp eax, 0xc00
 Invalid RTN lea rax, ptr [rip+0x37bb]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rdx, qword ptr [rip+0x34be61]
 Invalid RTN lea rax, ptr [rip+0xebf92]
 Invalid RTN mov ecx, dword ptr [rdx+0xb4]
 Invalid RTN test cl, 0x40
 Invalid RTN jnz 0x7f09145a9035
 Invalid RTN mov edx, dword ptr [rdx+0x78]
 Invalid RTN test edx, 0x100000
 Invalid RTN jz 0x7f09145a9020
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xe74e2]
 Invalid RTN jz 0x7f09145a9035
 Invalid RTN and dh, 0x2
 Invalid RTN lea rax, ptr [rip+0xd656]
 Invalid RTN lea rdx, ptr [rip+0xd827f]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34c271]
 Invalid RTN lea rdx, ptr [rip+0xeb832]
 Invalid RTN mov eax, dword ptr [rax+0xb4]
 Invalid RTN and eax, 0x20c00
 Invalid RTN cmp eax, 0xc00
 Invalid RTN lea rax, ptr [rip+0xcd6b]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x32dfa1]
 Invalid RTN lea rdx, ptr [rip+0xd2c02]
 Invalid RTN mov eax, dword ptr [rax+0xb4]
 Invalid RTN and eax, 0x20c00
 Invalid RTN cmp eax, 0xc00
 Invalid RTN lea rax, ptr [rip+0x13d2b]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34ce01]
 Invalid RTN lea rdx, ptr [rip+0xec2a2]
 Invalid RTN test byte ptr [rax+0x7a], 0x10
 Invalid RTN lea rax, ptr [rip+0x1d327]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rdx, qword ptr [rip+0x34bf31]
 Invalid RTN lea rax, ptr [rip+0x192d2]
 Invalid RTN test byte ptr [rdx+0xb4], 0x10
 Invalid RTN jnz 0x7f09145a8f4d
 Invalid RTN test byte ptr [rdx+0x79], 0x2
 Invalid RTN lea rax, ptr [rip+0x9a3e]
 Invalid RTN lea rdx, ptr [rip+0xe2547]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rdx, qword ptr [rip+0x34bf61]
 Invalid RTN lea rax, ptr [rip+0x18c52]
 Invalid RTN test byte ptr [rdx+0xb4], 0x10
 Invalid RTN jnz 0x7f09145a8f1d
 Invalid RTN test byte ptr [rdx+0x79], 0x2
 Invalid RTN lea rax, ptr [rip+0x1754e]
 Invalid RTN lea rdx, ptr [rip+0xe0d67]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34a661]
 Invalid RTN lea rdx, ptr [rip+0xed9d2]
 Invalid RTN mov eax, dword ptr [rax+0xb4]
 Invalid RTN and eax, 0x20c00
 Invalid RTN cmp eax, 0xc00
 Invalid RTN lea rax, ptr [rip+0x1090b]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rdx, qword ptr [rip+0x34be11]
 Invalid RTN lea rax, ptr [rip+0xed5b2]
 Invalid RTN mov ecx, dword ptr [rdx+0xb4]
 Invalid RTN test cl, 0x40
 Invalid RTN jnz 0x7f09145a9085
 Invalid RTN mov edx, dword ptr [rdx+0x78]
 Invalid RTN test edx, 0x100000
 Invalid RTN jz 0x7f09145a9070
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xe9042]
 Invalid RTN jz 0x7f09145a9085
 Invalid RTN and dh, 0x2
 Invalid RTN lea rax, ptr [rip+0xf846]
 Invalid RTN lea rdx, ptr [rip+0xda37f]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN lea rax, ptr [rip+0xe0d01]
 Invalid RTN sub rsp, 0x28
 Invalid RTN lea rcx, ptr [rip+0xe0cfb]
 Invalid RTN mov edx, 0x5f
 Invalid RTN mov qword ptr [rsp], rax
 Invalid RTN mov rax, 0x103ae75f6
 Invalid RTN mov qword ptr [rsp+0x8], rax
 Invalid RTN mov eax, 0x50e3a8
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7f09145dca8f
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7f09145dcae9
 Invalid RTN lea rdi, ptr [rip+0xe271c]
 Invalid RTN mov rsi, rsp
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN call 0x7f09146713b0
 Invalid RTN shl rax, 0x4
 Invalid RTN add rcx, 0x1
 Invalid RTN add rax, rdx
 Invalid RTN mov rdx, rax
 Invalid RTN shr rdx, 0x18
 Invalid RTN and edx, 0xf0
 Invalid RTN xor rax, rdx
 Invalid RTN movzx edx, byte ptr [rcx]
 Invalid RTN test dl, dl
 Invalid RTN jnz 0x7f09145dca8f
 Invalid RTN and eax, 0xfffffff
 Invalid RTN cmp rax, 0x3ae75f6
 Invalid RTN jnz 0x7f09145dcae9
 Invalid RTN lea rdi, ptr [rip+0xe271c]
 Invalid RTN mov rsi, rsp
 Invalid RTN mov qword ptr [rsp+0x10], 0x0
 Invalid RTN call 0x7f09146713b0
 Invalid RTN lea rdx, ptr [rip-0xad]
 Invalid RTN test rax, rax
 Invalid RTN cmovz rax, rdx
 Invalid RTN add rsp, 0x28
 Invalid RTN ret 
 Invalid RTN mov rcx, qword ptr [rip+0x34c1e1]
 Invalid RTN lea rax, ptr [rip+0x1c842]
 Invalid RTN mov edx, dword ptr [rcx+0xb4]
 Invalid RTN test edx, 0x80000
 Invalid RTN jnz 0x7f09145a8ce5
 Invalid RTN mov eax, edx
 Invalid RTN and eax, 0x101000
 Invalid RTN cmp eax, 0x1000
 Invalid RTN jz 0x7f09145a8cf0
 Invalid RTN test dh, 0x8
 Invalid RTN jnz 0x7f09145a8d20
 Invalid RTN mov rax, qword ptr [rip+0x34c331]
 Invalid RTN lea rdx, ptr [rip-0x59e]
 Invalid RTN test byte ptr [rax+0xb4], 0x10
 Invalid RTN lea rax, ptr [rip+0x1c274]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rdx, qword ptr [rip+0x34bf01]
 Invalid RTN lea rax, ptr [rip+0xec022]
 Invalid RTN mov ecx, dword ptr [rdx+0xb4]
 Invalid RTN test cl, 0x40
 Invalid RTN jnz 0x7f09145a8f95
 Invalid RTN mov edx, dword ptr [rdx+0x78]
 Invalid RTN test edx, 0x100000
 Invalid RTN jz 0x7f09145a8f80
 Invalid RTN and ch, 0x2
 Invalid RTN lea rax, ptr [rip+0xe7572]
 Invalid RTN jz 0x7f09145a8f95
 Invalid RTN mov rdx, qword ptr [rip+0x34d611]
 Invalid RTN lea rax, ptr [rip+0x18cf2]
 Invalid RTN test byte ptr [rdx+0xb4], 0x10
 Invalid RTN jnz 0x7f09145a786d
 Invalid RTN test byte ptr [rdx+0x79], 0x2
 Invalid RTN lea rax, ptr [rip+0x18b1e]
 Invalid RTN lea rdx, ptr [rip+0xde0e7]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34a661]
 Invalid RTN lea rdx, ptr [rip+0xed9d2]
 Invalid RTN mov eax, dword ptr [rax+0xb4]
 Invalid RTN and eax, 0x20c00
 Invalid RTN cmp eax, 0xc00
 Invalid RTN lea rax, ptr [rip+0x1090b]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rdx, qword ptr [rip+0x34bf61]
 Invalid RTN lea rax, ptr [rip+0x18c52]
 Invalid RTN test byte ptr [rdx+0xb4], 0x10
 Invalid RTN jnz 0x7f09145a8f1d
 Invalid RTN test byte ptr [rdx+0x79], 0x2
 Invalid RTN lea rax, ptr [rip+0x1754e]
 Invalid RTN lea rdx, ptr [rip+0xe0d67]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34d1e1]
 Invalid RTN lea rdx, ptr [rip+0xf0912]
 Invalid RTN mov eax, dword ptr [rax+0xb4]
 Invalid RTN and eax, 0x20c00
 Invalid RTN cmp eax, 0xc00
 Invalid RTN lea rax, ptr [rip+0x1398b]
 Invalid RTN cmovz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34d691]
 Invalid RTN mov edx, dword ptr [rax+0xb4]
 Invalid RTN lea rax, ptr [rip+0xf07cc]
 Invalid RTN mov ecx, edx
 Invalid RTN and ecx, 0x20c00
 Invalid RTN cmp ecx, 0xc00
 Invalid RTN jz 0x7f09145a77f9
 Invalid RTN and edx, 0x4
 Invalid RTN lea rax, ptr [rip+0x13712]
 Invalid RTN lea rdx, ptr [rip+0xf5ddb]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34ce01]
 Invalid RTN lea rdx, ptr [rip+0xec2a2]
 Invalid RTN test byte ptr [rax+0x7a], 0x10
 Invalid RTN lea rax, ptr [rip+0x1d327]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rax, qword ptr [rip+0x34d5e1]
 Invalid RTN lea rdx, ptr [rip+0xec7f2]
 Invalid RTN test byte ptr [rax+0x7a], 0x10
 Invalid RTN lea rax, ptr [rip+0x1d9c7]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rdx, qword ptr [rip+0x34d651]
 Invalid RTN lea rax, ptr [rip+0xc662]
 Invalid RTN test byte ptr [rdx+0xb4], 0x10
 Invalid RTN jnz 0x7f09145a782d
 Invalid RTN test byte ptr [rdx+0x79], 0x2
 Invalid RTN lea rax, ptr [rip+0xb20e]
 Invalid RTN lea rdx, ptr [rip+0xcc537]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rcx, qword ptr [rip+0x34bd71]
 Invalid RTN lea rax, ptr [rip+0x1c3d2]
 Invalid RTN mov edx, dword ptr [rcx+0xb4]
 Invalid RTN test edx, 0x80000
 Invalid RTN jnz 0x7f09145a9155
 Invalid RTN mov eax, edx
 Invalid RTN and eax, 0x101000
 Invalid RTN cmp eax, 0x1000
 Invalid RTN jz 0x7f09145a9160
 Invalid RTN test dh, 0x8
 Invalid RTN jnz 0x7f09145a9190
 Invalid RTN mov rax, qword ptr [rip+0x34d0b1]
 Invalid RTN lea rdx, ptr [rip+0xec402]
 Invalid RTN test byte ptr [rax+0x7a], 0x10
 Invalid RTN lea rax, ptr [rip+0x1d537]
 Invalid RTN cmovnz rax, rdx
 Invalid RTN ret 
 Invalid RTN mov rcx, qword ptr [rip+0x34c071]
 Invalid RTN lea rax, ptr [rip+0x1c6b2]
 Invalid RTN mov edx, dword ptr [rcx+0xb4]
 Invalid RTN test edx, 0x80000
 Invalid RTN jnz 0x7f09145a8e55
 Invalid RTN mov eax, edx
 Invalid RTN and eax, 0x101000
 Invalid RTN cmp eax, 0x1000
 Invalid RTN jz 0x7f09145a8e60
 Invalid RTN test dh, 0x8
 Invalid RTN jnz 0x7f09145a8e90
 Invalid RTN mov rcx, qword ptr [rip+0x34c1e1]
 Invalid RTN lea rax, ptr [rip+0x1c842]
 Invalid RTN mov edx, dword ptr [rcx+0xb4]
 Invalid RTN test edx, 0x80000
 Invalid RTN jnz 0x7f09145a8ce5
 Invalid RTN mov eax, edx
 Invalid RTN and eax, 0x101000
 Invalid RTN cmp eax, 0x1000
 Invalid RTN jz 0x7f09145a8cf0
 Invalid RTN test dh, 0x8
 Invalid RTN jnz 0x7f09145a8d20
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rdx
 ins:mov r9, rdx
 reg:r9
 Exe .text
 INSTSELECTOR: instruction to be included pop rsi
 ins:pop rsi
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rsp
 ins:mov rdx, rsp
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included and rsp, 0xfffffffffffffff0
 ins:and rsp, 0xfffffffffffffff0
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rax
 ins:push rax
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rsp
 ins:push rsp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [rip+0x110ca]
 ins:lea r8, ptr [rip+0x110ca]
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x11053]
 ins:lea rcx, ptr [rip+0x11053]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip-0x1f4]
 ins:lea rdi, ptr [rip-0x1f4]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rdx
 ins:mov r15, rdx
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x2064ae]
 ins:lea r12, ptr [rip+0x2064ae]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0x2064ae]
 ins:lea rbp, ptr [rip+0x2064ae]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 ins:mov r13d, edi
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsi
 ins:mov r14, rsi
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included sub rbp, r12
 ins:sub rbp, r12
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sar rbp, 0x3
 ins:sar rbp, 0x3
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 ins:xor ebx, ebx
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r15
 ins:mov rdx, r15
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 ins:mov rsi, r14
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r13d
 ins:mov edi, r13d
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x218789]
 ins:lea rdi, ptr [rip+0x218789]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x218782]
 ins:lea rsi, ptr [rip+0x218782]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsi, rdi
 ins:sub rsi, rdi
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included sar rsi, 0x3
 ins:sar rsi, 0x3
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rsi
 ins:mov rax, rsi
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr rax, 0x3f
 ins:shr rax, 0x3f
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rsi, rax
 ins:add rsi, rax
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included sar rsi, 0x1
 ins:sar rsi, 0x1
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x218529]
 ins:mov rax, qword ptr [rip+0x218529]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 ins:add rbx, 0x1
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rbx
 ins:cmp rbp, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x110
 ins:sub rsp, 0x110
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x40]
 ins:lea rdi, ptr [rsp+0x40]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x40]
 ins:lea rax, ptr [rsp+0x40]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x11
 ins:mov edi, 0x11
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x130
 ins:sub rsp, 0x130
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x2085f2]
 ins:lea rax, ptr [rip+0x2085f2]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, edi
 ins:movsxd rdx, edi
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdx
 ins:mov rbp, rdx
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xa0
 ins:sub rsp, 0xa0
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x20b1f1]
 ins:lea rax, ptr [rip+0x20b1f1]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax+rdx*8]
 ins:mov rax, qword ptr [rax+rdx*8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 ins:xor ebx, ebx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x0
 ins:cmp byte ptr [rax], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rax], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included setz bl
 ins:setz bl
 reg:bl
 Exe .text
 INSTSELECTOR: instruction to be included add ebx, 0x2
 ins:add ebx, 0x2
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x11
 ins:cmp ebp, 0x11
 reg:rflags
 NORMAL FLAG REG: inst cmp ebp, 0x11
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x2
 ins:mov eax, 0x2
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, eax
 ins:cmovz ebx, eax
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 ins:lea r12d, ptr [rbp-0x1]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x20daa3]
 ins:lea r13, ptr [rip+0x20daa3]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 ins:movsxd r12, r12d
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 ins:movsx eax, byte ptr [r13+r12*1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 ins:cmp al, 0x4
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x20d6ba]
 ins:mov eax, dword ptr [rip+0x20d6ba]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0x16
 ins:cmp edx, 0x16
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x4752]
 ins:lea rcx, ptr [rip+0x4752]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, edx
 ins:mov edx, edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rcx+rdx*4]
 ins:movsxd rax, dword ptr [rcx+rdx*4]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rcx
 ins:add rax, rcx
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 ins:mov ebx, 0x1
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebp, 0x11
 ins:cmp ebp, 0x11
 reg:rflags
 NORMAL FLAG REG: inst cmp ebp, 0x11
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x2
 ins:mov eax, 0x2
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, eax
 ins:cmovz ebx, eax
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 ins:lea r12d, ptr [rbp-0x1]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x20daa3]
 ins:lea r13, ptr [rip+0x20daa3]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 ins:movsxd r12, r12d
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 ins:movsx eax, byte ptr [r13+r12*1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 ins:cmp al, 0x4
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, eax
 ins:cmp ebx, eax
 reg:rflags
 NORMAL FLAG REG: inst cmp ebx, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsp
 ins:mov r14, rsp
 reg:r14
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsp
 ins:mov r14, rsp
 reg:r14
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 ins:cmp ebx, 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x3
 ins:cmp ebx, 0x3
 reg:rflags
 NORMAL FLAG REG: inst cmp ebx, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [r14+0x8]
 ins:lea rdi, ptr [r14+0x8]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip-0x1ff]
 ins:lea rax, ptr [rip-0x1ff]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [r14+0x8]
 ins:lea rdi, ptr [r14+0x8]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r14
 ins:mov rsi, r14
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebp
 ins:mov edi, ebp
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x98]
 ins:mov rax, qword ptr [rsp+0x98]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xa0
 ins:add rsp, 0xa0
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x208a69]
 ins:lea rdi, ptr [rip+0x208a69]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea r8, ptr [rip+0x209062]
 ins:lea r8, ptr [rip+0x209062]
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r9d, 0xa41a41a5
 ins:mov r9d, 0xa41a41a5
 reg:r9d
 Exe .text
 INSTSELECTOR: instruction to be included lea r10, ptr [rdi+0x100]
 ins:lea r10, ptr [rdi+0x100]
 reg:r10
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi+0x10]
 ins:mov rdx, qword ptr [rdi+0x10]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdx]
 ins:movzx esi, byte ptr [rdx]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 ins:mov ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 ins:shl ecx, 0x4
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included cmp sil, 0x3d
 ins:cmp sil, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx]
 ins:movzx eax, byte ptr [rdx]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 ins:add ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mul r9d
 ins:mul r9d
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add edx, eax
 ins:add edx, eax
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included shr edx, 0x5
 ins:shr edx, 0x5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul edx, edx, 0x27
 ins:imul edx, edx, 0x27
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 ins:sub ecx, edx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8+rcx*8]
 ins:mov rax, qword ptr [r8+rcx*8]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x20
 ins:add rdi, 0x20
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r10
 ins:cmp rdi, r10
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 ins:cmp al, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, al
 ins:movzx esi, al
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx]
 ins:movzx eax, byte ptr [rdx]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 ins:add ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mul r9d
 ins:mul r9d
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add edx, eax
 ins:add edx, eax
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included shr edx, 0x5
 ins:shr edx, 0x5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul edx, edx, 0x27
 ins:imul edx, edx, 0x27
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 ins:sub ecx, edx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8+rcx*8]
 ins:mov rax, qword ptr [r8+rcx*8]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x20
 ins:add rdi, 0x20
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r10
 ins:cmp rdi, r10
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mul r9d
 ins:mul r9d
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add edx, eax
 ins:add edx, eax
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included shr edx, 0x5
 ins:shr edx, 0x5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul edx, edx, 0x27
 ins:imul edx, edx, 0x27
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 ins:sub ecx, edx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r8+rcx*8]
 ins:mov rax, qword ptr [r8+rcx*8]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x20
 ins:add rdi, 0x20
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r10
 ins:cmp rdi, r10
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi+0x10]
 ins:mov rdx, qword ptr [rdi+0x10]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdx]
 ins:movzx esi, byte ptr [rdx]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 ins:mov ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 ins:shl ecx, 0x4
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included cmp sil, 0x3d
 ins:cmp sil, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x2959]
 ins:lea rax, ptr [rip+0x2959]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x207d93]
 ins:mov rbx, qword ptr [rip+0x207d93]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 ins:mov rdi, qword ptr [rbx]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rdi
 ins:mov r12, rdi
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rdi]
 ins:movzx ebx, byte ptr [rdi]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 ins:cmp bl, 0x5f
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, r12
 ins:mov rbp, r12
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+rbx*2+0x1], 0x4
 ins:test byte ptr [rax+rbx*2+0x1], 0x4
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, r12
 ins:mov rbp, r12
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 ins:add rbp, 0x1
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rbp]
 ins:movzx ebx, byte ptr [rbp]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 ins:test bl, bl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 ins:cmp bl, 0x5f
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+rbx*2], 0x8
 ins:test byte ptr [rax+rbx*2], 0x8
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rbp
 ins:mov rax, rbp
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 ins:add rbp, 0x1
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rbp]
 ins:movzx ebx, byte ptr [rbp]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 ins:test bl, bl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 ins:cmp bl, 0x5f
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 ins:mov rdi, qword ptr [rbx]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rax
 ins:cmp rdi, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x3d
 ins:cmp byte ptr [rax], 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x8
 ins:add rbx, 0x8
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 ins:mov rdi, qword ptr [rbx]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x9
 ins:mov esi, 0x9
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included movzx edi, byte ptr [rdi]
 ins:movzx edi, byte ptr [rdi]
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, edi
 ins:mov ecx, edi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 ins:shl ecx, 0x4
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included cmp dil, 0x3d
 ins:cmp dil, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test dil, dil
 ins:test dil, dil
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rbp
 ins:mov rdx, rbp
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx]
 ins:movzx eax, byte ptr [rdx]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, edi
 ins:add ecx, edi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsx r12d, byte ptr [rip+0x20b4e9]
 ins:movsx r12d, byte ptr [rip+0x20b4e9]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included mul edx
 ins:mul edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0x1
 ins:and r12d, 0x1
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included or r12d, esi
 ins:or r12d, esi
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included add edx, eax
 ins:add edx, eax
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x208f02]
 ins:lea rax, ptr [rip+0x208f02]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, r12d
 ins:mov ebx, r12d
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included shr edx, 0x5
 ins:shr edx, 0x5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul edx, edx, 0x27
 ins:imul edx, edx, 0x27
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 ins:sub ecx, edx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 ins:lea rdi, ptr [rax+rcx*8]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 ins:cmp al, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx edi, al
 ins:movzx edi, al
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx]
 ins:movzx eax, byte ptr [rdx]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, edi
 ins:add ecx, edi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsx r12d, byte ptr [rip+0x20b4e9]
 ins:movsx r12d, byte ptr [rip+0x20b4e9]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included mul edx
 ins:mul edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0x1
 ins:and r12d, 0x1
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included or r12d, esi
 ins:or r12d, esi
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included add edx, eax
 ins:add edx, eax
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x208f02]
 ins:lea rax, ptr [rip+0x208f02]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, r12d
 ins:mov ebx, r12d
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included shr edx, 0x5
 ins:shr edx, 0x5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul edx, edx, 0x27
 ins:imul edx, edx, 0x27
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 ins:sub ecx, edx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 ins:lea rdi, ptr [rax+rcx*8]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsx r12d, byte ptr [rip+0x20b4e9]
 ins:movsx r12d, byte ptr [rip+0x20b4e9]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included mul edx
 ins:mul edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0x1
 ins:and r12d, 0x1
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included or r12d, esi
 ins:or r12d, esi
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included add edx, eax
 ins:add edx, eax
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x208f02]
 ins:lea rax, ptr [rip+0x208f02]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, r12d
 ins:mov ebx, r12d
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included shr edx, 0x5
 ins:shr edx, 0x5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul edx, edx, 0x27
 ins:imul edx, edx, 0x27
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 ins:sub ecx, edx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 ins:lea rdi, ptr [rax+rcx*8]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r10, qword ptr [rdi]
 ins:mov r10, qword ptr [rdi]
 reg:r10
 Exe .text
 INSTSELECTOR: instruction to be included test r10, r10
 ins:test r10, r10
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx r11d, byte ptr [rsi]
 ins:movsx r11d, byte ptr [rsi]
 reg:r11d
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [r10+0x10]
 ins:mov rcx, qword ptr [r10+0x10]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included movsx edx, byte ptr [rcx]
 ins:movsx edx, byte ptr [rcx]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r11d, edx
 ins:cmp r11d, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r11d, r11d
 ins:test r11d, r11d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, qword ptr [rax]
 ins:mov r13, qword ptr [rax]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, dword ptr [r13+0x8]
 ins:mov ebx, dword ptr [r13+0x8]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x2
 ins:test bl, 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x80
 ins:test r12b, 0x80
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x80
 ins:test r12b, 0x80
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 ins:and eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 ins:cmp eax, 0x20
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0x118
 ins:and r12d, 0x118
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12d, 0x100
 ins:cmp r12d, 0x100
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 ins:mov edi, 0x20
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r14]
 ins:mov rax, qword ptr [r14]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, 0x118
 ins:test ebx, 0x118
 reg:rflags
 NORMAL FLAG REG: inst test ebx, 0x118
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x8
 ins:add rbx, 0x8
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 ins:mov rdi, qword ptr [rbx]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x12f9]
 ins:lea rdi, ptr [rip+0x12f9]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r9d, r11d
 ins:mov r9d, r11d
 reg:r9d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0x3d
 ins:cmp edx, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r9d, 0x3d
 ins:cmp r9d, 0x3d
 reg:rflags
 NORMAL FLAG REG: inst cmp r9d, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included cmovz r9d, edi
 ins:cmovz r9d, edi
 reg:r9d
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, r9d
 ins:cmp edx, r9d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r10
 ins:mov rax, r10
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r10, qword ptr [r10]
 ins:mov r10, qword ptr [r10]
 reg:r10
 Exe .text
 INSTSELECTOR: instruction to be included test r10, r10
 ins:test r10, r10
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r11d, 0x3d
 ins:cmp r11d, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rsi
 ins:mov r8, rsi
 reg:r8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rcx, 0x1
 ins:add rcx, 0x1
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included add r8, 0x1
 ins:add r8, 0x1
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included movsx edx, byte ptr [rcx]
 ins:movsx edx, byte ptr [rcx]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsx r9d, byte ptr [r8]
 ins:movsx r9d, byte ptr [r8]
 reg:r9d
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, r9d
 ins:cmp edx, r9d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0x3d
 ins:cmp edx, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r9d, 0x3d
 ins:cmp r9d, 0x3d
 reg:rflags
 NORMAL FLAG REG: inst cmp r9d, 0x3d
 Exe .text
 INSTSELECTOR: instruction to be included cmovz r9d, edi
 ins:cmovz r9d, edi
 reg:r9d
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, r9d
 ins:cmp edx, r9d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r10
 ins:mov rax, r10
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r10, qword ptr [r10]
 ins:mov r10, qword ptr [r10]
 reg:r10
 Exe .text
 INSTSELECTOR: instruction to be included test r10, r10
 ins:test r10, r10
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [r10+0x10]
 ins:mov rcx, qword ptr [r10+0x10]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included movsx edx, byte ptr [rcx]
 ins:movsx edx, byte ptr [rcx]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r11d, edx
 ins:cmp r11d, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r11d, r11d
 ins:test r11d, r11d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r11d, 0x3d
 ins:cmp r11d, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rsi
 ins:mov r8, rsi
 reg:r8
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, 0x3d
 ins:cmp edx, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rcx, 0x1
 ins:add rcx, 0x1
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included add r8, 0x1
 ins:add r8, 0x1
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included movsx edx, byte ptr [rcx]
 ins:movsx edx, byte ptr [rcx]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsx r9d, byte ptr [r8]
 ins:movsx r9d, byte ptr [r8]
 reg:r9d
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, r9d
 ins:cmp edx, r9d
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, qword ptr [r13+0x18]
 ins:mov r15, qword ptr [r13+0x18]
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included test r15, r15
 ins:test r15, r15
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12b, 0x40
 ins:test r12b, 0x40
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3d
 ins:mov esi, 0x3d
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x1]
 ins:lea rdi, ptr [rax+0x1]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, 0x270f
 ins:mov r14d, 0x270f
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, 0xffffffff
 ins:mov r13d, 0xffffffff
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, r13d
 ins:mov r15d, r13d
 reg:r15d
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2146f6]
 ins:mov rax, qword ptr [rip+0x2146f6]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rax+0x5]
 ins:lea rbx, ptr [rax+0x5]
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbx]
 ins:movzx edx, byte ptr [rbx]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbp]
 ins:movzx eax, byte ptr [rbp]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, al
 ins:cmp dl, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 ins:test dl, dl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, 0x3a
 ins:cmp dl, 0x3a
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 ins:cmp r13d, 0xffffffff
 reg:rflags
 NORMAL FLAG REG: inst cmp r13d, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 ins:add rbp, 0x1
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x25
 ins:cmp al, 0x25
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 ins:test dl, dl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 ins:cmp al, 0x3a
 reg:rflags
 NORMAL FLAG REG: inst cmp al, 0x3a
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 ins:add rbx, 0x1
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, al
 ins:movzx eax, al
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add r12d, eax
 ins:add r12d, eax
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbx]
 ins:movzx edx, byte ptr [rbx]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbp]
 ins:movzx eax, byte ptr [rbp]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, al
 ins:cmp dl, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 ins:test dl, dl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, 0x3a
 ins:cmp dl, 0x3a
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 ins:cmp al, 0x3a
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, r12d
 ins:mov r14d, r12d
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rbp
 ins:mov rbx, rbp
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 ins:cmp r13d, 0xffffffff
 reg:rflags
 NORMAL FLAG REG: inst cmp r13d, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 ins:add rbp, 0x1
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x25
 ins:cmp al, 0x25
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 ins:cmp r13d, 0xffffffff
 reg:rflags
 NORMAL FLAG REG: inst cmp r13d, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included lea r14d, ptr [r12+0x1]
 ins:lea r14d, ptr [r12+0x1]
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rbp
 ins:mov rbx, rbp
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 ins:cmp r13d, 0xffffffff
 reg:rflags
 NORMAL FLAG REG: inst cmp r13d, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x214537]
 ins:mov eax, dword ptr [rip+0x214537]
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 ins:add rbp, 0x1
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x25
 ins:cmp al, 0x25
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 ins:test dl, dl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3a
 ins:cmp al, 0x3a
 reg:rflags
 NORMAL FLAG REG: inst cmp al, 0x3a
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 ins:add rbx, 0x1
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, al
 ins:movzx eax, al
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add r12d, eax
 ins:add r12d, eax
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included movzx edx, byte ptr [rbx]
 ins:movzx edx, byte ptr [rbx]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rbp]
 ins:movzx eax, byte ptr [rbp]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp dl, al
 ins:cmp dl, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0xffffffff
 ins:cmp r13d, 0xffffffff
 reg:rflags
 NORMAL FLAG REG: inst cmp r13d, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x214537]
 ins:mov eax, dword ptr [rip+0x214537]
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test dl, dl
 ins:test dl, dl
 reg:rflags
 NORMAL FLAG REG: inst test dl, dl
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x0
 ins:mov eax, 0x0
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz r14d, eax
 ins:cmovnz r14d, eax
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r14d
 ins:mov edi, r14d
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r14d
 ins:mov edi, r14d
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edi
 ins:mov ebp, edi
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x215d25], 0x1
 ins:add dword ptr [rip+0x215d25], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x215d25], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x2155f6]
 ins:lea r12, ptr [rip+0x2155f6]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [r12+0xf8]
 ins:lea r13, ptr [r12+0xf8]
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, r12
 ins:mov rbx, r12
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 ins:mov rdi, qword ptr [rbx]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rdi+0x10]
 ins:movzx eax, word ptr [rdi+0x10]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test ax, ax
 ins:test ax, ax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rdi+0x8], ebp
 ins:cmp dword ptr [rdi+0x8], ebp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x8
 ins:add r12, 0x8
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12, r13
 ins:cmp r12, r13
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x215cd4], 0x1
 ins:sub dword ptr [rip+0x215cd4], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x215cdc]
 ins:mov eax, dword ptr [rip+0x215cdc]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, r12
 ins:mov rbx, r12
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbx]
 ins:mov rdi, qword ptr [rbx]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, word ptr [rdi+0x10]
 ins:movzx eax, word ptr [rdi+0x10]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test ax, ax
 ins:test ax, ax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rdi+0x8], ebp
 ins:cmp dword ptr [rdi+0x8], ebp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, dword ptr [r13+0x8]
 ins:mov ebx, dword ptr [r13+0x8]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x18
 ins:test bl, 0x18
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, ebx
 ins:mov edx, ebx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0xfffffec7
 ins:and ebx, 0xfffffec7
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 ins:and eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and edx, 0x4
 ins:and edx, 0x4
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, r12d
 ins:or ebx, r12d
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included or eax, edx
 ins:or eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 ins:cmp eax, 0x20
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, 0x118
 ins:test ebx, 0x118
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, r12
 ins:mov rbp, r12
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 ins:add rbp, 0x1
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rbp]
 ins:movzx ebx, byte ptr [rbp]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included test bl, bl
 ins:test bl, bl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp bl, 0x5f
 ins:cmp bl, 0x5f
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edx
 ins:mov r13d, edx
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x1578]
 ins:lea rdx, ptr [rip+0x1578]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, rsi
 ins:mov rcx, rsi
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rdi
 ins:mov r12, rdi
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rsi
 ins:mov rbx, rsi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x38
 ins:sub rsp, 0x38
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x20
 ins:mov esi, 0x20
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xd8
 ins:sub rsp, 0xd8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 NORMAL FLAG REG: inst test al, al
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 ins:lea rax, ptr [rsp+0xe0]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, rsp
 ins:mov rcx, rsp
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 ins:lea rax, ptr [rsp+0x20]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 ins:lea rax, ptr [rsp+0xe0]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, rsp
 ins:mov rcx, rsp
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 ins:lea rax, ptr [rsp+0x20]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, rdx
 ins:mov r8, rdx
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included mov r9, rcx
 ins:mov r9, rcx
 reg:r9
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x20b047], 0x1
 ins:add dword ptr [rip+0x20b047], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x20b047], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, 0xffffffffffffffff
 ins:mov rcx, 0xffffffffffffffff
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x20b02f], 0x1
 ins:sub dword ptr [rip+0x20b02f], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x20b037]
 ins:mov edx, dword ptr [rip+0x20b037]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp+0x18]
 ins:mov rdx, qword ptr [rsp+0x18]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included xor rdx, qword ptr fs:[0x28]
 ins:xor rdx, qword ptr fs:[0x28]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xd8
 ins:add rsp, 0xd8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r13d
 ins:mov edx, r13d
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rsi
 ins:mov r13, rsi
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edx
 ins:mov ebp, edx
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rbp
 ins:mov rax, rbp
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3d
 ins:mov esi, 0x3d
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rax
 ins:mov r14, rax
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included sub r14, rbx
 ins:sub r14, rbx
 reg:r14
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12, rax
 ins:cmp r12, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r13
 ins:mov rdi, r13
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rax
 ins:mov r15, rax
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x208fb1], 0x1
 ins:add dword ptr [rip+0x208fb1], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x208fb1], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [r15+r14*1+0x2]
 ins:lea rdi, ptr [r15+r14*1+0x2]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 ins:mov rdx, r14
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbx
 ins:mov rsi, rbx
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+0x1]
 ins:lea rdi, ptr [rax+0x1]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r15
 ins:mov rdx, r15
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r13
 ins:mov rsi, r13
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, ebp
 ins:mov esi, ebp
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or esi, 0x100
 ins:or esi, 0x100
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0xa
 ins:mov esi, 0xa
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, esi
 ins:mov r13d, esi
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, r13d
 ins:mov edx, r13d
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rsp
 ins:mov rsi, rsp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rbx]
 ins:mov edx, dword ptr [rbx]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 ins:test r13d, r13d
 reg:rflags
 NORMAL FLAG REG: inst test r13d, r13d
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rax
 ins:mov r12, rax
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rsp]
 ins:mov rbx, qword ptr [rsp]
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 ins:cmp rbx, rbp
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rax]
 ins:mov rsi, qword ptr [rax]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx ecx, byte ptr [rax]
 ins:movzx ecx, byte ptr [rax]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rsi+rcx*2+0x1], 0x20
 ins:test byte ptr [rsi+rcx*2+0x1], 0x20
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test cl, cl
 ins:test cl, cl
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x8]
 ins:mov rdi, qword ptr [rsp+0x8]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included xor rdi, qword ptr fs:[0x28]
 ins:xor rdi, qword ptr fs:[0x28]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, 0x7fffffff
 ins:cmp rax, 0x7fffffff
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmovz eax, edx
 ins:cmovz eax, edx
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x208f65], 0x1
 ins:sub dword ptr [rip+0x208f65], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x208f6d]
 ins:mov edx, dword ptr [rip+0x208f6d]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x28]
 ins:mov rcx, qword ptr [rsp+0x28]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included xor rcx, qword ptr fs:[0x28]
 ins:xor rcx, qword ptr fs:[0x28]
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x38
 ins:add rsp, 0x38
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0xb3f]
 ins:lea rdx, ptr [rip+0xb3f]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x207d25]
 ins:lea rdi, ptr [rip+0x207d25]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rcx, eax
 ins:movsxd rcx, eax
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1b
 ins:mov esi, 0x1b
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x207d0a]
 ins:lea rdi, ptr [rip+0x207d0a]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x8
 ins:mov esi, 0x8
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x988]
 ins:lea rdi, ptr [rip+0x988]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included movzx r8d, byte ptr [rdi]
 ins:movzx r8d, byte ptr [rdi]
 reg:r8d
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, r8d
 ins:mov ecx, r8d
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 ins:shl ecx, 0x4
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included cmp r8b, 0x3d
 ins:cmp r8b, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r8b, r8b
 ins:test r8b, r8b
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rdi
 ins:mov rdx, rdi
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx]
 ins:movzx eax, byte ptr [rdx]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, r8d
 ins:add ecx, r8d
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mul edx
 ins:mul edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add edx, eax
 ins:add edx, eax
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x208b3a]
 ins:lea rax, ptr [rip+0x208b3a]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr edx, 0x5
 ins:shr edx, 0x5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul edx, edx, 0x27
 ins:imul edx, edx, 0x27
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 ins:sub ecx, edx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 ins:lea rdi, ptr [rax+rcx*8]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x3d
 ins:cmp al, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx r8d, al
 ins:movzx r8d, al
 reg:r8d
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, 0x1
 ins:add rdx, 0x1
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rdx]
 ins:movzx eax, byte ptr [rdx]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, r8d
 ins:add ecx, r8d
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mul edx
 ins:mul edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add edx, eax
 ins:add edx, eax
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x208b3a]
 ins:lea rax, ptr [rip+0x208b3a]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr edx, 0x5
 ins:shr edx, 0x5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul edx, edx, 0x27
 ins:imul edx, edx, 0x27
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 ins:sub ecx, edx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rax+rcx*8]
 ins:lea rdi, ptr [rax+rcx*8]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r9d, 0x3d
 ins:cmp r9d, 0x3d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp edx, r9d
 ins:cmp edx, r9d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r10
 ins:mov rax, r10
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r10, qword ptr [r10]
 ins:mov r10, qword ptr [r10]
 reg:r10
 Exe .text
 INSTSELECTOR: instruction to be included test r10, r10
 ins:test r10, r10
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+0x8], 0x20
 ins:test byte ptr [rax+0x8], 0x20
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rax+0x10]
 ins:mov rdi, qword ptr [rax+0x10]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x3d
 ins:mov esi, 0x3d
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 NORMAL FLAG REG: inst test rax, rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x2f
 ins:cmp byte ptr [rax], 0x2f
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 ins:xor ebx, ebx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rsp
 ins:mov rdx, rsp
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rax
 ins:mov rsi, rax
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rsp+0x90]
 ins:lea rdx, ptr [rsp+0x90]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0xc7a]
 ins:lea rsi, ptr [rip+0xc7a]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x90]
 ins:mov rax, qword ptr [rsp+0x90]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp], rax
 ins:cmp qword ptr [rsp], rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x98]
 ins:mov rax, qword ptr [rsp+0x98]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp+0x8], rax
 ins:cmp qword ptr [rsp+0x8], rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rdi
 ins:mov r12, rdi
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 NORMAL FLAG REG: inst test esi, esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x217682]
 ins:mov rbp, qword ptr [rip+0x217682]
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x217fe5], 0x1
 ins:add dword ptr [rip+0x217fe5], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x217fe5], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x217666]
 ins:mov rdi, qword ptr [rip+0x217666]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x21a2ef]
 ins:lea r13, ptr [rip+0x21a2ef]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, r13
 ins:cmp rdi, r13
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, rbp
 ins:cmp rdi, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r12
 ins:cmp rbp, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r12
 ins:mov rdi, r12
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r13
 ins:cmp rbp, r13
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rbp
 ins:cmp rbx, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x217f8c], 0x1
 ins:sub dword ptr [rip+0x217f8c], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x217f94]
 ins:mov eax, dword ptr [rip+0x217f94]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbx
 ins:mov rsi, rbx
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x10479]
 ins:lea rdi, ptr [rip+0x10479]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15, rax
 ins:mov r15, rax
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x208fb1], 0x1
 ins:add dword ptr [rip+0x208fb1], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x208fb1], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [r15+r14*1+0x2]
 ins:lea rdi, ptr [r15+r14*1+0x2]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test bl, 0x18
 ins:test bl, 0x18
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, ebx
 ins:mov edx, ebx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r12d
 ins:mov eax, r12d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0xfffffec7
 ins:and ebx, 0xfffffec7
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x27
 ins:and eax, 0x27
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and edx, 0x4
 ins:and edx, 0x4
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included or ebx, r12d
 ins:or ebx, r12d
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included or eax, edx
 ins:or eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x20
 ins:cmp eax, 0x20
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, 0x118
 ins:test ebx, 0x118
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x128]
 ins:mov rax, qword ptr [rsp+0x128]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x130
 ins:add rsp, 0x130
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 ins:lea rdi, ptr [rsp+0x20]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x20f659]
 ins:mov rax, qword ptr [rip+0x20f659]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rip+0x20f63a]
 ins:mov rcx, qword ptr [rip+0x20f63a]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x20f643]
 ins:mov rdx, qword ptr [rip+0x20f643]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+0x8]
 ins:lea rcx, ptr [rax+0x8]
 reg:rcx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdx, rcx
 ins:cmp rdx, rcx
 reg:rflags
 NORMAL FLAG REG: inst cmp rdx, rcx
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x212082]
 ins:lea rcx, ptr [rip+0x212082]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rcx
 ins:cmp rax, rcx
 reg:rflags
 NORMAL FLAG REG: inst cmp rax, rcx
 Exe .text
 INSTSELECTOR: instruction to be included setnz dil
 ins:setnz dil
 reg:dil
 Exe .text
 INSTSELECTOR: instruction to be included and rdi, rdx
 ins:and rdi, rdx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rdi+0x7]
 ins:lea rbx, ptr [rdi+0x7]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x20f777]
 ins:mov rdx, qword ptr [rip+0x20f777]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included and rbx, 0xfffffffffffffff8
 ins:and rbx, 0xfffffffffffffff8
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdx, rbx
 ins:cmp rdx, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, 0x1f7
 ins:cmp rbx, 0x1f7
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x8
 ins:add rdi, 0x8
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x20f6fe]
 ins:mov rax, qword ptr [rip+0x20f6fe]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included sub rdx, rbx
 ins:sub rdx, rbx
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+rbx*1]
 ins:lea rcx, ptr [rax+rbx*1]
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp+0x8]
 ins:mov rsi, qword ptr [rsp+0x8]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rsp+0x4]
 ins:mov edi, dword ptr [rsp+0x4]
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 ins:xor r13d, r13d
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsi]
 ins:mov rax, qword ptr [rsi]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 ins:xor r13d, r13d
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x2d
 ins:cmp byte ptr [rax], 0x2d
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rax], 0x2d
 Exe .text
 INSTSELECTOR: instruction to be included setz r13b
 ins:setz r13b
 reg:r13b
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0x210e1c]
 ins:lea rbp, ptr [rip+0x210e1c]
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsi+0x8]
 ins:lea rax, ptr [rsi+0x8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 NORMAL FLAG REG: inst test edi, edi
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rbp+0x12]
 ins:lea rdx, ptr [rbp+0x12]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included cmovnle rsi, rax
 ins:cmovnle rsi, rax
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rbp
 ins:mov rbx, rbp
 reg:rbx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 ins:add rbx, 0x1
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rdx
 ins:cmp rbx, rdx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, 0x1
 ins:add rbx, 0x1
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbx, rdx
 ins:cmp rbx, rdx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, edi
 ins:mov ebx, edi
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x28
 ins:sub rsp, 0x28
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rip+0x7cfa]
 ins:lea rbp, ptr [rip+0x7cfa]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x20d513]
 ins:lea r12, ptr [rip+0x20d513]
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x21113c]
 ins:mov rdx, qword ptr [rip+0x21113c]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx]
 ins:mov rax, qword ptr [rdx]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rdx+0x8]
 ins:lea rdi, ptr [rdx+0x8]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [rax+0x1]
 ins:lea r15, ptr [rax+0x1]
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx esi, byte ptr [rax]
 ins:movsx esi, byte ptr [rax]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x2d
 ins:cmp esi, 0x2d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x2b
 ins:cmp esi, 0x2b
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x2110e5]
 ins:lea r13, ptr [rip+0x2110e5]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included add r15, 0x1
 ins:add r15, 0x1
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included movsx esi, byte ptr [r15-0x1]
 ins:movsx esi, byte ptr [r15-0x1]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included test esi, esi
 ins:test esi, esi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0x1
 ins:and eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp esi, 0x63
 ins:cmp esi, 0x63
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rsp+0x10]
 ins:mov eax, dword ptr [rsp+0x10]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x28
 ins:add rsp, 0x28
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rip+0x210df4]
 ins:mov r12, qword ptr [rip+0x210df4]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included or r13d, eax
 ins:or r13d, eax
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0x210e1a]
 ins:mov r14, qword ptr [rip+0x210e1a]
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [r12], 0x0
 ins:cmp qword ptr [r12], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x210dc3], 0x2
 ins:cmp byte ptr [rip+0x210dc3], 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x210db7], 0x2
 ins:cmp byte ptr [rip+0x210db7], 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x210cef], 0x1
 ins:cmp byte ptr [rip+0x210cef], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x210db7], 0x2
 ins:cmp byte ptr [rip+0x210db7], 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [rip+0x210dad]
 ins:movzx eax, byte ptr [rip+0x210dad]
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp], 0x2
 ins:cmp byte ptr [rbp], 0x2
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 ins:add rbp, 0x1
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rbx
 ins:cmp rbp, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rbp], 0x2
 ins:cmp byte ptr [rbp], 0x2
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbp, 0x1
 ins:add rbp, 0x1
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rbx
 ins:cmp rbp, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r14, r14
 ins:test r14, r14
 reg:rflags
 NORMAL FLAG REG: inst test r14, r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [r12]
 ins:mov rdi, qword ptr [r12]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x210c6f], 0x0
 ins:cmp byte ptr [rip+0x210c6f], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x21269f], 0x1
 ins:add dword ptr [rip+0x21269f], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x21269f], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, esi
 ins:mov r12d, esi
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, eax
 ins:mov ebx, eax
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x9
 ins:cmp eax, 0x9
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0x1
 ins:and r12d, 0x1
 reg:r12d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, eax
 ins:mov esi, eax
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 ins:mov edi, eax
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, esi
 ins:mov r12d, esi
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa
 ins:mov edx, 0xa
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, edi
 ins:mov ebp, edi
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, eax
 ins:mov ebx, eax
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x20deee]
 ins:mov rax, qword ptr [rip+0x20deee]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rax]
 ins:mov r13d, dword ptr [rax]
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, 0x9
 ins:cmp r13d, 0x9
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r12d
 ins:mov edi, r12d
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r12d
 ins:mov edi, r12d
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x1
 ins:mov edx, 0x1
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x2
 ins:mov esi, 0x2
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebx
 ins:mov edi, ebx
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0x1
 ins:and r12d, 0x1
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, eax
 ins:mov ebx, eax
 reg:ebx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x211d0e]
 ins:mov rbp, qword ptr [rip+0x211d0e]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp+0x20]
 ins:mov rax, qword ptr [rbp+0x20]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x21263d], 0x1
 ins:sub dword ptr [rip+0x21263d], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x212645]
 ins:mov eax, dword ptr [rip+0x212645]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [r12]
 ins:mov rax, qword ptr [r12]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdx+0x8]
 ins:mov rdi, qword ptr [rdx+0x8]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rdx+0x8]
 ins:lea r12, ptr [rdx+0x8]
 reg:r12
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, 0xffffffff00000001
 ins:mov rax, 0xffffffff00000001
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 NORMAL FLAG REG: inst test rdi, rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x210d5d]
 ins:mov eax, dword ptr [rip+0x210d5d]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea edx, ptr [rax+0x1]
 ins:lea edx, ptr [rax+0x1]
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x8
 ins:add r12, 0x8
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, edx
 ins:mov ecx, edx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included add edx, 0x1
 ins:add edx, 0x1
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [r12], 0x0
 ins:cmp qword ptr [r12], 0x0
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x8
 ins:add r12, 0x8
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, edx
 ins:mov ecx, edx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included add edx, 0x1
 ins:add edx, 0x1
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [r12], 0x0
 ins:cmp qword ptr [r12], 0x0
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included movsx edi, byte ptr [rip+0x211264]
 ins:movsx edi, byte ptr [rip+0x211264]
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x20b622], edi
 ins:cmp dword ptr [rip+0x20b622], edi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 NORMAL FLAG REG: inst test edi, edi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0x20e305]
 ins:mov edi, dword ptr [rip+0x20e305]
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, edi
 ins:cmp eax, edi
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, dword ptr [rip+0x20e2d5]
 ins:cmp eax, dword ptr [rip+0x20e2d5]
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rip+0x20e2d1]
 ins:mov edi, dword ptr [rip+0x20e2d1]
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx edi, byte ptr [rip+0x21124c]
 ins:movsx edi, byte ptr [rip+0x21124c]
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add edi, 0x1
 ins:add edi, 0x1
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x20ae67], edi
 ins:cmp dword ptr [rip+0x20ae67], edi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x2
 ins:mov edi, 0x2
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x20d87c], 0x0
 ins:cmp byte ptr [rip+0x20d87c], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rip+0x20d87c], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, ebp
 ins:mov ebx, ebp
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x20d8b1], 0x0
 ins:cmp qword ptr [rip+0x20d8b1], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x20d862], 0x0
 ins:cmp byte ptr [rip+0x20d862], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rip+0x20d862], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 ins:mov ebx, 0x1
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmovz ebx, ebp
 ins:cmovz ebx, ebp
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12d, ptr [rbp-0x1]
 ins:lea r12d, ptr [rbp-0x1]
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x20daa3]
 ins:lea r13, ptr [rip+0x20daa3]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, r12d
 ins:movsxd r12, r12d
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [r13+r12*1]
 ins:movsx eax, byte ptr [r13+r12*1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp al, 0x4
 ins:cmp al, 0x4
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, eax
 ins:cmp ebx, eax
 reg:rflags
 NORMAL FLAG REG: inst cmp ebx, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsp
 ins:mov r14, rsp
 reg:r14
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsp
 ins:mov r14, rsp
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebp
 ins:mov edi, ebp
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 ins:mov rdx, r14
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffffff
 ins:cmp eax, 0xffffffff
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp], 0x1
 ins:cmp qword ptr [rsp], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x20d91e], 0x0
 ins:cmp byte ptr [rip+0x20d91e], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x2
 ins:cmp ebx, 0x2
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x3
 ins:cmp ebx, 0x3
 reg:rflags
 NORMAL FLAG REG: inst cmp ebx, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [r14+0x8]
 ins:lea rdi, ptr [r14+0x8]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x3
 ins:mov edi, 0x3
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x20d894], 0x1
 ins:cmp byte ptr [rip+0x20d894], 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rip+0x20d894], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included sbb ebx, ebx
 ins:sbb ebx, ebx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included and ebx, 0xfffffffe
 ins:and ebx, 0xfffffffe
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included add ebx, 0x3
 ins:add ebx, 0x3
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0xf
 ins:mov edi, 0xf
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx edi, byte ptr [rip+0x211241]
 ins:movsx edi, byte ptr [rip+0x211241]
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x213576], edi
 ins:cmp dword ptr [rip+0x213576], edi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, dword ptr [rip+0x213573]
 ins:mov r13d, dword ptr [rip+0x213573]
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included test r13d, r13d
 ins:test r13d, r13d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 NORMAL FLAG REG: inst test edi, edi
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, edi
 ins:mov r12d, edi
 reg:r12d
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r13d
 ins:mov eax, r13d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x21b3d0], 0x0
 ins:cmp byte ptr [rip+0x21b3d0], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp byte ptr [rip+0x21b3d0], 0x0
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x11be3]
 ins:lea rdi, ptr [rip+0x11be3]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x20]
 ins:lea rdi, ptr [rsp+0x20]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x20ff40], 0x1
 ins:add dword ptr [rip+0x20ff40], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x20ff40], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x20f5fe]
 ins:mov rdi, qword ptr [rip+0x20f5fe]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rbx]
 ins:cmp rdi, qword ptr [rbx]
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdi]
 ins:mov rax, qword ptr [rdi]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x8]
 ins:mov rax, qword ptr [rbx+0x8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x10]
 ins:mov rdx, qword ptr [rbx+0x10]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x20fee6], 0x1
 ins:sub dword ptr [rip+0x20fee6], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x20feee]
 ins:mov eax, dword ptr [rip+0x20feee]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x21b3dc]
 ins:mov rdi, qword ptr [rip+0x21b3dc]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, edi
 ins:mov r14d, edi
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, 0x1
 ins:xor edi, 0x1
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, edi
 ins:mov r13d, edi
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0x2127d6]
 ins:lea r12, ptr [rip+0x2127d6]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included and r14d, 0x1
 ins:and r14d, 0x1
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x28
 ins:sub rsp, 0x28
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 ins:xor r15d, r15d
 reg:r15d
 Exe .text
 INSTSELECTOR: instruction to be included and r13d, 0x1
 ins:and r13d, 0x1
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rsp
 ins:mov rbx, rsp
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2124fe]
 ins:mov eax, dword ptr [rip+0x2124fe]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x212746], 0x0
 ins:cmp byte ptr [rip+0x212746], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r14b, r14b
 ins:test r14b, r14b
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included test edi, edi
 ins:test edi, edi
 reg:rflags
 NORMAL FLAG REG: inst test edi, edi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, dword ptr [rip+0x21011b]
 ins:mov ebp, dword ptr [rip+0x21011b]
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, ebp
 ins:mov r12d, ebp
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included and ebp, 0x2
 ins:and ebp, 0x2
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included and r12d, 0x4
 ins:and r12d, 0x4
 reg:r12d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x21009b]
 ins:mov ecx, dword ptr [rip+0x21009b]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, r12d
 ins:test r12d, r12d
 reg:rflags
 NORMAL FLAG REG: inst test r12d, r12d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, dword ptr [rip+0x2100bc]
 ins:mov ebx, dword ptr [rip+0x2100bc]
 reg:ebx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x1
 ins:cmp ebx, 0x1
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, dword ptr [rip+0x2103aa]
 ins:mov edx, dword ptr [rip+0x2103aa]
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included test edx, edx
 ins:test edx, edx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x20e05a], 0x1
 ins:sub dword ptr [rip+0x20e05a], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x20e055]
 ins:mov rax, qword ptr [rip+0x20e055]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rax]
 ins:movsx ebx, byte ptr [rax]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x23
 ins:cmp ebx, 0x23
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x2129ba]
 ins:mov ecx, dword ptr [rip+0x2129ba]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x211ff7]
 ins:mov rdx, qword ptr [rip+0x211ff7]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x28]
 ins:mov rax, qword ptr [rdx+0x28]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0xffffff9d
 ins:cmp ecx, 0xffffff9d
 reg:rflags
 NORMAL FLAG REG: inst cmp ecx, 0xffffff9d
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0xffffff7e
 ins:mov eax, 0xffffff7e
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rdx+0x20], 0x0
 ins:cmp qword ptr [rdx+0x20], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x212042]
 ins:lea rdi, ptr [rip+0x212042]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rdi+0x10]
 ins:mov rsi, qword ptr [rdi+0x10]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rdi]
 ins:mov rdx, qword ptr [rdi]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included sub rdx, rsi
 ins:sub rdx, rsi
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdi+0x20]
 ins:mov eax, dword ptr [rdi+0x20]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, eax
 ins:mov edi, eax
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, dword ptr [rip+0x2149fb]
 ins:mov ebx, dword ptr [rip+0x2149fb]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 ins:test ebx, ebx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, ebx
 ins:movsxd r12, ebx
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x21296d]
 ins:mov rbp, qword ptr [rip+0x21296d]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included sub r12, 0x1
 ins:sub r12, 0x1
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x211ee9]
 ins:mov rax, qword ptr [rip+0x211ee9]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rip+0xafc3]
 ins:lea r12, ptr [rip+0xafc3]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rax+0x20]
 ins:mov rbp, qword ptr [rax+0x20]
 reg:rbp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rax+0xc]
 ins:mov edi, dword ptr [rax+0xc]
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x2000
 ins:mov edx, 0x2000
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 NORMAL FLAG REG: inst test eax, eax
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, eax
 ins:mov ebx, eax
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0xffffff7e
 ins:mov eax, 0xffffff7e
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r12, ebx
 ins:movsxd r12, ebx
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rip+0x21296d]
 ins:mov rbp, qword ptr [rip+0x21296d]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included sub r12, 0x1
 ins:sub r12, 0x1
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbp]
 ins:movsx eax, byte ptr [rbp]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ebx, 0x1
 ins:sub ebx, 0x1
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rbp+0x1]
 ins:lea rsi, ptr [rbp+0x1]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub r12, 0x1
 ins:sub r12, 0x1
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xa
 ins:cmp eax, 0xa
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub r12, 0x1
 ins:sub r12, 0x1
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 ins:test ebx, ebx
 reg:rflags
 NORMAL FLAG REG: inst test ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsi
 ins:mov rbp, rsi
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rbp]
 ins:movsx eax, byte ptr [rbp]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub ebx, 0x1
 ins:sub ebx, 0x1
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rbp+0x1]
 ins:lea rsi, ptr [rbp+0x1]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rsi
 ins:mov rax, rsi
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, qword ptr [rip+0x2128d6]
 ins:sub rax, qword ptr [rip+0x2128d6]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsi
 ins:mov rbp, rsi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x1
 ins:sub eax, 0x1
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx ebx, byte ptr [rbp]
 ins:movzx ebx, byte ptr [rbp]
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x214be2], 0x0
 ins:cmp byte ptr [rip+0x214be2], 0x0
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x2128f6]
 ins:mov rax, qword ptr [rip+0x2128f6]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rax]
 ins:movsx eax, byte ptr [rax]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, eax
 ins:mov ebx, eax
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x23
 ins:cmp ebx, 0x23
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x29
 ins:cmp ebx, 0x29
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x212769], 0x1
 ins:sub dword ptr [rip+0x212769], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x212768]
 ins:mov rax, qword ptr [rip+0x212768]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx eax, byte ptr [rax]
 ins:movsx eax, byte ptr [rax]
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xa
 ins:cmp eax, 0xa
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xffffff7e
 ins:cmp eax, 0xffffff7e
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x212b59], 0x1
 ins:add dword ptr [rip+0x212b59], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x212b59], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included sub qword ptr [rip+0x212b59], 0x1
 ins:sub qword ptr [rip+0x212b59], 0x1
 reg:rflags
 COMP2MEM: inst sub qword ptr [rip+0x212b59], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x20dfdb], 0x1
 ins:sub dword ptr [rip+0x20dfdb], 0x1
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x20e055]
 ins:mov rax, qword ptr [rip+0x20e055]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rax]
 ins:movsx ebx, byte ptr [rax]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x23
 ins:cmp ebx, 0x23
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x29
 ins:cmp ebx, 0x29
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x9
 ins:cmp ebx, 0x9
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0xa
 ins:cmp ebx, 0xa
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x21029a]
 ins:mov eax, dword ptr [rip+0x21029a]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x20d593], 0x1
 ins:add dword ptr [rip+0x20d593], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x20d593], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x1
 ins:mov eax, 0x1
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r12d, r12d
 ins:test r12d, r12d
 reg:rflags
 NORMAL FLAG REG: inst test r12d, r12d
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, eax
 ins:mov ebx, eax
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0xc
 ins:cmp ebx, 0xc
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2100fd]
 ins:mov eax, dword ptr [rip+0x2100fd]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x1
 ins:cmp eax, 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x20e339], 0x1
 ins:add dword ptr [rip+0x20e339], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x20e339], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, r12
 ins:cmp rax, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x21272e], 0x0
 ins:cmp byte ptr [rip+0x21272e], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x21240f], 0x2
 ins:cmp dword ptr [rip+0x21240f], 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp dword ptr [rip+0x21240f], 0x2
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included setz dl
 ins:setz dl
 reg:dl
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 NORMAL FLAG REG: inst test rdi, rdi
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, esi
 ins:mov ebp, esi
 reg:ebp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rdi]
 ins:mov ecx, dword ptr [rdi]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp ecx, 0xe
 ins:cmp ecx, 0xe
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0xfafc]
 ins:lea rsi, ptr [rip+0xfafc]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, ecx
 ins:mov edx, ecx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rsi+rdx*4]
 ins:movsxd rax, dword ptr [rsi+rdx*4]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rsi
 ins:add rax, rsi
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2199ba]
 ins:mov eax, dword ptr [rip+0x2199ba]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and ebp, 0x1
 ins:and ebp, 0x1
 reg:ebp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, dword ptr [rip+0x21033b]
 ins:mov r15d, dword ptr [rip+0x21033b]
 reg:r15d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x210409]
 ins:mov eax, dword ptr [rip+0x210409]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0xfffffffb
 ins:and eax, 0xfffffffb
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x18]
 ins:mov rcx, qword ptr [rsp+0x18]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included xor rcx, qword ptr fs:[0x28]
 ins:xor rcx, qword ptr fs:[0x28]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r15d
 ins:mov eax, r15d
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x28
 ins:add rsp, 0x28
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:r15
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x5c
 ins:cmp ebx, 0x5c
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x7c
 ins:cmp ebx, 0x7c
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x3b
 ins:cmp ebx, 0x3b
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebx
 ins:mov edi, ebx
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x7f87]
 ins:lea rsi, ptr [rip+0x7f87]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsp
 ins:mov rbp, rsp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, edi
 ins:mov r15d, edi
 reg:r15d
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x68
 ins:sub rsp, 0x68
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, qword ptr [rip+0x20d1d9]
 ins:mov r14, qword ptr [rip+0x20d1d9]
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x79bd]
 ins:lea rax, ptr [rip+0x79bd]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, r14
 ins:mov r12, r14
 reg:r12
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rsi, rax
 ins:cmp rsi, rax
 reg:rflags
 NORMAL FLAG REG: inst cmp rsi, rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included setz al
 ins:setz al
 reg:al
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x48], 0x1
 ins:cmp qword ptr [rbp-0x48], 0x1
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rbp-0x48], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, al
 ins:movzx eax, al
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsi
 ins:mov r14, rsi
 reg:r14
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x20d169]
 ins:mov rax, qword ptr [rip+0x20d169]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, r12
 ins:sub rax, r12
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, 0x3
 ins:cmp rax, 0x3
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, r15d
 ins:movsxd rax, r15d
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [r14+rax*1], 0xe
 ins:cmp byte ptr [r14+rax*1], 0xe
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [r14+rax*1]
 ins:movzx eax, byte ptr [r14+rax*1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x6b22]
 ins:lea rcx, ptr [rip+0x6b22]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rcx+rax*4]
 ins:movsxd rax, dword ptr [rcx+rax*4]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rcx
 ins:add rax, rcx
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 ins:add r12, 0x1
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x20da17], 0x1
 ins:sub dword ptr [rip+0x20da17], 0x1
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x20da88]
 ins:mov rax, qword ptr [rip+0x20da88]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx r15d, byte ptr [rax]
 ins:movsx r15d, byte ptr [rax]
 reg:r15d
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x20d0ca]
 ins:mov rax, qword ptr [rip+0x20d0ca]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, r12
 ins:sub rax, r12
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, 0x3
 ins:cmp rax, 0x3
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r12
 ins:mov rsi, r12
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x4
 ins:mov edi, 0x4
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, r15d
 ins:movsxd rax, r15d
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [r14+rax*1], 0xe
 ins:cmp byte ptr [r14+rax*1], 0xe
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movzx eax, byte ptr [r14+rax*1]
 ins:movzx eax, byte ptr [r14+rax*1]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rip+0x6b22]
 ins:lea rcx, ptr [rip+0x6b22]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rcx+rax*4]
 ins:movsxd rax, dword ptr [rcx+rax*4]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rcx
 ins:add rax, rcx
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r9d, dword ptr [rbp-0x4c]
 ins:mov r9d, dword ptr [rbp-0x4c]
 reg:r9d
 Exe .text
 INSTSELECTOR: instruction to be included test r9d, r9d
 ins:test r9d, r9d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15d, 0xffffff7f
 ins:cmp r15d, 0xffffff7f
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add r12, 0x1
 ins:add r12, 0x1
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x20da17], 0x1
 ins:sub dword ptr [rip+0x20da17], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x75eb]
 ins:lea rax, ptr [rip+0x75eb]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, r14
 ins:mov r13, r14
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, r12
 ins:mov r14, r12
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, rax
 ins:cmp r13, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x7935]
 ins:lea rax, ptr [rip+0x7935]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13, rax
 ins:cmp r13, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x48], 0x0
 ins:cmp qword ptr [rbp-0x48], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r8d, dword ptr [rbp-0x4c]
 ins:mov r8d, dword ptr [rbp-0x4c]
 reg:r8d
 Exe .text
 INSTSELECTOR: instruction to be included test r8d, r8d
 ins:test r8d, r8d
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rip+0x20c880]
 ins:mov r12, qword ptr [rip+0x20c880]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [r14+0x1]
 ins:lea rbx, ptr [r14+0x1]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rbx, r12
 ins:sub rbx, r12
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbp-0x48], 0x0
 ins:cmp qword ptr [rbp-0x48], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, r15d
 ins:mov eax, r15d
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included and eax, 0xfffffffd
 ins:and eax, 0xfffffffd
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3c
 ins:cmp eax, 0x3c
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x212b59], 0x1
 ins:add dword ptr [rip+0x212b59], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x212b59], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included sub qword ptr [rip+0x212b59], 0x1
 ins:sub qword ptr [rip+0x212b59], 0x1
 reg:rflags
 COMP2MEM: inst sub qword ptr [rip+0x212b59], 0x1
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rbp-0x58]
 ins:mov eax, dword ptr [rbp-0x58]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbp-0x40]
 ins:mov rax, qword ptr [rbp-0x40]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0xc
 ins:mov eax, 0xc
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rbp-0x38]
 ins:mov rdi, qword ptr [rbp-0x38]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included xor rdi, qword ptr fs:[0x28]
 ins:xor rdi, qword ptr fs:[0x28]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rsp, ptr [rbp-0x28]
 ins:lea rsp, ptr [rbp-0x28]
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 ins:test ebp, ebp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x2100d2], 0x1
 ins:test byte ptr [rip+0x2100d2], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x2100f1]
 ins:mov rdi, qword ptr [rip+0x2100f1]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, edi
 ins:mov r12d, edi
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included cmp edi, 0x2
 ins:cmp edi, 0x2
 reg:rflags
 NORMAL FLAG REG: inst cmp edi, 0x2
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r13, ptr [rip+0x5b65]
 ins:lea r13, ptr [rip+0x5b65]
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included xor ebp, ebp
 ins:xor ebp, ebp
 reg:ebp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0xc
 ins:cmp ebx, 0xc
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x2100fd]
 ins:mov eax, dword ptr [rip+0x2100fd]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test ebp, ebp
 ins:test ebp, ebp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x210061]
 ins:mov rdi, qword ptr [rip+0x210061]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x20c45a]
 ins:lea rsi, ptr [rip+0x20c45a]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x10
 ins:mov edx, 0x10
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rdi
 ins:mov r14, rdi
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rsi
 ins:mov r13, rsi
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdx
 ins:mov rbp, rdx
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included xor r12d, r12d
 ins:xor r12d, r12d
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r12
 ins:cmp rbp, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 ins:xor r15d, r15d
 reg:r15d
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r15
 ins:mov rax, r15
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [r12+rbp*1]
 ins:lea rbx, ptr [r12+rbp*1]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r14
 ins:mov rdi, r14
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included shr rbx, 0x1
 ins:shr rbx, 0x1
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea r15, ptr [r13+rbx*8]
 ins:lea r15, ptr [r13+rbx*8]
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [r15]
 ins:mov rsi, qword ptr [r15]
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rbx
 ins:mov rbp, rbx
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, r12
 ins:cmp rbp, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor r15d, r15d
 ins:xor r15d, r15d
 reg:r15d
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r15
 ins:mov rax, r15
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rbx+0x1]
 ins:lea r12, ptr [rbx+0x1]
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x20c440]
 ins:lea rdx, ptr [rip+0x20c440]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rdx
 ins:sub rax, rdx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sar rbx, 0x3
 ins:sar rbx, 0x3
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included add ebx, 0xd
 ins:add ebx, 0xd
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ebx
 ins:mov eax, ebx
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rip+0x2100d2], 0x1
 ins:test byte ptr [rip+0x2100d2], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x2100f1]
 ins:mov rdi, qword ptr [rip+0x2100f1]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, esi
 ins:mov ebx, esi
 reg:ebx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rdi]
 ins:movzx esi, byte ptr [rdi]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, esi
 ins:mov ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included shl ecx, 0x4
 ins:shl ecx, 0x4
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rdi
 ins:mov rax, rdi
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 ins:add ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rax]
 ins:movzx esi, byte ptr [rax]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mul edx
 ins:mul edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add edx, eax
 ins:add edx, eax
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x218cca]
 ins:lea rax, ptr [rip+0x218cca]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr edx, 0x5
 ins:shr edx, 0x5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul edx, edx, 0x27
 ins:imul edx, edx, 0x27
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 ins:sub ecx, edx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rax+rcx*8]
 ins:mov rbx, qword ptr [rax+rcx*8]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+rcx*8]
 ins:lea r12, ptr [rax+rcx*8]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x1
 ins:add rax, 0x1
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add ecx, esi
 ins:add ecx, esi
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included movzx esi, byte ptr [rax]
 ins:movzx esi, byte ptr [rax]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included test sil, sil
 ins:test sil, sil
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0xa41a41a5
 ins:mov edx, 0xa41a41a5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mul edx
 ins:mul edx
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, ecx
 ins:mov eax, ecx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, edx
 ins:sub eax, edx
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included shr eax, 0x1
 ins:shr eax, 0x1
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included add edx, eax
 ins:add edx, eax
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x218cca]
 ins:lea rax, ptr [rip+0x218cca]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included shr edx, 0x5
 ins:shr edx, 0x5
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included imul edx, edx, 0x27
 ins:imul edx, edx, 0x27
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included sub ecx, edx
 ins:sub ecx, edx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rax+rcx*8]
 ins:mov rbx, qword ptr [rax+rcx*8]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rax+rcx*8]
 ins:lea r12, ptr [rax+rcx*8]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included test rbx, rbx
 ins:test rbx, rbx
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r12
 ins:mov rax, r12
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 ins:test ebx, ebx
 reg:rflags
 NORMAL FLAG REG: inst test ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rax]
 ins:mov rax, qword ptr [rax]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test byte ptr [rax+0x18], 0x1
 ins:test byte ptr [rax+0x18], 0x1
 reg:rflags
 NORMAL FLAG REG: inst test byte ptr [rax+0x18], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov edx, 0x0
 ins:mov edx, 0x0
 reg:edx
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz rax, rdx
 ins:cmovnz rax, rdx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rax+0x10]
 ins:mov rdi, qword ptr [rax+0x10]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rdi], 0x0
 ins:cmp byte ptr [rdi], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x21009b]
 ins:mov ecx, dword ptr [rip+0x21009b]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included test ecx, ecx
 ins:test ecx, ecx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xd
 ins:cmp eax, 0xd
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x20e485], 0x1
 ins:add dword ptr [rip+0x20e485], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x20e485], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x48
 ins:sub rsp, 0x48
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, dword ptr [rip+0x20bebf]
 ins:mov r14d, dword ptr [rip+0x20bebf]
 reg:r14d
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub eax, 0x7
 ins:sub eax, 0x7
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x14
 ins:cmp eax, 0x14
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x58c6]
 ins:lea rdx, ptr [rip+0x58c6]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rax, dword ptr [rdx+rax*4]
 ins:movsxd rax, dword ptr [rdx+rax*4]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x20ea84], 0x1
 ins:add dword ptr [rip+0x20ea84], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x20ea84], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, dword ptr [rip+0x20bd91]
 ins:mov r15d, dword ptr [rip+0x20bd91]
 reg:r15d
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x30]
 ins:lea rbp, ptr [rsp+0x30]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included lea r14, ptr [rsp+0x28]
 ins:lea r14, ptr [rsp+0x28]
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included lea r12, ptr [rsp+0x20]
 ins:lea r12, ptr [rsp+0x20]
 reg:r12
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, 0x1
 ins:mov ebx, 0x1
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included xor r13d, r13d
 ins:xor r13d, r13d
 reg:r13d
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xb
 ins:cmp eax, 0xb
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0xc
 ins:cmp eax, 0xc
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x7
 ins:cmp eax, 0x7
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 ins:mov edi, 0x20
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x20e5af]
 ins:mov rdx, qword ptr [rip+0x20e5af]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 ins:test ebx, ebx
 reg:rflags
 NORMAL FLAG REG: inst test ebx, ebx
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [r13+0x8]
 ins:lea rcx, ptr [r13+0x8]
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x20e585]
 ins:mov rax, qword ptr [rip+0x20e585]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 ins:xor ebx, ebx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rcx
 ins:mov r12, rcx
 reg:r12
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rdx
 ins:mov rdi, rdx
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rsp]
 ins:mov rdx, qword ptr [rsp]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rsp+0x8]
 ins:mov rcx, qword ptr [rsp+0x8]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdx, rax
 ins:cmp rdx, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rax], 0x3d
 ins:cmp byte ptr [rax], 0x3d
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rcx
 ins:mov r14, rcx
 reg:r14
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor ebx, ebx
 ins:xor ebx, ebx
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rcx
 ins:mov r12, rcx
 reg:r12
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x29
 ins:cmp ebx, 0x29
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x20
 ins:cmp ebx, 0x20
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x20e05a], 0x1
 ins:sub dword ptr [rip+0x20e05a], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x20e055]
 ins:mov rax, qword ptr [rip+0x20e055]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x1]
 ins:lea rdx, ptr [rax+0x1]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsx ebx, byte ptr [rax]
 ins:movsx ebx, byte ptr [rax]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x23
 ins:cmp ebx, 0x23
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x29
 ins:cmp ebx, 0x29
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x5c
 ins:cmp ebx, 0x5c
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x7c
 ins:cmp ebx, 0x7c
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x3b
 ins:cmp ebx, 0x3b
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, ebx
 ins:mov edi, ebx
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0x7f87]
 ins:lea rsi, ptr [rip+0x7f87]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included xor ecx, ecx
 ins:xor ecx, ecx
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included xor edx, edx
 ins:xor edx, edx
 reg:edx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x26
 ins:cmp ebx, 0x26
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp ebx, 0x28
 ins:cmp ebx, 0x28
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, 0x7
 ins:mov eax, 0x7
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x20]
 ins:mov rax, qword ptr [rsp+0x20]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, 0x8
 ins:add rax, 0x8
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12, rax
 ins:cmp r12, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rsp+0x28], 0x0
 ins:cmp qword ptr [rsp+0x28], 0x0
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x20ea1e], 0x1
 ins:add dword ptr [rip+0x20ea1e], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x20ea1e], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x20
 ins:mov edi, 0x20
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rax
 ins:mov r13, rax
 reg:r13
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x20]
 ins:mov rax, qword ptr [rsp+0x20]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x28]
 ins:mov rax, qword ptr [rsp+0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x30]
 ins:mov rax, qword ptr [rsp+0x30]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, qword ptr [rsp+0x38]
 ins:mov rsi, qword ptr [rsp+0x38]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included xor rsi, qword ptr fs:[0x28]
 ins:xor rsi, qword ptr fs:[0x28]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, r13
 ins:mov rax, r13
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x48
 ins:add rsp, 0x48
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x6
 ins:cmp eax, 0x6
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x20e468], 0x1
 ins:add dword ptr [rip+0x20e468], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x20e468], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, rbx
 ins:mov rax, rbx
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rax
 ins:mov rbx, rax
 reg:rbx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x4
 ins:cmp eax, 0x4
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, 0x5
 ins:mov r15d, 0x5
 reg:r15d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x5
 ins:cmp eax, 0x5
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r15d, 0x6
 ins:mov r15d, 0x6
 reg:r15d
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x20ed49], 0x1
 ins:add dword ptr [rip+0x20ed49], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x20ed49], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x3
 ins:cmp eax, 0x3
 reg:rflags
 NORMAL FLAG REG: inst cmp eax, 0x3
 Exe .text
 INSTSELECTOR: instruction to be included mov r14d, eax
 ins:mov r14d, eax
 reg:r14d
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rbp, rbp
 ins:test rbp, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x18
 ins:mov edi, 0x18
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14d, 0x1
 ins:cmp r14d, 0x1
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test r14d, r14d
 ins:test r14d, r14d
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r14d, 0x3
 ins:cmp r14d, 0x3
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r12d, 0x1
 ins:cmp r12d, 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or edi, 0xffffffff
 ins:or edi, 0xffffffff
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x50
 ins:sub rsp, 0x50
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdx, dword ptr [rip+0x2105dc]
 ins:movsxd rdx, dword ptr [rip+0x2105dc]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0x20ca3d]
 ins:lea rax, ptr [rip+0x20ca3d]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp edi, 0xffffffff
 ins:cmp edi, 0xffffffff
 reg:rflags
 NORMAL FLAG REG: inst cmp edi, 0xffffffff
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, qword ptr [rax+rdx*8]
 ins:mov rcx, qword ptr [rax+rdx*8]
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rdi, edi
 ins:movsxd rdi, edi
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rsp
 ins:mov rbx, rsp
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x710a]
 ins:lea rdx, ptr [rip+0x710a]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rax+rdi*8]
 ins:mov r8, qword ptr [rax+rdi*8]
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x40
 ins:mov esi, 0x40
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rsp
 ins:mov rbx, rsp
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rip+0x7102]
 ins:lea rdx, ptr [rip+0x7102]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x40
 ins:mov esi, 0x40
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x20d8ea]
 ins:mov eax, dword ptr [rip+0x20d8ea]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rdi
 ins:mov rsi, rdi
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x714e]
 ins:lea rdi, ptr [rip+0x714e]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xd8
 ins:sub rsp, 0xd8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 NORMAL FLAG REG: inst test al, al
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 ins:lea rax, ptr [rsp+0xe0]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rsp
 ins:mov rsi, rsp
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 ins:lea rax, ptr [rsp+0x20]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 ins:lea rax, ptr [rsp+0xe0]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rsp
 ins:mov rsi, rsp
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 ins:lea rax, ptr [rsp+0x20]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x219d39]
 ins:mov rdx, qword ptr [rip+0x219d39]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov r8, qword ptr [rip+0x217a0a]
 ins:mov r8, qword ptr [rip+0x217a0a]
 reg:r8
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xffa9]
 ins:lea rax, ptr [rip+0xffa9]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rsi
 ins:mov r12, rsi
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rip+0x217105]
 ins:mov rbx, qword ptr [rip+0x217105]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included lea rsi, ptr [rip+0xfef8]
 ins:lea rsi, ptr [rip+0xfef8]
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 NORMAL FLAG REG: inst test rdx, rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov ecx, dword ptr [rip+0x2179c9]
 ins:mov ecx, dword ptr [rip+0x2179c9]
 reg:ecx
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rdi
 ins:mov rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmovz rdx, rax
 ins:cmovz rdx, rax
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rip+0xfeea]
 ins:lea rax, ptr [rip+0xfeea]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included test r8, r8
 ins:test r8, r8
 reg:rflags
 NORMAL FLAG REG: inst test r8, r8
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmovnz rsi, rax
 ins:cmovnz rsi, rax
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xd8
 ins:sub rsp, 0xd8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included test al, al
 ins:test al, al
 reg:rflags
 NORMAL FLAG REG: inst test al, al
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 ins:lea rax, ptr [rsp+0xe0]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rsp
 ins:mov rdx, rsp
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 ins:lea rax, ptr [rsp+0x20]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0xe0]
 ins:lea rax, ptr [rsp+0xe0]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rsp
 ins:mov rdx, rsp
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x20]
 ins:lea rax, ptr [rsp+0x20]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r15
 ins:push r15
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, rsi
 ins:mov r14, rsi
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, rdx
 ins:mov r12, rdx
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x58
 ins:sub rsp, 0x58
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, qword ptr [rbx+0x8]
 ins:mov rbp, qword ptr [rbx+0x8]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rsp+0x30]
 ins:lea rcx, ptr [rsp+0x30]
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included movdqu xmm0, xmmword ptr [rdx]
 ins:movdqu xmm0, xmmword ptr [rdx]
 reg:xmm0
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x10]
 ins:mov rax, qword ptr [rdx+0x10]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rsi
 ins:mov rdx, rsi
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdi]
 ins:mov rdi, qword ptr [rdi]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included sub rbp, rdi
 ins:sub rbp, rdi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd r15, eax
 ins:movsxd r15, eax
 reg:r15
 Exe .text
 INSTSELECTOR: instruction to be included mov r13d, eax
 ins:mov r13d, eax
 reg:r13d
 Exe .text
 INSTSELECTOR: instruction to be included cmp r15, rbp
 ins:cmp r15, rbp
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add qword ptr [rbx], r15
 ins:add qword ptr [rbx], r15
 reg:rflags
 COMP2MEM: inst add qword ptr [rbx], r15
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x48]
 ins:mov rax, qword ptr [rsp+0x48]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rbp, ptr [rsp+0x10]
 ins:lea rbp, ptr [rsp+0x10]
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x20a2d4], r15
 ins:cmp qword ptr [rip+0x20a2d4], r15
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rip+0x20a2d4], r15
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, r15
 ins:mov rdi, r15
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmovnb rdi, qword ptr [rip+0x20a2c9]
 ins:cmovnb rdi, qword ptr [rip+0x20a2c9]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included add rdi, 0x1
 ins:add rdi, 0x1
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x200
 ins:mov edi, 0x200
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included mov ebp, 0x1f8
 ins:mov ebp, 0x1f8
 reg:ebp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x21009a], 0x1
 ins:add dword ptr [rip+0x21009a], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x21009a], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x20f74d]
 ins:mov rdx, qword ptr [rip+0x20f74d]
 reg:rdx
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, rbp
 ins:add rdx, rbp
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x210058], 0x1
 ins:sub dword ptr [rip+0x210058], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x210060]
 ins:mov eax, dword ptr [rip+0x210060]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x20f6f5]
 ins:mov rdx, qword ptr [rip+0x20f6f5]
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rip+0x20f6fe]
 ins:mov rax, qword ptr [rip+0x20f6fe]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included sub rdx, rbx
 ins:sub rdx, rbx
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rcx, ptr [rax+rbx*1]
 ins:lea rcx, ptr [rax+rbx*1]
 reg:rcx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea esi, ptr [r13+0x1]
 ins:lea esi, ptr [r13+0x1]
 reg:esi
 Exe .text
 INSTSELECTOR: instruction to be included mov rcx, r12
 ins:mov rcx, r12
 reg:rcx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r14
 ins:mov rdx, r14
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rax
 ins:mov rdi, rax
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included movsxd rsi, esi
 ins:movsxd rsi, esi
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp r13d, eax
 ins:cmp r13d, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or dword ptr [rbx+0x24], 0x1
 ins:or dword ptr [rbx+0x24], 0x1
 reg:rflags
 COMP2MEM: inst or dword ptr [rbx+0x24], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rsp+0x8]
 ins:mov rdi, qword ptr [rsp+0x8]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rbx
 ins:mov rdx, rbx
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r15
 ins:mov rsi, r15
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdi
 ins:mov r13, rdi
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, rsi
 ins:mov rbp, rsi
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rdx]
 ins:mov rdi, qword ptr [rdx]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdx
 ins:mov rbx, rdx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rdx+0x8]
 ins:mov rax, qword ptr [rdx+0x8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included sub rax, rdi
 ins:sub rax, rdi
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included cmp rax, rsi
 ins:cmp rax, rsi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov r12, qword ptr [rdx+0x18]
 ins:mov r12, qword ptr [rdx+0x18]
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included test r12, r12
 ins:test r12, r12
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rdx+0x10], 0x0
 ins:cmp qword ptr [rdx+0x10], 0x0
 reg:rflags
 NORMAL FLAG REG: inst cmp qword ptr [rdx+0x10], 0x0
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rdx+0x20]
 ins:mov eax, dword ptr [rdx+0x20]
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rbp, rax
 ins:cmp rbp, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rbp
 ins:mov rdx, rbp
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r13
 ins:mov rsi, r13
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rbx+0x20]
 ins:mov edi, dword ptr [rbx+0x20]
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rbp
 ins:mov rdx, rbp
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, r13
 ins:mov rsi, r13
 reg:rsi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdx, rdx
 ins:test rdx, rdx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push r14
 ins:push r14
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r14, 0x7fffffffffffffff
 ins:mov r14, 0x7fffffffffffffff
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included push r13
 ins:push r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r13, rdx
 ins:mov r13, rdx
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included push r12
 ins:push r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov r12d, edi
 ins:mov r12d, edi
 reg:r12d
 Exe .text
 INSTSELECTOR: instruction to be included push rbp
 ins:push rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rsi
 ins:mov rbx, rsi
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included test r13, r13
 ins:test r13, r13
 reg:rflags
 NORMAL FLAG REG: inst test r13, r13
 Exe .text
 INSTSELECTOR: instruction to be included mov rbp, r14
 ins:mov rbp, r14
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included cmovns rbp, r13
 ins:cmovns rbp, r13
 reg:rbp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rbp
 ins:mov rdx, rbp
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbx
 ins:mov rsi, rbx
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, r12d
 ins:mov edi, r12d
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rbx, rax
 ins:add rbx, rax
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included sub r13, rax
 ins:sub r13, rax
 reg:r13
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included or dword ptr [rbx+0x24], 0x1
 ins:or dword ptr [rbx+0x24], 0x1
 reg:rflags
 COMP2MEM: inst or dword ptr [rbx+0x24], 0x1
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:r12
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbp
 ins:mov rdi, rbp
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x20f5da]
 ins:mov rdi, qword ptr [rip+0x20f5da]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rbx], rdi
 ins:cmp qword ptr [rbx], rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rbx+0x8]
 ins:mov rax, qword ptr [rbx+0x8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rbx+0x10]
 ins:mov rdx, qword ptr [rbx+0x10]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rax, rdx
 ins:add rax, rdx
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x20fee6], 0x1
 ins:sub dword ptr [rip+0x20fee6], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x20feee]
 ins:mov eax, dword ptr [rip+0x20feee]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x48]
 ins:mov rax, qword ptr [rsp+0x48]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x58
 ins:add rsp, 0x58
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included pop r13
 ins:pop r13
 reg:r13
 Exe .text
 INSTSELECTOR: instruction to be included pop r14
 ins:pop r14
 reg:r14
 Exe .text
 INSTSELECTOR: instruction to be included pop r15
 ins:pop r15
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x18]
 ins:mov rax, qword ptr [rsp+0x18]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0xd8
 ins:add rsp, 0xd8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbp
 ins:mov rsi, rbp
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, rbx
 ins:mov rdi, rbx
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, r12
 ins:mov rdx, r12
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rax, rax
 ins:test rax, rax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, qword ptr [rip+0x20f74d]
 ins:mov rdx, qword ptr [rip+0x20f74d]
 reg:rdx
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdx, ptr [rax+0x8]
 ins:lea rdx, ptr [rax+0x8]
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rdx, rbp
 ins:add rdx, rbp
 reg:rdx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub dword ptr [rip+0x210058], 0x1
 ins:sub dword ptr [rip+0x210058], 0x1
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x210060]
 ins:mov eax, dword ptr [rip+0x210060]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rsi, rbx
 ins:mov rsi, rbx
 reg:rsi
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0xa
 ins:mov edi, 0xa
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included pop rbp
 ins:pop rbp
 reg:rbp
 Exe .text
 INSTSELECTOR: instruction to be included pop r12
 ins:pop r12
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x18
 ins:sub rsp, 0x18
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rdx, rsi
 ins:mov rdx, rsi
 reg:rdx
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x7]
 ins:lea rdi, ptr [rsp+0x7]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr [rsp+0x8]
 ins:mov rax, qword ptr [rsp+0x8]
 reg:rax
 Exe .text
 INSTSELECTOR: instruction to be included xor rax, qword ptr fs:[0x28]
 ins:xor rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x18
 ins:add rsp, 0x18
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rip+0x20a599]
 ins:lea rdi, ptr [rip+0x20a599]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, 0x1
 ins:mov edi, 0x1
 reg:edi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x21795d], 0x1
 ins:add dword ptr [rip+0x21795d], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x21795d], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x217958]
 ins:mov rdi, qword ptr [rip+0x217958]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included mov esi, 0x1
 ins:mov esi, 0x1
 reg:esi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x40]
 ins:lea rax, ptr [rsp+0x40]
 reg:rax
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0x8
 ins:sub rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x213a79]
 ins:mov rdi, qword ptr [rip+0x213a79]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included add dword ptr [rip+0x214064], 0x1
 ins:add dword ptr [rip+0x214064], 0x1
 reg:rflags
 COMP2MEM: inst add dword ptr [rip+0x214064], 0x1
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, qword ptr [rdi]
 ins:mov rbx, qword ptr [rdi]
 reg:rbx
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included lea rbx, ptr [rip+0x212518]
 ins:lea rbx, ptr [rip+0x212518]
 reg:rbx
 Exe .text
 INSTSELECTOR: instruction to be included cmp qword ptr [rip+0x211b39], rbx
 ins:cmp qword ptr [rip+0x211b39], rbx
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included pop rbx
 ins:pop rbx
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rip+0x20dbd9]
 ins:cmp rdi, qword ptr [rip+0x20dbd9]
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 INSTSELECTOR: instruction to be included add rsp, 0x8
 ins:add rsp, 0x8
 reg:rsp
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp rdi, qword ptr [rip+0x20ab09]
 ins:cmp rdi, qword ptr [rip+0x20ab09]
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included push rbx
 ins:push rbx
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rbx, rdi
 ins:mov rbx, rdi
 reg:rbx
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x219035]
 ins:mov eax, dword ptr [rip+0x219035]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov ebx, dword ptr [rsp+0x1c]
 ins:mov ebx, dword ptr [rsp+0x1c]
 reg:ebx
 Exe .text
 INSTSELECTOR: instruction to be included cmp eax, 0x4
 ins:cmp eax, 0x4
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test ebx, ebx
 ins:test ebx, ebx
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp byte ptr [rip+0x21b344], 0x0
 ins:cmp byte ptr [rip+0x21b344], 0x0
 reg:rflags
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included sub rsp, 0xe8
 ins:sub rsp, 0xe8
 reg:rsp
 Exe .text
 INSTSELECTOR: instruction to be included mov rax, qword ptr fs:[0x28]
 ins:mov rax, qword ptr fs:[0x28]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor eax, eax
 ins:xor eax, eax
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included mov eax, dword ptr [rip+0x20b350]
 ins:mov eax, dword ptr [rip+0x20b350]
 reg:eax
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x10]
 ins:lea rdi, ptr [rsp+0x10]
 reg:rdi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included cmp dword ptr [rip+0x20b327], 0x4
 ins:cmp dword ptr [rip+0x20b327], 0x4
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x10]
 ins:lea rdi, ptr [rsp+0x10]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov rdi, qword ptr [rip+0x20ae1b]
 ins:mov rdi, qword ptr [rip+0x20ae1b]
 reg:rdi
 Exe .text
 INSTSELECTOR: instruction to be included lea rax, ptr [rsp+0x10]
 ins:lea rax, ptr [rsp+0x10]
 reg:rax
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test rdi, rdi
 ins:test rdi, rdi
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor esi, esi
 ins:xor esi, esi
 reg:esi
 Exe .text
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included lea rdi, ptr [rsp+0x10]
 ins:lea rdi, ptr [rsp+0x10]
 reg:rdi
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included test eax, eax
 ins:test eax, eax
 reg:rflags
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included xor edi, edi
 ins:xor edi, edi
 reg:edi
 Exe .text
 Exe .text
 Exe .text
 INSTSELECTOR: instruction to be included mov edi, dword ptr [rsp+0xc]
 ins:mov edi, dword ptr [rsp+0xc]
 reg:edi
 Exe .text
